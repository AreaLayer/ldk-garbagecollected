/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_ldk_impl_bindings */

#ifndef _Included_org_ldk_impl_bindings
#define _Included_org_ldk_impl_bindings
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_ldk_impl_bindings
 * Method:    init
 * Signature: (Ljava/lang/Class;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_init
  (JNIEnv *, jclass, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    init_class_cache
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_init_1class_1cache
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_lib_version_string
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_get_1lib_1version_1string
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_ldk_c_bindings_version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_get_1ldk_1c_1bindings_1version
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_ldk_version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_get_1ldk_1version
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigEndianScalar_get_bytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BigEndianScalar_1get_1bytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigEndianScalar_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BigEndianScalar_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKBech32Error_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKBech32Error;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKBech32Error_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12SemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_u64Z_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_u64Z;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1u64Z_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKDecodeError_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKDecodeError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKDecodeError_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12ParseErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12ParseErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12ParseErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12ParseErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKRetry_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKRetry;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKRetry_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RetryDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RetryDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RetryDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RetryDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_ThirtyTwoBytesZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_ThirtyTwoBytesZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1ThirtyTwoBytesZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_CVec_u8ZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_CVec_u8ZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1CVec_1u8ZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64CVec_u8ZZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64CVec_1u8ZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64CVec_u8ZZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64CVec_1u8ZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKDNSResolverMessage_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKDNSResolverMessage;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKDNSResolverMessage_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageResponseInstructionZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageResponseInstructionZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageResponseInstructionZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageResponseInstructionZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C2Tuple_DNSResolverMessageResponseInstructionZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C2Tuple_DNSResolverMessageResponseInstructionZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C2Tuple_1DNSResolverMessageResponseInstructionZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKDestination_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKDestination;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKDestination_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKOffersContext_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKOffersContext;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKOffersContext_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKAsyncPaymentsContext_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKAsyncPaymentsContext;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKAsyncPaymentsContext_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMessageContext_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKMessageContext;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKMessageContext_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMessageSendInstructions_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKMessageSendInstructions;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKMessageSendInstructions_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageMessageSendInstructionsZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageMessageSendInstructionsZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageMessageSendInstructionsZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageMessageSendInstructionsZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverMessageDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverMessageDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverMessageDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverMessageDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSSECQueryDNSResolverContextZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSSECQueryDNSResolverContextZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSSECQueryDNSResolverContextZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSSECQueryDNSResolverContextZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_DNSSECQueryDNSResolverContextZNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1DNSSECQueryDNSResolverContextZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_DNSSECQueryDNSResolverContextZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1DNSSECQueryDNSResolverContextZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_HumanReadableNameThirtyTwoBytesZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1HumanReadableNameThirtyTwoBytesZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_HumanReadableNameThirtyTwoBytesZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1HumanReadableNameThirtyTwoBytesZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZ_get_a
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZ_get_a
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZ_get_b
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedBolt12InvoiceBolt12SemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedBolt12InvoiceBolt12SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedBolt12InvoiceBolt12SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedBolt12InvoiceBolt12SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceBolt12SemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceBolt12SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceBolt12SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceBolt12SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SchnorrSignatureNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1SchnorrSignatureNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SchnorrSignatureNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SchnorrSignatureNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_CVec_ThirtyTwoBytesZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_CVec_ThirtyTwoBytesZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1CVec_1ThirtyTwoBytesZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKAmount_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKAmount;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKAmount_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_AmountZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_AmountZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1AmountZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKQuantity_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKQuantity;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKQuantity_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_QuantityZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_QuantityZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1QuantityZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSpendableOutputDescriptor_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKSpendableOutputDescriptor;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKSpendableOutputDescriptor_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_u32Z_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_u32Z;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1u32Z_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_u8Zu64Z_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1u8Zu64Z_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_u8Zu64Z_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1u8Zu64Z_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_CVec_u8Zu64ZNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1CVec_1u8Zu64ZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_CVec_u8Zu64ZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1CVec_1u8Zu64ZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDerivationParametersDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDerivationParametersDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDerivationParametersDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDerivationParametersDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCDescriptorDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCDescriptorDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCDescriptorDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCDescriptorDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832NoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832NoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832NoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832NoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_BigEndianScalarZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_BigEndianScalarZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1BigEndianScalarZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ECDSASignatureNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1ECDSASignatureNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ECDSASignatureNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ECDSASignatureNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ECDSASignatureCVec_ECDSASignatureZZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ECDSASignatureCVec_ECDSASignatureZZ_get_b
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ECDSASignatureCVec_ECDSASignatureZZNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ECDSASignatureCVec_ECDSASignatureZZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKChannelSigner_new
 * Signature: (Lorg/ldk/impl/bindings/LDKChannelSigner;J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKChannelSigner_1new
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelSigner_get_per_commitment_point
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelSigner_1get_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelSigner_release_commitment_secret
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelSigner_1release_1commitment_1secret
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelSigner_validate_holder_commitment
 * Signature: (JJ[[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelSigner_1validate_1holder_1commitment
  (JNIEnv *, jclass, jlong, jlong, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelSigner_validate_counterparty_revocation
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelSigner_1validate_1counterparty_1revocation
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelSigner_channel_keys_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelSigner_1channel_1keys_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelSigner_provide_channel_parameters
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelSigner_1provide_1channel_1parameters
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelSigner_get_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelSigner_1get_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKEcdsaChannelSigner_new
 * Signature: (Lorg/ldk/impl/bindings/LDKEcdsaChannelSigner;Lorg/ldk/impl/bindings/LDKChannelSigner;J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKEcdsaChannelSigner_1new
  (JNIEnv *, jclass, jobject, jobject, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKEcdsaChannelSigner_get_ChannelSigner
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKEcdsaChannelSigner_1get_1ChannelSigner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_sign_counterparty_commitment
 * Signature: (JJ[[B[[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1sign_1counterparty_1commitment
  (JNIEnv *, jclass, jlong, jlong, jobjectArray, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_sign_holder_commitment
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1sign_1holder_1commitment
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_sign_justice_revoked_output
 * Signature: (J[BJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1sign_1justice_1revoked_1output
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_sign_justice_revoked_htlc
 * Signature: (J[BJJ[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1sign_1justice_1revoked_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_sign_holder_htlc_transaction
 * Signature: (J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1sign_1holder_1htlc_1transaction
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_sign_counterparty_htlc_transaction
 * Signature: (J[BJJ[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1sign_1counterparty_1htlc_1transaction
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_sign_closing_transaction
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1sign_1closing_1transaction
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_sign_holder_anchor_input
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1sign_1holder_1anchor_1input
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_sign_channel_announcement_with_funding_key
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1sign_1channel_1announcement_1with_1funding_1key
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_sign_splicing_funding_input
 * Signature: (J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1sign_1splicing_1funding_1input
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_EcdsaChannelSignerDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1EcdsaChannelSignerDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_EcdsaChannelSignerDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1EcdsaChannelSignerDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_u16Z_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_u16Z;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1u16Z_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_boolZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_boolZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1boolZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WitnessNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1WitnessNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WitnessNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1WitnessNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCandidateRouteHop_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCandidateRouteHop;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCandidateRouteHop_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKScoreLookUp_new
 * Signature: (Lorg/ldk/impl/bindings/LDKScoreLookUp;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKScoreLookUp_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoreLookUp_channel_penalty_msat
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ScoreLookUp_1channel_1penalty_1msat
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKScoreUpdate_new
 * Signature: (Lorg/ldk/impl/bindings/LDKScoreUpdate;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKScoreUpdate_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoreUpdate_payment_path_failed
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoreUpdate_1payment_1path_1failed
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoreUpdate_payment_path_successful
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoreUpdate_1payment_1path_1successful
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoreUpdate_probe_failed
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoreUpdate_1probe_1failed
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoreUpdate_probe_successful
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoreUpdate_1probe_1successful
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoreUpdate_time_passed
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoreUpdate_1time_1passed
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKLockableScore_new
 * Signature: (Lorg/ldk/impl/bindings/LDKLockableScore;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKLockableScore_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LockableScore_read_lock
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LockableScore_1read_1lock
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LockableScore_write_lock
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LockableScore_1write_1lock
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKWriteableScore_new
 * Signature: (Lorg/ldk/impl/bindings/LDKWriteableScore;Lorg/ldk/impl/bindings/LDKLockableScore;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKWriteableScore_1new
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKWriteableScore_get_LockableScore
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKWriteableScore_1get_1LockableScore
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WriteableScore_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_WriteableScore_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_WriteableScoreZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_WriteableScoreZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1WriteableScoreZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneIOErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneIOErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneIOErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/IOError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1NoneIOErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_get_c
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_1get_1c
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedPaymentPathZNoneZ_get_ok
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedPaymentPathZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedPaymentPathZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedPaymentPathZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InFlightHtlcsDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InFlightHtlcsDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InFlightHtlcsDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InFlightHtlcsDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedTailDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedTailDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedTailDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedTailDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentParametersDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentParametersDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentParametersDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentParametersDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FixedPenaltyScorerDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FixedPenaltyScorerDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FixedPenaltyScorerDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FixedPenaltyScorerDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u64Z_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u64Z_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u64Z_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u64Z_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C2Tuple_u64u64ZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C2Tuple_u64u64ZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C2Tuple_1u64u64ZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_Z_get_a
 * Signature: (J)[S
 */
JNIEXPORT jshortArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1Z_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_Z_get_b
 * Signature: (J)[S
 */
JNIEXPORT jshortArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1Z_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple__u1632_u1632Z_get_a
 * Signature: (J)[S
 */
JNIEXPORT jshortArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1_1u1632_1u1632Z_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple__u1632_u1632Z_get_b
 * Signature: (J)[S
 */
JNIEXPORT jshortArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1_1u1632_1u1632Z_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C2Tuple_ThirtyTwoU16sThirtyTwoU16sZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C2Tuple_ThirtyTwoU16sThirtyTwoU16sZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C2Tuple_1ThirtyTwoU16sThirtyTwoU16sZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_f64Z_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_f64Z;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1f64Z_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKLogger_new
 * Signature: (Lorg/ldk/impl/bindings/LDKLogger;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKLogger_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ProbabilisticScorerDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ProbabilisticScorerDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ProbabilisticScorerDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ProbabilisticScorerDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BestBlockDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BestBlockDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BestBlockDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BestBlockDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesu32COption_ThirtyTwoBytesZZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesu32COption_1ThirtyTwoBytesZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesu32COption_ThirtyTwoBytesZZ_get_b
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesu32COption_1ThirtyTwoBytesZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesu32COption_ThirtyTwoBytesZZ_get_c
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesu32COption_1ThirtyTwoBytesZZ_1get_1c
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateStatusNoneZ_get_ok
 * Signature: (J)Lorg/ldk/enums/ChannelMonitorUpdateStatus;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateStatusNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateStatusNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateStatusNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKClosureReason_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKClosureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKClosureReason_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMonitorEvent_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKMonitorEvent;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKMonitorEvent_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C4Tuple_OutPointChannelIdCVec_MonitorEventZPublicKeyZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C4Tuple_1OutPointChannelIdCVec_1MonitorEventZPublicKeyZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C4Tuple_OutPointChannelIdCVec_MonitorEventZPublicKeyZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C4Tuple_1OutPointChannelIdCVec_1MonitorEventZPublicKeyZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C4Tuple_OutPointChannelIdCVec_MonitorEventZPublicKeyZ_get_c
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_C4Tuple_1OutPointChannelIdCVec_1MonitorEventZPublicKeyZ_1get_1c
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C4Tuple_OutPointChannelIdCVec_MonitorEventZPublicKeyZ_get_d
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C4Tuple_1OutPointChannelIdCVec_1MonitorEventZPublicKeyZ_1get_1d
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferIdDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferIdDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferIdDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferIdDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12SemanticErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12SemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12ParseErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12ParseErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12ParseErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12ParseErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeySecp256k1ErrorZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeySecp256k1ErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeySecp256k1ErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Secp256k1Error;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeySecp256k1ErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKNetworkUpdate_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKNetworkUpdate;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKNetworkUpdate_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_NetworkUpdateZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_NetworkUpdateZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1NetworkUpdateZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutUtxoLookupErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutUtxoLookupErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutUtxoLookupErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/UtxoLookupError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutUtxoLookupErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKUtxoResult_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKUtxoResult;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKUtxoResult_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKUtxoLookup_new
 * Signature: (Lorg/ldk/impl/bindings/LDKUtxoLookup;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKUtxoLookup_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoLookup_get_utxo
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UtxoLookup_1get_1utxo
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_UtxoLookupZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_UtxoLookupZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1UtxoLookupZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_get_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_get_c
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1get_1c
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKErrorAction_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKErrorAction;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKErrorAction_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMessageSendEvent_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKMessageSendEvent;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKMessageSendEvent_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSocketAddress_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKSocketAddress;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKSocketAddress_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKNodeAnnouncementInfo_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKNodeAnnouncementInfo;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKNodeAnnouncementInfo_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAliasDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAliasDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAliasDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAliasDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_NodeAnnouncementInfoZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_NodeAnnouncementInfoZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1NodeAnnouncementInfoZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_CVec_SocketAddressZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_CVec_SocketAddressZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1CVec_1SocketAddressZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u64ShortChannelIdErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1u64ShortChannelIdErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u64ShortChannelIdErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/ShortChannelIdError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1u64ShortChannelIdErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoInboundHTLCErrZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoInboundHTLCErrZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoInboundHTLCErrZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoInboundHTLCErrZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_TxOutZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_TxOutZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1TxOutZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CoinSelectionNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CoinSelectionNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CoinSelectionNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CoinSelectionNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_UtxoZNoneZ_get_ok
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1UtxoZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_UtxoZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1UtxoZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPaymentContext_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKPaymentContext;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKPaymentContext_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_PaymentContextZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_PaymentContextZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1PaymentContextZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u16Z_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u16Z_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u16Z_get_b
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u16Z_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C2Tuple_u64u16ZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C2Tuple_u64u16ZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C2Tuple_1u64u16ZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKAPIError_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKAPIError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKAPIError_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdAPIErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdAPIErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdAPIErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdAPIErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKRecentPaymentDetails_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKRecentPaymentDetails;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKRecentPaymentDetails_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneRetryableSendFailureZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneRetryableSendFailureZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneRetryableSendFailureZ_get_err
 * Signature: (J)Lorg/ldk/enums/RetryableSendFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1NoneRetryableSendFailureZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_OffersContextZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_OffersContextZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1OffersContextZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKBolt12PaymentError_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKBolt12PaymentError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKBolt12PaymentError_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12PaymentErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12PaymentErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12PaymentErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12PaymentErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesRetryableSendFailureZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesRetryableSendFailureZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesRetryableSendFailureZ_get_err
 * Signature: (J)Lorg/ldk/enums/RetryableSendFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesRetryableSendFailureZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesThirtyTwoBytesZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesThirtyTwoBytesZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKProbeSendFailure_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKProbeSendFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKProbeSendFailure_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_get_ok
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ChannelIdPublicKeyZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ChannelIdPublicKeyZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ChannelIdPublicKeyZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ChannelIdPublicKeyZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyChannelIdZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyChannelIdZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyChannelIdZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyChannelIdZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C2Tuple_PublicKeyChannelIdZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C2Tuple_PublicKeyChannelIdZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C2Tuple_1PublicKeyChannelIdZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSignOrCreationError_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKSignOrCreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKSignOrCreationError_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceSignOrCreationErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceSignOrCreationErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceSignOrCreationErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceSignOrCreationErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_StrZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_StrZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1StrZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesAPIErrorZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesAPIErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesAPIErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesAPIErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKOffersMessage_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKOffersMessage;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKOffersMessage_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageResponseInstructionZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageResponseInstructionZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageResponseInstructionZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageResponseInstructionZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C2Tuple_OffersMessageResponseInstructionZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C2Tuple_OffersMessageResponseInstructionZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C2Tuple_1OffersMessageResponseInstructionZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageMessageSendInstructionsZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageMessageSendInstructionsZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageMessageSendInstructionsZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageMessageSendInstructionsZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ReleaseHeldHtlcResponseInstructionZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ReleaseHeldHtlcResponseInstructionZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ReleaseHeldHtlcResponseInstructionZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ReleaseHeldHtlcResponseInstructionZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C2Tuple_ReleaseHeldHtlcResponseInstructionZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C2Tuple_ReleaseHeldHtlcResponseInstructionZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C2Tuple_1ReleaseHeldHtlcResponseInstructionZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKAsyncPaymentsMessage_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKAsyncPaymentsMessage;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKAsyncPaymentsMessage_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_AsyncPaymentsMessageMessageSendInstructionsZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1AsyncPaymentsMessageMessageSendInstructionsZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_AsyncPaymentsMessageMessageSendInstructionsZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1AsyncPaymentsMessageMessageSendInstructionsZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PhantomRouteHintsDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PhantomRouteHintsDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PhantomRouteHintsDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PhantomRouteHintsDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedForwardDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedForwardDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedForwardDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedForwardDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPendingHTLCRouting_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKPendingHTLCRouting;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKPendingHTLCRouting_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCRoutingDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCRoutingDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCRoutingDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCRoutingDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedFailureDecodeErrorZ_get_ok
 * Signature: (J)Lorg/ldk/enums/BlindedFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedFailureDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedFailureDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedFailureDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKWatch_new
 * Signature: (Lorg/ldk/impl/bindings/LDKWatch;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKWatch_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Watch_watch_channel
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Watch_1watch_1channel
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Watch_update_channel
 * Signature: (JJJ)Lorg/ldk/enums/ChannelMonitorUpdateStatus;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Watch_1update_1channel
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Watch_release_pending_monitor_events
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Watch_1release_1pending_1monitor_1events
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKBroadcasterInterface_new
 * Signature: (Lorg/ldk/impl/bindings/LDKBroadcasterInterface;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKBroadcasterInterface_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BroadcasterInterface_broadcast_transactions
 * Signature: (J[[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BroadcasterInterface_1broadcast_1transactions
  (JNIEnv *, jclass, jlong, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKEntropySource_new
 * Signature: (Lorg/ldk/impl/bindings/LDKEntropySource;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKEntropySource_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EntropySource_get_secure_random_bytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_EntropySource_1get_1secure_1random_1bytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKUnsignedGossipMessage_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKUnsignedGossipMessage;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKUnsignedGossipMessage_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKNodeSigner_new
 * Signature: (Lorg/ldk/impl/bindings/LDKNodeSigner;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKNodeSigner_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeSigner_get_inbound_payment_key
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeSigner_1get_1inbound_1payment_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeSigner_get_node_id
 * Signature: (JLorg/ldk/enums/Recipient;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeSigner_1get_1node_1id
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeSigner_ecdh
 * Signature: (JLorg/ldk/enums/Recipient;[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeSigner_1ecdh
  (JNIEnv *, jclass, jlong, jobject, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeSigner_sign_invoice
 * Signature: (JJLorg/ldk/enums/Recipient;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeSigner_1sign_1invoice
  (JNIEnv *, jclass, jlong, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeSigner_sign_bolt12_invoice
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeSigner_1sign_1bolt12_1invoice
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeSigner_sign_gossip_message
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeSigner_1sign_1gossip_1message
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSignerProvider_new
 * Signature: (Lorg/ldk/impl/bindings/LDKSignerProvider;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKSignerProvider_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignerProvider_generate_channel_keys_id
 * Signature: (JZJ[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SignerProvider_1generate_1channel_1keys_1id
  (JNIEnv *, jclass, jlong, jboolean, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignerProvider_derive_channel_signer
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignerProvider_1derive_1channel_1signer
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignerProvider_read_chan_signer
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignerProvider_1read_1chan_1signer
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignerProvider_get_destination_script
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignerProvider_1get_1destination_1script
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignerProvider_get_shutdown_scriptpubkey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignerProvider_1get_1shutdown_1scriptpubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKFeeEstimator_new
 * Signature: (Lorg/ldk/impl/bindings/LDKFeeEstimator;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKFeeEstimator_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FeeEstimator_get_est_sat_per_1000_weight
 * Signature: (JLorg/ldk/enums/ConfirmationTarget;)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_FeeEstimator_1get_1est_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKRouter_new
 * Signature: (Lorg/ldk/impl/bindings/LDKRouter;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKRouter_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Router_find_route
 * Signature: (J[BJ[JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Router_1find_1route
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Router_find_route_with_id
 * Signature: (J[BJ[JJ[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Router_1find_1route_1with_1id
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlongArray, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Router_create_blinded_payment_paths
 * Signature: (J[B[JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Router_1create_1blinded_1payment_1paths
  (JNIEnv *, jclass, jlong, jbyteArray, jlongArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessagePathNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessagePathNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessagePathNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessagePathNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedMessagePathZNoneZ_get_ok
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedMessagePathZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedMessagePathZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedMessagePathZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMessageRouter_new
 * Signature: (Lorg/ldk/impl/bindings/LDKMessageRouter;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKMessageRouter_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageRouter_find_path
 * Signature: (J[B[[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageRouter_1find_1path
  (JNIEnv *, jclass, jlong, jbyteArray, jobjectArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageRouter_create_blinded_paths
 * Signature: (J[BJ[[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageRouter_1create_1blinded_1paths
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageRouter_create_compact_blinded_paths
 * Signature: (J[BJ[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageRouter_1create_1compact_1blinded_1paths
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelManagerZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelManagerZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelManagerZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelManagerZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelManagerZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelManagerZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelManagerZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelManagerZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMaxDustHTLCExposure_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKMaxDustHTLCExposure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKMaxDustHTLCExposure_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MaxDustHTLCExposureDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MaxDustHTLCExposureDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MaxDustHTLCExposureDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MaxDustHTLCExposureDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_MaxDustHTLCExposureZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_MaxDustHTLCExposureZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1MaxDustHTLCExposureZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_APIErrorZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_APIErrorZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1APIErrorZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_APIErrorZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1APIErrorZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_APIErrorZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1APIErrorZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_MonitorEventZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_MonitorEventZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1MonitorEventZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u8ZZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u8ZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u8ZZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u8ZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32CVec_u8ZZ_get_a
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32CVec_1u8ZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32CVec_u8ZZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32CVec_1u8ZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32CVec_u8ZZZZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32CVec_1u8ZZZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32CVec_u8ZZZZ_get_b
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32CVec_1u8ZZZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneReplayEventZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneReplayEventZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneReplayEventZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneReplayEventZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_get_a
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32TxOutZZZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32TxOutZZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32TxOutZZZ_get_b
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32TxOutZZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_boolboolZ_get_a
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_C2Tuple_1boolboolZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_boolboolZ_get_b
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_C2Tuple_1boolboolZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKBalance_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKBalance;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKBalance_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelMonitorZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelMonitorZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelMonitorZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelMonitorZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKType_new
 * Signature: (Lorg/ldk/impl/bindings/LDKType;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKType_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_type_id
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_Type_1type_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_debug_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Type_1debug_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Type_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKOnionMessageContents_new
 * Signature: (Lorg/ldk/impl/bindings/LDKOnionMessageContents;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKOnionMessageContents_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageContents_tlv_type
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessageContents_1tlv_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageContents_msg_type
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_OnionMessageContents_1msg_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageContents_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OnionMessageContents_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageContents_debug_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_OnionMessageContents_1debug_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsResponseInstructionZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsResponseInstructionZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsResponseInstructionZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsResponseInstructionZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C2Tuple_OnionMessageContentsResponseInstructionZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C2Tuple_OnionMessageContentsResponseInstructionZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C2Tuple_1OnionMessageContentsResponseInstructionZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_OnionMessageContentsZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_OnionMessageContentsZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1OnionMessageContentsZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OnionMessageContentsZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OnionMessageContentsZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OnionMessageContentsZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OnionMessageContentsZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsMessageSendInstructionsZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsMessageSendInstructionsZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsMessageSendInstructionsZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsMessageSendInstructionsZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_TypeZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_TypeZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1TypeZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_SocketAddressZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_SocketAddressZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1SocketAddressZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_get_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKGraphSyncError_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKGraphSyncError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKGraphSyncError_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u32GraphSyncErrorZ_get_ok
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_CResult_1u32GraphSyncErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u32GraphSyncErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1u32GraphSyncErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZIOErrorZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZIOErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZIOErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/IOError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZIOErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_StrZIOErrorZ_get_ok
 * Signature: (J)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1StrZIOErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_StrZIOErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/IOError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1StrZIOErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_StrStrStrZ_get_a
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_C3Tuple_1StrStrStrZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_StrStrStrZ_get_b
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_C3Tuple_1StrStrStrZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_StrStrStrZ_get_c
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_C3Tuple_1StrStrStrZ_1get_1c
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C3Tuple_StrStrStrZZIOErrorZ_get_ok
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C3Tuple_1StrStrStrZZIOErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C3Tuple_StrStrStrZZIOErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/IOError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C3Tuple_1StrStrStrZZIOErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesChannelMonitorZZIOErrorZ_get_ok
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesChannelMonitorZZIOErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesChannelMonitorZZIOErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/IOError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesChannelMonitorZZIOErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZIOErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZIOErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZIOErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/IOError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZIOErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MonitorNameIOErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MonitorNameIOErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MonitorNameIOErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/IOError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1MonitorNameIOErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateNameIOErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateNameIOErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateNameIOErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/IOError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateNameIOErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestBolt12SemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestBolt12SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestBolt12SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestBolt12SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_VerifiedInvoiceRequestNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1VerifiedInvoiceRequestNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_VerifiedInvoiceRequestNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1VerifiedInvoiceRequestNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestFieldsDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestFieldsDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestFieldsDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestFieldsDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_ECDSASignatureZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_ECDSASignatureZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1ECDSASignatureZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_i64Z_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_i64Z;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1i64Z_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressSocketAddressParseErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressSocketAddressParseErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressSocketAddressParseErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/SocketAddressParseError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressSocketAddressParseErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelV2DecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelV2DecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelV2DecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelV2DecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StfuDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StfuDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StfuDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StfuDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceInitDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceInitDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceInitDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceInitDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceAckDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceAckDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceAckDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceAckDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceLockedDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceLockedDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceLockedDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceLockedDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddInputDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddInputDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddInputDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddInputDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddOutputDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddOutputDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddOutputDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddOutputDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveInputDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveInputDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveInputDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveInputDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveOutputDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveOutputDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveOutputDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveOutputDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCompleteDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCompleteDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCompleteDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCompleteDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxSignaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxSignaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxSignaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxSignaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxInitRbfDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxInitRbfDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxInitRbfDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxInitRbfDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAckRbfDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAckRbfDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAckRbfDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAckRbfDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAbortDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAbortDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAbortDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAbortDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedBatchDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedBatchDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedBatchDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedBatchDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReadyDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReadyDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReadyDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReadyDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelV2DecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelV2DecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelV2DecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelV2DecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionPacketDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionPacketDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionPacketDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionPacketDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessageDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessageDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessageDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessageDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FinalOnionHopDataDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FinalOnionHopDataDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FinalOnionHopDataDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FinalOnionHopDataDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WarningMessageDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1WarningMessageDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WarningMessageDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1WarningMessageDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_InboundHTLCStateDetailsZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_InboundHTLCStateDetailsZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1InboundHTLCStateDetailsZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_InboundHTLCStateDetailsZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1InboundHTLCStateDetailsZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_InboundHTLCStateDetailsZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1InboundHTLCStateDetailsZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InboundHTLCDetailsDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InboundHTLCDetailsDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InboundHTLCDetailsDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InboundHTLCDetailsDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_OutboundHTLCStateDetailsZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_OutboundHTLCStateDetailsZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1OutboundHTLCStateDetailsZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OutboundHTLCStateDetailsZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OutboundHTLCStateDetailsZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OutboundHTLCStateDetailsZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OutboundHTLCStateDetailsZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutboundHTLCDetailsDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutboundHTLCDetailsDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutboundHTLCDetailsDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutboundHTLCDetailsDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyForwardingInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyForwardingInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyForwardingInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyForwardingInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelCounterpartyDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelCounterpartyDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelCounterpartyDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelCounterpartyDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_ChannelShutdownStateZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_ChannelShutdownStateZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1ChannelShutdownStateZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDetailsDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDetailsDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDetailsDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDetailsDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelShutdownStateDecodeErrorZ_get_ok
 * Signature: (J)Lorg/ldk/enums/ChannelShutdownState;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelShutdownStateDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelShutdownStateDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelShutdownStateDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HeldHtlcAvailableDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HeldHtlcAvailableDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HeldHtlcAvailableDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HeldHtlcAvailableDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReleaseHeldHtlcDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReleaseHeldHtlcDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReleaseHeldHtlcDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReleaseHeldHtlcDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsMessageDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsMessageDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsMessageDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsMessageDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersMessageDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersMessageDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersMessageDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersMessageDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_HTLCClaimZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_HTLCClaimZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1HTLCClaimZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyCommitmentSecretsDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyCommitmentSecretsDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyCommitmentSecretsDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyCommitmentSecretsDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedClosingTransactionNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedClosingTransactionNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedClosingTransactionNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedClosingTransactionNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedCommitmentTransactionNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedCommitmentTransactionNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedCommitmentTransactionNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedCommitmentTransactionNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_ECDSASignatureZNoneZ_get_ok
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1ECDSASignatureZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_ECDSASignatureZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1ECDSASignatureZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_usizeZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_usizeZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1usizeZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKFundingInfo_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKFundingInfo;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKFundingInfo_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPaymentPurpose_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKPaymentPurpose;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKPaymentPurpose_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPurposeDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPurposeDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPurposeDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPurposeDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClaimedHTLCDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClaimedHTLCDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClaimedHTLCDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClaimedHTLCDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPathFailure_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKPathFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKPathFailure_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_PathFailureZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_PathFailureZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1PathFailureZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PathFailureZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PathFailureZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PathFailureZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PathFailureZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_ClosureReasonZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_ClosureReasonZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1ClosureReasonZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKHTLCDestination_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKHTLCDestination;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKHTLCDestination_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_HTLCDestinationZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_HTLCDestinationZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1HTLCDestinationZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_HTLCDestinationZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1HTLCDestinationZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_HTLCDestinationZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1HTLCDestinationZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_PaymentFailureReasonZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_PaymentFailureReasonZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1PaymentFailureReasonZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PaymentFailureReasonZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PaymentFailureReasonZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PaymentFailureReasonZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PaymentFailureReasonZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_U128Z_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_U128Z;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1U128Z_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKInboundChannelFunds_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKInboundChannelFunds;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKInboundChannelFunds_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKBumpTransactionEvent_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKBumpTransactionEvent;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKBumpTransactionEvent_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKEvent_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKEvent;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKEvent_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_EventZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_EventZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1EventZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonceDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonceDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonceDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonceDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixBolt11ParseErrorZ_get_ok
 * Signature: (J)Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixBolt11ParseErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixBolt11ParseErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixBolt11ParseErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKParseOrSemanticError_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKParseOrSemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKParseOrSemanticError_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceParseOrSemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceParseOrSemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceParseOrSemanticErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceParseOrSemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawBolt11InvoiceBolt11ParseErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawBolt11InvoiceBolt11ParseErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawBolt11InvoiceBolt11ParseErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawBolt11InvoiceBolt11ParseErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawBolt11Invoice_u832Bolt11InvoiceSignatureZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawBolt11Invoice_1u832Bolt11InvoiceSignatureZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawBolt11Invoice_u832Bolt11InvoiceSignatureZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawBolt11Invoice_1u832Bolt11InvoiceSignatureZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawBolt11Invoice_u832Bolt11InvoiceSignatureZ_get_c
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawBolt11Invoice_1u832Bolt11InvoiceSignatureZ_1get_1c
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeySecp256k1ErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeySecp256k1ErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeySecp256k1ErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Secp256k1Error;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeySecp256k1ErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt11SemanticErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt11SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt11SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt11SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceBolt11SemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceBolt11SemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceBolt11SemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceBolt11SemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BigSizeDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BigSizeDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BigSizeDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BigSizeDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UntrustedStringDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UntrustedStringDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UntrustedStringDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UntrustedStringDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HostnameDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HostnameDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HostnameDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HostnameDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple__u832u16Z_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1_1u832u16Z_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple__u832u16Z_get_b
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_C2Tuple_1_1u832u16Z_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPayInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPayInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPayInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPayInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPaymentPathNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPaymentPathNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPaymentPathNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPaymentPathNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentRelayDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentRelayDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentRelayDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentRelayDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentConstraintsDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentConstraintsDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentConstraintsDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentConstraintsDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentContextDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentContextDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentContextDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentContextDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12OfferContextDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12OfferContextDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12OfferContextDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12OfferContextDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12RefundContextDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12RefundContextDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12RefundContextDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12RefundContextDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ResponderDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ResponderDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ResponderDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ResponderDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_MessageContextZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_MessageContextZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1MessageContextZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZ_get_c
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZ_1get_1c
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSendError_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKSendError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKSendError_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZSendErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZSendErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZSendErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZSendErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKNextMessageHop_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKNextMessageHop;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKNextMessageHop_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKParsedOnionMessageContents_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKParsedOnionMessageContents;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKParsedOnionMessageContents_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPeeledOnion_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKPeeledOnion;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKPeeledOnion_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PeeledOnionNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PeeledOnionNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PeeledOnionNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PeeledOnionNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSendSuccess_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKSendSuccess;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKSendSuccess_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SendSuccessSendErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SendSuccessSendErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SendSuccessSendErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SendSuccessSendErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSendErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSendErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSendErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSendErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceErrorDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceErrorDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceErrorDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceErrorDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrackedSpendableOutputDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrackedSpendableOutputDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrackedSpendableOutputDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrackedSpendableOutputDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKOutputSpendStatus_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKOutputSpendStatus;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKOutputSpendStatus_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSpendStatusDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSpendStatusDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSpendStatusDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSpendStatusDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKFilter_new
 * Signature: (Lorg/ldk/impl/bindings/LDKFilter;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKFilter_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Filter_register_tx
 * Signature: (J[B[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Filter_1register_1tx
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Filter_register_output
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Filter_1register_1output
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_FilterZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_FilterZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1FilterZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKChangeDestinationSource_new
 * Signature: (Lorg/ldk/impl/bindings/LDKChangeDestinationSource;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKChangeDestinationSource_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChangeDestinationSource_get_change_destination_script
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChangeDestinationSource_1get_1change_1destination_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKKVStore_new
 * Signature: (Lorg/ldk/impl/bindings/LDKKVStore;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKKVStore_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KVStore_read
 * Signature: (JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KVStore_1read
  (JNIEnv *, jclass, jlong, jstring, jstring, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KVStore_write
 * Signature: (JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KVStore_1write
  (JNIEnv *, jclass, jlong, jstring, jstring, jstring, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KVStore_remove
 * Signature: (JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KVStore_1remove
  (JNIEnv *, jclass, jlong, jstring, jstring, jstring, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KVStore_list
 * Signature: (JLjava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KVStore_1list
  (JNIEnv *, jclass, jlong, jstring, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKOutputSpender_new
 * Signature: (Lorg/ldk/impl/bindings/LDKOutputSpender;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKOutputSpender_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSpender_spend_spendable_outputs
 * Signature: (J[J[J[BIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSpender_1spend_1spendable_1outputs
  (JNIEnv *, jclass, jlong, jlongArray, jlongArray, jbyteArray, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSweeperDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSweeperDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSweeperDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSweeperDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BestBlockOutputSweeperZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BestBlockOutputSweeperZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BestBlockOutputSweeperZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BestBlockOutputSweeperZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BestBlockOutputSweeperZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BestBlockOutputSweeperZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BestBlockOutputSweeperZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BestBlockOutputSweeperZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentBasepointDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentBasepointDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentBasepointDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentBasepointDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentKeyDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentKeyDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentKeyDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentKeyDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcBasepointDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcBasepointDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcBasepointDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcBasepointDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcKeyDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcKeyDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcKeyDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcKeyDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationBasepointDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationBasepointDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationBasepointDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationBasepointDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationKeyDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationKeyDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationKeyDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationKeyDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_LockedChannelMonitorNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1LockedChannelMonitorNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_LockedChannelMonitorNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1LockedChannelMonitorNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointChannelIdZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointChannelIdZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointChannelIdZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointChannelIdZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u64ZZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u64ZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u64ZZ_get_b
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u64ZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MessageContextDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MessageContextDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MessageContextDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MessageContextDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersContextDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersContextDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersContextDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersContextDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsContextDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsContextDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsContextDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsContextDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverContextDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverContextDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverContextDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverContextDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMigratableKVStore_new
 * Signature: (Lorg/ldk/impl/bindings/LDKMigratableKVStore;Lorg/ldk/impl/bindings/LDKKVStore;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKMigratableKVStore_1new
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMigratableKVStore_get_KVStore
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKMigratableKVStore_1get_1KVStore
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MigratableKVStore_list_all_keys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MigratableKVStore_1list_1all_1keys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPersister_new
 * Signature: (Lorg/ldk/impl/bindings/LDKPersister;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKPersister_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Persister_persist_manager
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Persister_1persist_1manager
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Persister_persist_graph
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Persister_1persist_1graph
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Persister_persist_scorer
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Persister_1persist_1scorer
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPersist_new
 * Signature: (Lorg/ldk/impl/bindings/LDKPersist;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKPersist_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Persist_persist_new_channel
 * Signature: (JJJ)Lorg/ldk/enums/ChannelMonitorUpdateStatus;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Persist_1persist_1new_1channel
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Persist_update_persisted_channel
 * Signature: (JJJJ)Lorg/ldk/enums/ChannelMonitorUpdateStatus;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Persist_1update_1persisted_1channel
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Persist_archive_persisted_channel
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Persist_1archive_1persisted_1channel
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKListen_new
 * Signature: (Lorg/ldk/impl/bindings/LDKListen;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKListen_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Listen_filtered_block_connected
 * Signature: (J[B[JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Listen_1filtered_1block_1connected
  (JNIEnv *, jclass, jlong, jbyteArray, jlongArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Listen_block_connected
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Listen_1block_1connected
  (JNIEnv *, jclass, jlong, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Listen_block_disconnected
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Listen_1block_1disconnected
  (JNIEnv *, jclass, jlong, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKConfirm_new
 * Signature: (Lorg/ldk/impl/bindings/LDKConfirm;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKConfirm_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Confirm_transactions_confirmed
 * Signature: (J[B[JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Confirm_1transactions_1confirmed
  (JNIEnv *, jclass, jlong, jbyteArray, jlongArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Confirm_transaction_unconfirmed
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Confirm_1transaction_1unconfirmed
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Confirm_best_block_updated
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Confirm_1best_1block_1updated
  (JNIEnv *, jclass, jlong, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Confirm_get_relevant_txids
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Confirm_1get_1relevant_1txids
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSpendingDelay_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKSpendingDelay;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKSpendingDelay_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKFutureCallback_new
 * Signature: (Lorg/ldk/impl/bindings/LDKFutureCallback;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKFutureCallback_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FutureCallback_call
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FutureCallback_1call
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKEventHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKEventHandler;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKEventHandler_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EventHandler_handle_event
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EventHandler_1handle_1event
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKEventsProvider_new
 * Signature: (Lorg/ldk/impl/bindings/LDKEventsProvider;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKEventsProvider_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EventsProvider_process_pending_events
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_EventsProvider_1process_1pending_1events
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKVerification_new
 * Signature: (Lorg/ldk/impl/bindings/LDKVerification;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKVerification_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Verification_hmac_for_offer_payment
 * Signature: (JJJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Verification_1hmac_1for_1offer_1payment
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Verification_verify_for_offer_payment
 * Signature: (J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Verification_1verify_1for_1offer_1payment
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKFailureCode_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKFailureCode;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKFailureCode_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKBolt11InvoiceDescription_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKBolt11InvoiceDescription;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKBolt11InvoiceDescription_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMessageSendEventsProvider_new
 * Signature: (Lorg/ldk/impl/bindings/LDKMessageSendEventsProvider;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKMessageSendEventsProvider_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEventsProvider_get_and_clear_pending_msg_events
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_MessageSendEventsProvider_1get_1and_1clear_1pending_1msg_1events
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKChannelMessageHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKChannelMessageHandler;Lorg/ldk/impl/bindings/LDKMessageSendEventsProvider;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKChannelMessageHandler_1new
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKChannelMessageHandler_get_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKChannelMessageHandler_1get_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_open_channel
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1open_1channel
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_open_channel_v2
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1open_1channel_1v2
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_accept_channel
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1accept_1channel
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_accept_channel_v2
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1accept_1channel_1v2
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_funding_created
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1funding_1created
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_funding_signed
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1funding_1signed
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_channel_ready
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1channel_1ready
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_shutdown
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1shutdown
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_closing_signed
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1closing_1signed
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_stfu
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1stfu
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_tx_add_input
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1tx_1add_1input
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_tx_add_output
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1tx_1add_1output
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_tx_remove_input
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1tx_1remove_1input
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_tx_remove_output
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1tx_1remove_1output
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_tx_complete
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1tx_1complete
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_tx_signatures
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1tx_1signatures
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_tx_init_rbf
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1tx_1init_1rbf
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_tx_ack_rbf
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1tx_1ack_1rbf
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_tx_abort
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1tx_1abort
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_update_add_htlc
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1update_1add_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_update_fulfill_htlc
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1update_1fulfill_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_update_fail_htlc
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1update_1fail_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_update_fail_malformed_htlc
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1update_1fail_1malformed_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_commitment_signed
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1commitment_1signed
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_revoke_and_ack
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1revoke_1and_1ack
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_update_fee
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1update_1fee
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_announcement_signatures
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1announcement_1signatures
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_peer_disconnected
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1peer_1disconnected
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_peer_connected
 * Signature: (J[BJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1peer_1connected
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_channel_reestablish
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1channel_1reestablish
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_channel_update
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1channel_1update
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_error
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1error
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_provided_node_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1provided_1node_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_provided_init_features
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1provided_1init_1features
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_get_chain_hashes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1get_1chain_1hashes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_message_received
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1message_1received
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKOffersMessageHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKOffersMessageHandler;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKOffersMessageHandler_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessageHandler_handle_message
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersMessageHandler_1handle_1message
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessageHandler_release_pending_messages
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_OffersMessageHandler_1release_1pending_1messages
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKAsyncPaymentsMessageHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKAsyncPaymentsMessageHandler;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKAsyncPaymentsMessageHandler_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessageHandler_handle_held_htlc_available
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessageHandler_1handle_1held_1htlc_1available
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessageHandler_handle_release_held_htlc
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessageHandler_1handle_1release_1held_1htlc
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessageHandler_release_pending_messages
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessageHandler_1release_1pending_1messages
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKDNSResolverMessageHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKDNSResolverMessageHandler;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKDNSResolverMessageHandler_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessageHandler_handle_dnssec_query
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverMessageHandler_1handle_1dnssec_1query
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessageHandler_handle_dnssec_proof
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DNSResolverMessageHandler_1handle_1dnssec_1proof
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessageHandler_provided_node_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverMessageHandler_1provided_1node_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessageHandler_release_pending_messages
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_DNSResolverMessageHandler_1release_1pending_1messages
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKNodeIdLookUp_new
 * Signature: (Lorg/ldk/impl/bindings/LDKNodeIdLookUp;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKNodeIdLookUp_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeIdLookUp_next_node_id
 * Signature: (JJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeIdLookUp_1next_1node_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKRoutingMessageHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKRoutingMessageHandler;Lorg/ldk/impl/bindings/LDKMessageSendEventsProvider;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKRoutingMessageHandler_1new
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKRoutingMessageHandler_get_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKRoutingMessageHandler_1get_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_node_announcement
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1node_1announcement
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_channel_announcement
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1channel_1announcement
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_channel_update
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1channel_1update
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_get_next_channel_announcement
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1get_1next_1channel_1announcement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_get_next_node_announcement
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1get_1next_1node_1announcement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_peer_connected
 * Signature: (J[BJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1peer_1connected
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_reply_channel_range
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1reply_1channel_1range
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_reply_short_channel_ids_end
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1reply_1short_1channel_1ids_1end
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_query_channel_range
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1query_1channel_1range
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_query_short_channel_ids
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1query_1short_1channel_1ids
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_processing_queue_high
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1processing_1queue_1high
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_provided_node_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1provided_1node_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_provided_init_features
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1provided_1init_1features
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKOnionMessageHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKOnionMessageHandler;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKOnionMessageHandler_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageHandler_handle_onion_message
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessageHandler_1handle_1onion_1message
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageHandler_next_onion_message_for_peer
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessageHandler_1next_1onion_1message_1for_1peer
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageHandler_peer_connected
 * Signature: (J[BJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessageHandler_1peer_1connected
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageHandler_peer_disconnected
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessageHandler_1peer_1disconnected
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageHandler_timer_tick_occurred
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessageHandler_1timer_1tick_1occurred
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageHandler_provided_node_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessageHandler_1provided_1node_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageHandler_provided_init_features
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessageHandler_1provided_1init_1features
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCustomMessageReader_new
 * Signature: (Lorg/ldk/impl/bindings/LDKCustomMessageReader;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCustomMessageReader_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageReader_read
 * Signature: (JS[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CustomMessageReader_1read
  (JNIEnv *, jclass, jlong, jshort, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCustomMessageHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKCustomMessageHandler;Lorg/ldk/impl/bindings/LDKCustomMessageReader;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCustomMessageHandler_1new
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCustomMessageHandler_get_CustomMessageReader
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCustomMessageHandler_1get_1CustomMessageReader
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageHandler_handle_custom_message
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CustomMessageHandler_1handle_1custom_1message
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageHandler_get_and_clear_pending_msg
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CustomMessageHandler_1get_1and_1clear_1pending_1msg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageHandler_peer_disconnected
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CustomMessageHandler_1peer_1disconnected
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageHandler_peer_connected
 * Signature: (J[BJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CustomMessageHandler_1peer_1connected
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageHandler_provided_node_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CustomMessageHandler_1provided_1node_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageHandler_provided_init_features
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CustomMessageHandler_1provided_1init_1features
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCustomOnionMessageHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKCustomOnionMessageHandler;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCustomOnionMessageHandler_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomOnionMessageHandler_handle_custom_message
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CustomOnionMessageHandler_1handle_1custom_1message
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomOnionMessageHandler_read_custom_message
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CustomOnionMessageHandler_1read_1custom_1message
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomOnionMessageHandler_release_pending_custom_messages
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CustomOnionMessageHandler_1release_1pending_1custom_1messages
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSocketDescriptor_new
 * Signature: (Lorg/ldk/impl/bindings/LDKSocketDescriptor;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKSocketDescriptor_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_send_data
 * Signature: (J[BZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1send_1data
  (JNIEnv *, jclass, jlong, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_disconnect_socket
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1disconnect_1socket
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSignBolt12InvoiceFn_new
 * Signature: (Lorg/ldk/impl/bindings/LDKSignBolt12InvoiceFn;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKSignBolt12InvoiceFn_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignBolt12InvoiceFn_sign_invoice
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignBolt12InvoiceFn_1sign_1invoice
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSignInvoiceRequestFn_new
 * Signature: (Lorg/ldk/impl/bindings/LDKSignInvoiceRequestFn;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKSignInvoiceRequestFn_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignInvoiceRequestFn_sign_invoice_request
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignInvoiceRequestFn_1sign_1invoice_1request
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSignError_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKSignError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKSignError_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKEffectiveCapacity_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKEffectiveCapacity;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKEffectiveCapacity_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPayee_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKPayee;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKPayee_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKScore_new
 * Signature: (Lorg/ldk/impl/bindings/LDKScore;Lorg/ldk/impl/bindings/LDKScoreLookUp;Lorg/ldk/impl/bindings/LDKScoreUpdate;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKScore_1new
  (JNIEnv *, jclass, jobject, jobject, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKScore_get_ScoreLookUp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKScore_1get_1ScoreLookUp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKScore_get_ScoreUpdate
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKScore_1get_1ScoreUpdate
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Score_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Score_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKIntroductionNode_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKIntroductionNode;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKIntroductionNode_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCoinSelectionSource_new
 * Signature: (Lorg/ldk/impl/bindings/LDKCoinSelectionSource;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCoinSelectionSource_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CoinSelectionSource_select_confirmed_utxos
 * Signature: (J[B[J[JI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CoinSelectionSource_1select_1confirmed_1utxos
  (JNIEnv *, jclass, jlong, jbyteArray, jlongArray, jlongArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CoinSelectionSource_sign_psbt
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CoinSelectionSource_1sign_1psbt
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKWalletSource_new
 * Signature: (Lorg/ldk/impl/bindings/LDKWalletSource;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKWalletSource_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WalletSource_list_confirmed_utxos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WalletSource_1list_1confirmed_1utxos
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WalletSource_get_change_script
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WalletSource_1get_1change_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WalletSource_sign_psbt
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WalletSource_1sign_1psbt
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKGossipSync_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKGossipSync;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKGossipSync_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKFallback_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKFallback;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKFallback_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    _ldk_get_compiled_version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings__1ldk_1get_1compiled_1version
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    _ldk_c_bindings_get_compiled_version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings__1ldk_1c_1bindings_1get_1compiled_1version
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    U128_le_bytes
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_U128_1le_1bytes
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    U128_new
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_U128_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WitnessProgram_new
 * Signature: (B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WitnessProgram_1new
  (JNIEnv *, jclass, jbyte, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WitnessProgram_get_version
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_WitnessProgram_1get_1version
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WitnessProgram_get_program
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_WitnessProgram_1get_1program
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WitnessProgram_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WitnessProgram_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WitnessProgram_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WitnessProgram_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WitnessProgram_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WitnessProgram_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigEndianScalar_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BigEndianScalar_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigEndianScalar_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BigEndianScalar_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigEndianScalar_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BigEndianScalar_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bech32Error_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bech32Error_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bech32Error_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bech32Error_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bech32Error_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bech32Error_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Transaction_free
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Transaction_1free
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Witness_free
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Witness_1free
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxIn_new
 * Signature: ([B[BI[BI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxIn_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxIn_get_witness
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxIn_1get_1witness
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxIn_get_script_sig
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxIn_1get_1script_1sig
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxIn_get_sequence
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_TxIn_1get_1sequence
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxIn_get_previous_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxIn_1get_1previous_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxIn_get_previous_vout
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_TxIn_1get_1previous_1vout
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxIn_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxIn_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxOut_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_get_script_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxOut_1get_1script_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_get_value
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxOut_1get_1value
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxOut_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxOut_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxOut_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Str_free
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Str_1free
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_u8Z_free
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1u8Z_1free
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt12SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundMaybeWithDerivedMetadataBuilderBolt12SemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12SemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12SemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt12SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12SemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12SemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12SemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12SemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u64Z_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u64Z_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u64Z_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u64Z_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u64Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1u64Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u64Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u64Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u64Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u64Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_BlindedMessagePathZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1BlindedMessagePathZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RefundDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RefundDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12ParseErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12ParseErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12ParseErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12ParseErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12ParseErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12ParseErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12ParseErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12ParseErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12ParseErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12ParseErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RefundBolt12ParseErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RefundBolt12ParseErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RetryDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RetryDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RetryDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RetryDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RetryDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RetryDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RetryDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RetryDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RetryDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RetryDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RetryDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RetryDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ThirtyTwoBytesZ_some
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ThirtyTwoBytesZ_1some
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ThirtyTwoBytesZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ThirtyTwoBytesZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ThirtyTwoBytesZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1ThirtyTwoBytesZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ThirtyTwoBytesZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ThirtyTwoBytesZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ThirtyTwoBytesZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ThirtyTwoBytesZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_u8ZZ_some
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1u8ZZ_1some
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_u8ZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1u8ZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_u8ZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1u8ZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_u8ZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1u8ZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_u8ZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1u8ZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64CVec_u8ZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64CVec_1u8ZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64CVec_u8ZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64CVec_1u8ZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64CVec_u8ZZ_new
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64CVec_1u8ZZ_1new
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64CVec_u8ZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64CVec_1u8ZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_u64CVec_u8ZZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1u64CVec_1u8ZZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecipientOnionFieldsNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecipientOnionFieldsNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageResponseInstructionZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageResponseInstructionZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageResponseInstructionZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageResponseInstructionZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageResponseInstructionZ_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageResponseInstructionZ_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageResponseInstructionZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageResponseInstructionZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_DNSResolverMessageResponseInstructionZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1DNSResolverMessageResponseInstructionZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_DNSResolverMessageResponseInstructionZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1DNSResolverMessageResponseInstructionZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_DNSResolverMessageResponseInstructionZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1DNSResolverMessageResponseInstructionZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_DNSResolverMessageResponseInstructionZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1DNSResolverMessageResponseInstructionZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_DNSResolverMessageResponseInstructionZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1DNSResolverMessageResponseInstructionZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageMessageSendInstructionsZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageMessageSendInstructionsZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageMessageSendInstructionsZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageMessageSendInstructionsZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageMessageSendInstructionsZ_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageMessageSendInstructionsZ_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSResolverMessageMessageSendInstructionsZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSResolverMessageMessageSendInstructionsZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_DNSResolverMessageMessageSendInstructionsZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1DNSResolverMessageMessageSendInstructionsZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverMessageDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverMessageDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverMessageDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverMessageDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverMessageDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverMessageDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverMessageDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverMessageDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverMessageDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverMessageDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverMessageDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverMessageDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HumanReadableNameDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HumanReadableNameDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSSECQueryDNSResolverContextZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSSECQueryDNSResolverContextZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSSECQueryDNSResolverContextZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSSECQueryDNSResolverContextZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSSECQueryDNSResolverContextZ_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSSECQueryDNSResolverContextZ_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_DNSSECQueryDNSResolverContextZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1DNSSECQueryDNSResolverContextZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_DNSSECQueryDNSResolverContextZNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1DNSSECQueryDNSResolverContextZNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_DNSSECQueryDNSResolverContextZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1DNSSECQueryDNSResolverContextZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_DNSSECQueryDNSResolverContextZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1DNSSECQueryDNSResolverContextZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_DNSSECQueryDNSResolverContextZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1DNSSECQueryDNSResolverContextZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_DNSSECQueryDNSResolverContextZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1DNSSECQueryDNSResolverContextZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_DNSSECQueryDNSResolverContextZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1DNSSECQueryDNSResolverContextZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_HumanReadableNameThirtyTwoBytesZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1HumanReadableNameThirtyTwoBytesZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_HumanReadableNameThirtyTwoBytesZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1HumanReadableNameThirtyTwoBytesZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_HumanReadableNameThirtyTwoBytesZ_new
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1HumanReadableNameThirtyTwoBytesZ_1new
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_HumanReadableNameThirtyTwoBytesZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1HumanReadableNameThirtyTwoBytesZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZ_new
 * Signature: ([JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZ_1new
  (JNIEnv *, jclass, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZOfferZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZOfferZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZ_new
 * Signature: ([JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZ_1new
  (JNIEnv *, jclass, jlongArray, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_CVec_C2Tuple_HumanReadableNameThirtyTwoBytesZZStrZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1CVec_1C2Tuple_1HumanReadableNameThirtyTwoBytesZZStrZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedBolt12InvoiceBolt12SemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedBolt12InvoiceBolt12SemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedBolt12InvoiceBolt12SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt12SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedBolt12InvoiceBolt12SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedBolt12InvoiceBolt12SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedBolt12InvoiceBolt12SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedBolt12InvoiceBolt12SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedBolt12InvoiceBolt12SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedBolt12InvoiceBolt12SemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedBolt12InvoiceBolt12SemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedBolt12InvoiceBolt12SemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedBolt12InvoiceBolt12SemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceBolt12SemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceBolt12SemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceBolt12SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt12SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceBolt12SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceBolt12SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceBolt12SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceBolt12SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceBolt12SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceBolt12SemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceBolt12SemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceBolt12SemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceBolt12SemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SchnorrSignatureNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SchnorrSignatureNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SchnorrSignatureNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SchnorrSignatureNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SchnorrSignatureNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SchnorrSignatureNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SchnorrSignatureNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SchnorrSignatureNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SchnorrSignatureNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SchnorrSignatureNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SchnorrSignatureNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SchnorrSignatureNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_BlindedPaymentPathZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1BlindedPaymentPathZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_StrZ_free
 * Signature: ([Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1StrZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_ThirtyTwoBytesZ_free
 * Signature: ([[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1ThirtyTwoBytesZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_ThirtyTwoBytesZZ_some
 * Signature: ([[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1ThirtyTwoBytesZZ_1some
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_ThirtyTwoBytesZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1ThirtyTwoBytesZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_ThirtyTwoBytesZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1ThirtyTwoBytesZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_ThirtyTwoBytesZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1ThirtyTwoBytesZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_ThirtyTwoBytesZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1ThirtyTwoBytesZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_AmountZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1AmountZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_AmountZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1AmountZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_AmountZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1AmountZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_AmountZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1AmountZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_AmountZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1AmountZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_QuantityZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1QuantityZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_QuantityZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1QuantityZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_QuantityZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1QuantityZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_QuantityZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1QuantityZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_QuantityZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1QuantityZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_SpendableOutputDescriptorZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1SpendableOutputDescriptorZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_TxOutZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1TxOutZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u32Z_some
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u32Z_1some
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u32Z_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u32Z_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u32Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1u32Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u32Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u32Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u32Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u32Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_u8Zu64Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1u8Zu64Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_u8Zu64Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1u8Zu64Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_u8Zu64Z_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1u8Zu64Z_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_CVec_u8Zu64Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1CVec_1u8Zu64Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_CVec_u8Zu64ZNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1CVec_1u8Zu64ZNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_CVec_u8Zu64ZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1CVec_1u8Zu64ZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_CVec_u8Zu64ZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1CVec_1u8Zu64ZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_CVec_u8Zu64ZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1CVec_1u8Zu64ZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_CVec_u8Zu64ZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1CVec_1u8Zu64ZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_CVec_u8Zu64ZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1CVec_1u8Zu64ZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDerivationParametersDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDerivationParametersDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDerivationParametersDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDerivationParametersDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDerivationParametersDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDerivationParametersDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDerivationParametersDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDerivationParametersDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDerivationParametersDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDerivationParametersDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDerivationParametersDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDerivationParametersDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCDescriptorDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCDescriptorDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCDescriptorDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCDescriptorDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCDescriptorDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCDescriptorDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCDescriptorDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCDescriptorDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCDescriptorDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCDescriptorDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCDescriptorDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCDescriptorDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832NoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832NoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832NoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832NoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832NoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832NoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832NoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832NoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832NoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832NoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832NoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832NoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_BigEndianScalarZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1BigEndianScalarZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_BigEndianScalarZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1BigEndianScalarZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_BigEndianScalarZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1BigEndianScalarZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_BigEndianScalarZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1BigEndianScalarZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_BigEndianScalarZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1BigEndianScalarZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ECDSASignatureNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ECDSASignatureNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ECDSASignatureNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ECDSASignatureNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ECDSASignatureNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ECDSASignatureNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ECDSASignatureNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ECDSASignatureNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ECDSASignatureNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ECDSASignatureNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ECDSASignatureNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ECDSASignatureNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_EcdsaChannelSignerDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1EcdsaChannelSignerDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_EcdsaChannelSignerDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1EcdsaChannelSignerDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_EcdsaChannelSignerDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1EcdsaChannelSignerDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_EcdsaChannelSignerDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1EcdsaChannelSignerDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_EcdsaChannelSignerDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1EcdsaChannelSignerDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_EcdsaChannelSignerDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1EcdsaChannelSignerDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u16Z_some
 * Signature: (S)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u16Z_1some
  (JNIEnv *, jclass, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u16Z_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u16Z_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u16Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1u16Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u16Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u16Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u16Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u16Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_boolZ_some
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1boolZ_1some
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_boolZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1boolZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_boolZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1boolZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_boolZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1boolZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_boolZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1boolZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WitnessNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1WitnessNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WitnessNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1WitnessNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WitnessNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1WitnessNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WitnessNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1WitnessNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WitnessNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1WitnessNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WitnessNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1WitnessNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_ECDSASignatureZ_free
 * Signature: ([[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1ECDSASignatureZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ECDSASignatureCVec_ECDSASignatureZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ECDSASignatureCVec_ECDSASignatureZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ECDSASignatureCVec_ECDSASignatureZZ_new
 * Signature: ([B[[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZ_1new
  (JNIEnv *, jclass, jbyteArray, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ECDSASignatureCVec_ECDSASignatureZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ECDSASignatureCVec_ECDSASignatureZZNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ECDSASignatureCVec_ECDSASignatureZZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ECDSASignatureCVec_ECDSASignatureZZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ECDSASignatureCVec_ECDSASignatureZZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ECDSASignatureCVec_ECDSASignatureZZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ECDSASignatureCVec_ECDSASignatureZZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ECDSASignatureCVec_1ECDSASignatureZZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_WriteableScoreZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1WriteableScoreZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_WriteableScoreZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1WriteableScoreZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_WriteableScoreZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1WriteableScoreZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneIOErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneIOErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneIOErrorZ_err
 * Signature: (Lorg/ldk/enums/IOError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneIOErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneIOErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneIOErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneIOErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneIOErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneIOErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneIOErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneIOErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneIOErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_new
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1ThirtyTwoBytesRecipientOnionFieldsRouteParametersZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_ChannelDetailsZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1ChannelDetailsZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedPaymentPathZNoneZ_ok
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedPaymentPathZNoneZ_1ok
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedPaymentPathZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedPaymentPathZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedPaymentPathZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedPaymentPathZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedPaymentPathZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedPaymentPathZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedPaymentPathZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedPaymentPathZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedPaymentPathZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedPaymentPathZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InFlightHtlcsDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InFlightHtlcsDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InFlightHtlcsDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InFlightHtlcsDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InFlightHtlcsDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InFlightHtlcsDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InFlightHtlcsDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InFlightHtlcsDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InFlightHtlcsDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InFlightHtlcsDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InFlightHtlcsDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InFlightHtlcsDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_BlindedHopZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1BlindedHopZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedTailDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedTailDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedTailDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedTailDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedTailDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedTailDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedTailDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedTailDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedTailDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedTailDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedTailDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedTailDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_RouteHopZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1RouteHopZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_PathZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1PathZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_u64Z_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1u64Z_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentParametersDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentParametersDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentParametersDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentParametersDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentParametersDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentParametersDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentParametersDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentParametersDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentParametersDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentParametersDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentParametersDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentParametersDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_RouteHintZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1RouteHintZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_PublicKeyZ_free
 * Signature: ([[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1PublicKeyZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FixedPenaltyScorerDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FixedPenaltyScorerDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FixedPenaltyScorerDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FixedPenaltyScorerDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FixedPenaltyScorerDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1FixedPenaltyScorerDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FixedPenaltyScorerDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1FixedPenaltyScorerDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FixedPenaltyScorerDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FixedPenaltyScorerDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FixedPenaltyScorerDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FixedPenaltyScorerDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_NodeIdZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1NodeIdZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u64Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u64Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u64Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u64Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u64Z_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u64Z_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u64Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u64Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_u64u64ZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1u64u64ZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_u64u64ZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1u64u64ZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_u64u64ZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1u64u64ZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_u64u64ZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1u64u64ZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_u64u64ZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1u64u64ZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_Z_new
 * Signature: ([S[S)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1Z_1new
  (JNIEnv *, jclass, jshortArray, jshortArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple__u1632_u1632Z_new
 * Signature: ([S[S)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1_1u1632_1u1632Z_1new
  (JNIEnv *, jclass, jshortArray, jshortArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple__u1632_u1632Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1_1u1632_1u1632Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_ThirtyTwoU16sThirtyTwoU16sZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1ThirtyTwoU16sThirtyTwoU16sZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_ThirtyTwoU16sThirtyTwoU16sZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1ThirtyTwoU16sThirtyTwoU16sZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_ThirtyTwoU16sThirtyTwoU16sZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1ThirtyTwoU16sThirtyTwoU16sZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_f64Z_some
 * Signature: (D)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1f64Z_1some
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_f64Z_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1f64Z_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_f64Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1f64Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_f64Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1f64Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_f64Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1f64Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ProbabilisticScorerDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ProbabilisticScorerDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ProbabilisticScorerDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ProbabilisticScorerDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ProbabilisticScorerDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ProbabilisticScorerDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ProbabilisticScorerDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ProbabilisticScorerDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BestBlockDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BestBlockDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BestBlockDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BestBlockDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BestBlockDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BestBlockDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BestBlockDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BestBlockDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BestBlockDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BestBlockDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BestBlockDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BestBlockDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_new
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1new
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_usizeTransactionZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1usizeTransactionZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesu32COption_ThirtyTwoBytesZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesu32COption_1ThirtyTwoBytesZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesu32COption_ThirtyTwoBytesZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesu32COption_1ThirtyTwoBytesZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesu32COption_ThirtyTwoBytesZZ_new
 * Signature: ([BIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesu32COption_1ThirtyTwoBytesZZ_1new
  (JNIEnv *, jclass, jbyteArray, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ThirtyTwoBytesu32COption_ThirtyTwoBytesZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ThirtyTwoBytesu32COption_1ThirtyTwoBytesZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C3Tuple_ThirtyTwoBytesu32COption_ThirtyTwoBytesZZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C3Tuple_1ThirtyTwoBytesu32COption_1ThirtyTwoBytesZZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateStatusNoneZ_ok
 * Signature: (Lorg/ldk/enums/ChannelMonitorUpdateStatus;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateStatusNoneZ_1ok
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateStatusNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateStatusNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateStatusNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateStatusNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateStatusNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateStatusNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateStatusNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateStatusNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateStatusNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateStatusNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_MonitorEventZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1MonitorEventZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C4Tuple_OutPointChannelIdCVec_MonitorEventZPublicKeyZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C4Tuple_1OutPointChannelIdCVec_1MonitorEventZPublicKeyZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C4Tuple_OutPointChannelIdCVec_MonitorEventZPublicKeyZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C4Tuple_1OutPointChannelIdCVec_1MonitorEventZPublicKeyZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C4Tuple_OutPointChannelIdCVec_MonitorEventZPublicKeyZ_new
 * Signature: (JJ[J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C4Tuple_1OutPointChannelIdCVec_1MonitorEventZPublicKeyZ_1new
  (JNIEnv *, jclass, jlong, jlong, jlongArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C4Tuple_OutPointChannelIdCVec_MonitorEventZPublicKeyZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C4Tuple_1OutPointChannelIdCVec_1MonitorEventZPublicKeyZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C4Tuple_OutPointChannelIdCVec_MonitorEventZPublicKeyZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C4Tuple_1OutPointChannelIdCVec_1MonitorEventZPublicKeyZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferIdDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferIdDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferIdDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferIdDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferIdDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OfferIdDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferIdDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OfferIdDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferIdDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferIdDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferIdDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferIdDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12SemanticErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12SemanticErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt12SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12SemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12SemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12SemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12SemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12SemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12SemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt12SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12SemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12SemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12SemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12SemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt12SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestWithDerivedPayerSigningPubkeyBuilderBolt12SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OfferDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OfferDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12ParseErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12ParseErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12ParseErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12ParseErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12ParseErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12ParseErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12ParseErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12ParseErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12ParseErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12ParseErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferBolt12ParseErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferBolt12ParseErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeySecp256k1ErrorZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeySecp256k1ErrorZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeySecp256k1ErrorZ_err
 * Signature: (Lorg/ldk/enums/Secp256k1Error;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeySecp256k1ErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeySecp256k1ErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeySecp256k1ErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeySecp256k1ErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeySecp256k1ErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeySecp256k1ErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeySecp256k1ErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeySecp256k1ErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeySecp256k1ErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NetworkUpdateZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NetworkUpdateZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NetworkUpdateZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NetworkUpdateZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NetworkUpdateZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1NetworkUpdateZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NetworkUpdateZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NetworkUpdateZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NetworkUpdateZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NetworkUpdateZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_UtxoLookupZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1UtxoLookupZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_UtxoLookupZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1UtxoLookupZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_UtxoLookupZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1UtxoLookupZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_ok
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1ok
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_MessageSendEventZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1MessageSendEventZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_SocketAddressZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1SocketAddressZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAliasDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAliasDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAliasDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAliasDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAliasDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAliasDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAliasDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAliasDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAliasDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAliasDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAliasDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAliasDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NodeAnnouncementInfoZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NodeAnnouncementInfoZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NodeAnnouncementInfoZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NodeAnnouncementInfoZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NodeAnnouncementInfoZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1NodeAnnouncementInfoZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NodeAnnouncementInfoZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NodeAnnouncementInfoZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NodeAnnouncementInfoZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NodeAnnouncementInfoZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_SocketAddressZZ_some
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1SocketAddressZZ_1some
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_SocketAddressZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1SocketAddressZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_SocketAddressZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1SocketAddressZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_SocketAddressZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1SocketAddressZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_SocketAddressZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1SocketAddressZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u64ShortChannelIdErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1u64ShortChannelIdErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u64ShortChannelIdErrorZ_err
 * Signature: (Lorg/ldk/enums/ShortChannelIdError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1u64ShortChannelIdErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u64ShortChannelIdErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1u64ShortChannelIdErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u64ShortChannelIdErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1u64ShortChannelIdErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoInboundHTLCErrZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoInboundHTLCErrZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoInboundHTLCErrZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoInboundHTLCErrZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoInboundHTLCErrZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoInboundHTLCErrZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoInboundHTLCErrZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoInboundHTLCErrZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoInboundHTLCErrZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoInboundHTLCErrZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoInboundHTLCErrZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoInboundHTLCErrZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_HTLCOutputInCommitmentZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1HTLCOutputInCommitmentZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_HTLCDescriptorZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1HTLCDescriptorZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_UtxoZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1UtxoZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TxOutZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TxOutZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TxOutZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TxOutZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TxOutZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1TxOutZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TxOutZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TxOutZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TxOutZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TxOutZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_InputZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1InputZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CoinSelectionNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CoinSelectionNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CoinSelectionNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CoinSelectionNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CoinSelectionNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CoinSelectionNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CoinSelectionNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CoinSelectionNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CoinSelectionNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CoinSelectionNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CoinSelectionNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CoinSelectionNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_UtxoZNoneZ_ok
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1UtxoZNoneZ_1ok
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_UtxoZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1UtxoZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_UtxoZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1UtxoZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_UtxoZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1UtxoZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_UtxoZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1UtxoZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_UtxoZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1UtxoZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PaymentContextZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PaymentContextZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PaymentContextZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PaymentContextZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PaymentContextZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1PaymentContextZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PaymentContextZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PaymentContextZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PaymentContextZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PaymentContextZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u16Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u16Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u16Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u16Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u16Z_new
 * Signature: (JS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u16Z_1new
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u64u16Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u64u16Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_u64u16ZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1u64u16ZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_u64u16ZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1u64u16ZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_u64u16ZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1u64u16ZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_u64u16ZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1u64u16ZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_u64u16ZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1u64u16ZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdAPIErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdAPIErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdAPIErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdAPIErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdAPIErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdAPIErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdAPIErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdAPIErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdAPIErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdAPIErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdAPIErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdAPIErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_RecentPaymentDetailsZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1RecentPaymentDetailsZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneRetryableSendFailureZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneRetryableSendFailureZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneRetryableSendFailureZ_err
 * Signature: (Lorg/ldk/enums/RetryableSendFailure;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneRetryableSendFailureZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneRetryableSendFailureZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneRetryableSendFailureZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneRetryableSendFailureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneRetryableSendFailureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneRetryableSendFailureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneRetryableSendFailureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneRetryableSendFailureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneRetryableSendFailureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OffersContextZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OffersContextZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OffersContextZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OffersContextZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OffersContextZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1OffersContextZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OffersContextZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OffersContextZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OffersContextZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OffersContextZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12PaymentErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12PaymentErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12PaymentErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12PaymentErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12PaymentErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12PaymentErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12PaymentErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12PaymentErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12PaymentErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12PaymentErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt12PaymentErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt12PaymentErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesRetryableSendFailureZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesRetryableSendFailureZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesRetryableSendFailureZ_err
 * Signature: (Lorg/ldk/enums/RetryableSendFailure;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesRetryableSendFailureZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesRetryableSendFailureZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesRetryableSendFailureZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesRetryableSendFailureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesRetryableSendFailureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesRetryableSendFailureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesRetryableSendFailureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesRetryableSendFailureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesRetryableSendFailureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesThirtyTwoBytesZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesThirtyTwoBytesZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesThirtyTwoBytesZ_new
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZ_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesThirtyTwoBytesZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZProbeSendFailureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_ok
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_1ok
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZZProbeSendFailureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ChannelIdPublicKeyZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ChannelIdPublicKeyZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ChannelIdPublicKeyZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ChannelIdPublicKeyZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ChannelIdPublicKeyZ_new
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ChannelIdPublicKeyZ_1new
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ChannelIdPublicKeyZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ChannelIdPublicKeyZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_ChannelIdPublicKeyZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1ChannelIdPublicKeyZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_ChannelIdZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1ChannelIdZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyChannelIdZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyChannelIdZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyChannelIdZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyChannelIdZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyChannelIdZ_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyChannelIdZ_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyChannelIdZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyChannelIdZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_PublicKeyChannelIdZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1PublicKeyChannelIdZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_PublicKeyChannelIdZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1PublicKeyChannelIdZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_PublicKeyChannelIdZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1PublicKeyChannelIdZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_PublicKeyChannelIdZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1PublicKeyChannelIdZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_PublicKeyChannelIdZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1PublicKeyChannelIdZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceSignOrCreationErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceSignOrCreationErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceSignOrCreationErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceSignOrCreationErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceSignOrCreationErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceSignOrCreationErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceSignOrCreationErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceSignOrCreationErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceSignOrCreationErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceSignOrCreationErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceSignOrCreationErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceSignOrCreationErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt12SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OfferWithDerivedMetadataBuilderBolt12SemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_StrZ_some
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1StrZ_1some
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_StrZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1StrZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_StrZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1StrZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_StrZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1StrZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_StrZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1StrZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_DestinationZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1DestinationZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesThirtyTwoBytesZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesThirtyTwoBytesZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesAPIErrorZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesAPIErrorZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesAPIErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesAPIErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesAPIErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesAPIErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesAPIErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesAPIErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesAPIErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesAPIErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ThirtyTwoBytesAPIErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ThirtyTwoBytesAPIErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageResponseInstructionZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageResponseInstructionZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageResponseInstructionZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageResponseInstructionZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageResponseInstructionZ_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageResponseInstructionZ_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageResponseInstructionZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageResponseInstructionZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_OffersMessageResponseInstructionZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1OffersMessageResponseInstructionZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_OffersMessageResponseInstructionZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1OffersMessageResponseInstructionZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_OffersMessageResponseInstructionZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1OffersMessageResponseInstructionZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_OffersMessageResponseInstructionZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1OffersMessageResponseInstructionZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_OffersMessageResponseInstructionZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1OffersMessageResponseInstructionZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageMessageSendInstructionsZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageMessageSendInstructionsZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageMessageSendInstructionsZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageMessageSendInstructionsZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageMessageSendInstructionsZ_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageMessageSendInstructionsZ_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OffersMessageMessageSendInstructionsZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OffersMessageMessageSendInstructionsZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_OffersMessageMessageSendInstructionsZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1OffersMessageMessageSendInstructionsZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ReleaseHeldHtlcResponseInstructionZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ReleaseHeldHtlcResponseInstructionZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ReleaseHeldHtlcResponseInstructionZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ReleaseHeldHtlcResponseInstructionZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ReleaseHeldHtlcResponseInstructionZ_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ReleaseHeldHtlcResponseInstructionZ_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ReleaseHeldHtlcResponseInstructionZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ReleaseHeldHtlcResponseInstructionZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_ReleaseHeldHtlcResponseInstructionZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1ReleaseHeldHtlcResponseInstructionZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_ReleaseHeldHtlcResponseInstructionZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1ReleaseHeldHtlcResponseInstructionZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_ReleaseHeldHtlcResponseInstructionZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1ReleaseHeldHtlcResponseInstructionZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_ReleaseHeldHtlcResponseInstructionZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1ReleaseHeldHtlcResponseInstructionZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_ReleaseHeldHtlcResponseInstructionZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1ReleaseHeldHtlcResponseInstructionZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_AsyncPaymentsMessageMessageSendInstructionsZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1AsyncPaymentsMessageMessageSendInstructionsZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_AsyncPaymentsMessageMessageSendInstructionsZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1AsyncPaymentsMessageMessageSendInstructionsZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_AsyncPaymentsMessageMessageSendInstructionsZ_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1AsyncPaymentsMessageMessageSendInstructionsZ_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_AsyncPaymentsMessageMessageSendInstructionsZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1AsyncPaymentsMessageMessageSendInstructionsZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_AsyncPaymentsMessageMessageSendInstructionsZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1AsyncPaymentsMessageMessageSendInstructionsZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PhantomRouteHintsDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PhantomRouteHintsDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PhantomRouteHintsDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PhantomRouteHintsDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PhantomRouteHintsDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PhantomRouteHintsDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PhantomRouteHintsDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PhantomRouteHintsDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PhantomRouteHintsDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PhantomRouteHintsDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PhantomRouteHintsDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PhantomRouteHintsDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedForwardDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedForwardDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedForwardDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedForwardDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedForwardDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedForwardDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedForwardDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedForwardDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedForwardDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedForwardDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedForwardDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedForwardDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCRoutingDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCRoutingDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCRoutingDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCRoutingDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCRoutingDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCRoutingDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCRoutingDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCRoutingDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCRoutingDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCRoutingDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCRoutingDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCRoutingDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PendingHTLCInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PendingHTLCInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedFailureDecodeErrorZ_ok
 * Signature: (Lorg/ldk/enums/BlindedFailure;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedFailureDecodeErrorZ_1ok
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedFailureDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedFailureDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedFailureDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedFailureDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedFailureDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedFailureDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedFailureDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedFailureDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedFailureDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedFailureDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_ChannelMonitorZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1ChannelMonitorZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelManagerZ_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelManagerZ_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelManagerZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelManagerZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelManagerZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelManagerZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelManagerZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelManagerZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelManagerZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelManagerZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelManagerZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelManagerZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MaxDustHTLCExposureDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MaxDustHTLCExposureDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MaxDustHTLCExposureDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MaxDustHTLCExposureDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MaxDustHTLCExposureDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1MaxDustHTLCExposureDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MaxDustHTLCExposureDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1MaxDustHTLCExposureDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MaxDustHTLCExposureDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MaxDustHTLCExposureDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MaxDustHTLCExposureDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MaxDustHTLCExposureDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MaxDustHTLCExposureZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MaxDustHTLCExposureZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MaxDustHTLCExposureZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MaxDustHTLCExposureZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MaxDustHTLCExposureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1MaxDustHTLCExposureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MaxDustHTLCExposureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MaxDustHTLCExposureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MaxDustHTLCExposureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MaxDustHTLCExposureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_APIErrorZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1APIErrorZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_APIErrorZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1APIErrorZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_APIErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1APIErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_APIErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1APIErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_APIErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1APIErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_APIErrorZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1APIErrorZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_APIErrorZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1APIErrorZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_APIErrorZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1APIErrorZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_APIErrorZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1APIErrorZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_APIErrorZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1APIErrorZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_APIErrorZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1APIErrorZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MonitorEventZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MonitorEventZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MonitorEventZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MonitorEventZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MonitorEventZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1MonitorEventZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MonitorEventZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MonitorEventZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MonitorEventZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MonitorEventZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u8ZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u8ZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u8ZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u8ZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u8ZZ_new
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u8ZZ_1new
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u8ZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u8ZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32CVec_u8ZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32CVec_1u8ZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32CVec_u8ZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32CVec_1u8ZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32CVec_u8ZZ_new
 * Signature: (I[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32CVec_1u8ZZ_1new
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32CVec_u8ZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32CVec_1u8ZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_u32CVec_u8ZZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1u32CVec_1u8ZZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32CVec_u8ZZZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32CVec_1u8ZZZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32CVec_u8ZZZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32CVec_1u8ZZZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32CVec_u8ZZZZ_new
 * Signature: ([B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32CVec_1u8ZZZZ_1new
  (JNIEnv *, jclass, jbyteArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32CVec_u8ZZZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32CVec_1u8ZZZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32CVec_u8ZZZZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32CVec_1u8ZZZZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneReplayEventZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneReplayEventZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneReplayEventZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneReplayEventZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneReplayEventZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneReplayEventZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneReplayEventZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneReplayEventZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneReplayEventZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneReplayEventZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneReplayEventZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneReplayEventZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_CommitmentTransactionZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1CommitmentTransactionZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_new
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1new
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_u32TxOutZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1u32TxOutZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32TxOutZZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32TxOutZZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32TxOutZZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32TxOutZZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32TxOutZZZ_new
 * Signature: ([B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32TxOutZZZ_1new
  (JNIEnv *, jclass, jbyteArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32TxOutZZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32TxOutZZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_ThirtyTwoBytesCVec_C2Tuple_u32TxOutZZZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1ThirtyTwoBytesCVec_1C2Tuple_1u32TxOutZZZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_boolboolZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1boolboolZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_boolboolZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1boolboolZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_boolboolZ_new
 * Signature: (ZZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1boolboolZ_1new
  (JNIEnv *, jclass, jboolean, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_boolboolZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1boolboolZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_BalanceZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1BalanceZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelMonitorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelMonitorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelMonitorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelMonitorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelMonitorZ_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelMonitorZ_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelMonitorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelMonitorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_PublicKeyTypeZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1PublicKeyTypeZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsResponseInstructionZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsResponseInstructionZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsResponseInstructionZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsResponseInstructionZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsResponseInstructionZ_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsResponseInstructionZ_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsResponseInstructionZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsResponseInstructionZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_OnionMessageContentsResponseInstructionZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1OnionMessageContentsResponseInstructionZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_OnionMessageContentsResponseInstructionZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1OnionMessageContentsResponseInstructionZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_OnionMessageContentsResponseInstructionZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1OnionMessageContentsResponseInstructionZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_OnionMessageContentsResponseInstructionZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1OnionMessageContentsResponseInstructionZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_OnionMessageContentsResponseInstructionZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1OnionMessageContentsResponseInstructionZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OnionMessageContentsZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OnionMessageContentsZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OnionMessageContentsZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OnionMessageContentsZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OnionMessageContentsZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1OnionMessageContentsZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OnionMessageContentsZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OnionMessageContentsZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OnionMessageContentsZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OnionMessageContentsZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OnionMessageContentsZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OnionMessageContentsZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OnionMessageContentsZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OnionMessageContentsZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OnionMessageContentsZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OnionMessageContentsZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OnionMessageContentsZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OnionMessageContentsZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OnionMessageContentsZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OnionMessageContentsZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OnionMessageContentsZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OnionMessageContentsZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsMessageSendInstructionsZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsMessageSendInstructionsZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsMessageSendInstructionsZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsMessageSendInstructionsZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsMessageSendInstructionsZ_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsMessageSendInstructionsZ_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OnionMessageContentsMessageSendInstructionsZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OnionMessageContentsMessageSendInstructionsZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_OnionMessageContentsMessageSendInstructionsZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1OnionMessageContentsMessageSendInstructionsZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TypeZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TypeZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TypeZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TypeZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TypeZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1TypeZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TypeZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TypeZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TypeZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TypeZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_SocketAddressZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1SocketAddressZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_SocketAddressZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1SocketAddressZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_SocketAddressZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1SocketAddressZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_SocketAddressZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1SocketAddressZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_SocketAddressZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1SocketAddressZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_PeerDetailsZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1PeerDetailsZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_ok
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1ok
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u32GraphSyncErrorZ_ok
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1u32GraphSyncErrorZ_1ok
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u32GraphSyncErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1u32GraphSyncErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u32GraphSyncErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1u32GraphSyncErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_u32GraphSyncErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1u32GraphSyncErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZIOErrorZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZIOErrorZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZIOErrorZ_err
 * Signature: (Lorg/ldk/enums/IOError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZIOErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZIOErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZIOErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZIOErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZIOErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZIOErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZIOErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZIOErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZIOErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_StrZIOErrorZ_ok
 * Signature: ([Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1StrZIOErrorZ_1ok
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_StrZIOErrorZ_err
 * Signature: (Lorg/ldk/enums/IOError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1StrZIOErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_StrZIOErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1StrZIOErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_StrZIOErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1StrZIOErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_StrZIOErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1StrZIOErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_StrZIOErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1StrZIOErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_StrStrStrZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1StrStrStrZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_StrStrStrZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1StrStrStrZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_StrStrStrZ_new
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1StrStrStrZ_1new
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_StrStrStrZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C3Tuple_1StrStrStrZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C3Tuple_StrStrStrZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C3Tuple_1StrStrStrZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C3Tuple_StrStrStrZZIOErrorZ_ok
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C3Tuple_1StrStrStrZZIOErrorZ_1ok
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C3Tuple_StrStrStrZZIOErrorZ_err
 * Signature: (Lorg/ldk/enums/IOError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C3Tuple_1StrStrStrZZIOErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C3Tuple_StrStrStrZZIOErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C3Tuple_1StrStrStrZZIOErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C3Tuple_StrStrStrZZIOErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C3Tuple_1StrStrStrZZIOErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C3Tuple_StrStrStrZZIOErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C3Tuple_1StrStrStrZZIOErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C3Tuple_StrStrStrZZIOErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C3Tuple_1StrStrStrZZIOErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_ThirtyTwoBytesChannelMonitorZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1ThirtyTwoBytesChannelMonitorZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesChannelMonitorZZIOErrorZ_ok
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesChannelMonitorZZIOErrorZ_1ok
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesChannelMonitorZZIOErrorZ_err
 * Signature: (Lorg/ldk/enums/IOError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesChannelMonitorZZIOErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesChannelMonitorZZIOErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesChannelMonitorZZIOErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesChannelMonitorZZIOErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesChannelMonitorZZIOErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesChannelMonitorZZIOErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesChannelMonitorZZIOErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_ThirtyTwoBytesChannelMonitorZZIOErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1ThirtyTwoBytesChannelMonitorZZIOErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZIOErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZIOErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZIOErrorZ_err
 * Signature: (Lorg/ldk/enums/IOError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZIOErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZIOErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZIOErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZIOErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZIOErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZIOErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZIOErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_ThirtyTwoBytesChannelMonitorZIOErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1ThirtyTwoBytesChannelMonitorZIOErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MonitorNameIOErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MonitorNameIOErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MonitorNameIOErrorZ_err
 * Signature: (Lorg/ldk/enums/IOError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MonitorNameIOErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MonitorNameIOErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1MonitorNameIOErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MonitorNameIOErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1MonitorNameIOErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateNameIOErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateNameIOErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateNameIOErrorZ_err
 * Signature: (Lorg/ldk/enums/IOError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateNameIOErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateNameIOErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateNameIOErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateNameIOErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateNameIOErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestBolt12SemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestBolt12SemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestBolt12SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt12SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestBolt12SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestBolt12SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestBolt12SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestBolt12SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestBolt12SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestBolt12SemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestBolt12SemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestBolt12SemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestBolt12SemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt12SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithExplicitSigningPubkeyBuilderBolt12SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_VerifiedInvoiceRequestNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1VerifiedInvoiceRequestNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_VerifiedInvoiceRequestNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1VerifiedInvoiceRequestNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_VerifiedInvoiceRequestNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1VerifiedInvoiceRequestNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_VerifiedInvoiceRequestNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1VerifiedInvoiceRequestNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_VerifiedInvoiceRequestNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1VerifiedInvoiceRequestNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_VerifiedInvoiceRequestNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1VerifiedInvoiceRequestNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt12SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceWithDerivedSigningPubkeyBuilderBolt12SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestFieldsDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestFieldsDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestFieldsDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestFieldsDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestFieldsDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestFieldsDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestFieldsDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestFieldsDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestFieldsDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestFieldsDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceRequestFieldsDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceRequestFieldsDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NoneZ_some
 * Signature: ()Lorg/ldk/enums/COption_NoneZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_COption_1NoneZ_1some
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NoneZ_none
 * Signature: ()Lorg/ldk/enums/COption_NoneZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_COption_1NoneZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NoneZ_free
 * Signature: (Lorg/ldk/enums/COption_NoneZ;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1NoneZ_1free
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_WitnessZ_free
 * Signature: ([[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1WitnessZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ECDSASignatureZ_some
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ECDSASignatureZ_1some
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ECDSASignatureZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ECDSASignatureZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ECDSASignatureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1ECDSASignatureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ECDSASignatureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ECDSASignatureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ECDSASignatureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ECDSASignatureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_i64Z_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1i64Z_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_i64Z_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1i64Z_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_i64Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1i64Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_i64Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1i64Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_i64Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1i64Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressSocketAddressParseErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressSocketAddressParseErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressSocketAddressParseErrorZ_err
 * Signature: (Lorg/ldk/enums/SocketAddressParseError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressSocketAddressParseErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressSocketAddressParseErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressSocketAddressParseErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressSocketAddressParseErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressSocketAddressParseErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressSocketAddressParseErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressSocketAddressParseErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SocketAddressSocketAddressParseErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SocketAddressSocketAddressParseErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_UpdateAddHTLCZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1UpdateAddHTLCZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_UpdateFulfillHTLCZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1UpdateFulfillHTLCZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_UpdateFailHTLCZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1UpdateFailHTLCZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_UpdateFailMalformedHTLCZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1UpdateFailMalformedHTLCZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelV2DecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelV2DecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelV2DecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelV2DecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelV2DecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelV2DecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelV2DecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelV2DecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelV2DecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelV2DecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelV2DecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelV2DecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StfuDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StfuDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StfuDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StfuDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StfuDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1StfuDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StfuDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1StfuDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StfuDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StfuDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StfuDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StfuDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceInitDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceInitDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceInitDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceInitDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceInitDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceInitDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceInitDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceInitDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceInitDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceInitDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceInitDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceInitDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceAckDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceAckDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceAckDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceAckDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceAckDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceAckDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceAckDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceAckDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceAckDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceAckDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceAckDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceAckDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceLockedDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceLockedDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceLockedDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceLockedDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceLockedDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceLockedDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceLockedDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceLockedDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceLockedDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceLockedDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpliceLockedDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpliceLockedDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddInputDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddInputDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddInputDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddInputDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddInputDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddInputDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddInputDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddInputDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddInputDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddInputDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddInputDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddInputDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddOutputDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddOutputDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddOutputDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddOutputDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddOutputDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddOutputDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddOutputDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddOutputDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddOutputDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddOutputDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAddOutputDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAddOutputDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveInputDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveInputDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveInputDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveInputDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveInputDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveInputDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveInputDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveInputDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveInputDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveInputDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveInputDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveInputDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveOutputDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveOutputDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveOutputDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveOutputDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveOutputDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveOutputDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveOutputDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveOutputDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveOutputDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveOutputDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxRemoveOutputDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxRemoveOutputDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCompleteDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCompleteDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCompleteDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCompleteDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCompleteDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxCompleteDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCompleteDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxCompleteDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCompleteDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCompleteDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCompleteDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCompleteDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxSignaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxSignaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxSignaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxSignaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxSignaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxSignaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxSignaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxSignaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxSignaturesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxSignaturesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxSignaturesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxSignaturesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxInitRbfDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxInitRbfDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxInitRbfDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxInitRbfDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxInitRbfDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxInitRbfDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxInitRbfDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxInitRbfDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxInitRbfDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxInitRbfDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxInitRbfDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxInitRbfDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAckRbfDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAckRbfDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAckRbfDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAckRbfDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAckRbfDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxAckRbfDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAckRbfDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxAckRbfDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAckRbfDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAckRbfDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAckRbfDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAckRbfDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAbortDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAbortDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAbortDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAbortDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAbortDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxAbortDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAbortDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxAbortDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAbortDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAbortDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxAbortDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxAbortDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedBatchDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedBatchDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedBatchDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedBatchDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedBatchDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedBatchDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedBatchDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedBatchDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedBatchDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedBatchDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedBatchDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedBatchDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReadyDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReadyDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReadyDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReadyDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReadyDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReadyDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReadyDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReadyDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReadyDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReadyDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReadyDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReadyDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelV2DecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelV2DecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelV2DecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelV2DecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelV2DecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelV2DecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelV2DecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelV2DecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelV2DecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelV2DecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelV2DecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelV2DecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionPacketDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionPacketDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionPacketDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionPacketDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionPacketDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OnionPacketDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionPacketDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OnionPacketDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionPacketDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionPacketDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionPacketDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionPacketDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessageDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessageDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessageDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessageDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessageDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessageDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessageDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessageDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessageDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessageDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessageDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessageDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FinalOnionHopDataDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FinalOnionHopDataDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FinalOnionHopDataDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FinalOnionHopDataDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FinalOnionHopDataDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1FinalOnionHopDataDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FinalOnionHopDataDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1FinalOnionHopDataDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FinalOnionHopDataDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FinalOnionHopDataDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FinalOnionHopDataDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FinalOnionHopDataDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WarningMessageDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1WarningMessageDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WarningMessageDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1WarningMessageDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WarningMessageDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1WarningMessageDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WarningMessageDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1WarningMessageDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WarningMessageDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1WarningMessageDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_WarningMessageDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1WarningMessageDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_InboundHTLCStateDetailsZ_some
 * Signature: (Lorg/ldk/enums/InboundHTLCStateDetails;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1InboundHTLCStateDetailsZ_1some
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_InboundHTLCStateDetailsZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1InboundHTLCStateDetailsZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_InboundHTLCStateDetailsZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1InboundHTLCStateDetailsZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_InboundHTLCStateDetailsZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1InboundHTLCStateDetailsZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_InboundHTLCStateDetailsZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1InboundHTLCStateDetailsZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_InboundHTLCStateDetailsZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1InboundHTLCStateDetailsZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_InboundHTLCStateDetailsZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1InboundHTLCStateDetailsZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_InboundHTLCStateDetailsZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1InboundHTLCStateDetailsZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_InboundHTLCStateDetailsZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1InboundHTLCStateDetailsZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_InboundHTLCStateDetailsZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1InboundHTLCStateDetailsZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_InboundHTLCStateDetailsZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1InboundHTLCStateDetailsZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InboundHTLCDetailsDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InboundHTLCDetailsDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InboundHTLCDetailsDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InboundHTLCDetailsDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InboundHTLCDetailsDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InboundHTLCDetailsDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InboundHTLCDetailsDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InboundHTLCDetailsDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InboundHTLCDetailsDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InboundHTLCDetailsDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InboundHTLCDetailsDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InboundHTLCDetailsDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OutboundHTLCStateDetailsZ_some
 * Signature: (Lorg/ldk/enums/OutboundHTLCStateDetails;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OutboundHTLCStateDetailsZ_1some
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OutboundHTLCStateDetailsZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OutboundHTLCStateDetailsZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OutboundHTLCStateDetailsZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1OutboundHTLCStateDetailsZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OutboundHTLCStateDetailsZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OutboundHTLCStateDetailsZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_OutboundHTLCStateDetailsZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1OutboundHTLCStateDetailsZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OutboundHTLCStateDetailsZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OutboundHTLCStateDetailsZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OutboundHTLCStateDetailsZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OutboundHTLCStateDetailsZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OutboundHTLCStateDetailsZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OutboundHTLCStateDetailsZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OutboundHTLCStateDetailsZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OutboundHTLCStateDetailsZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OutboundHTLCStateDetailsZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OutboundHTLCStateDetailsZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_OutboundHTLCStateDetailsZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1OutboundHTLCStateDetailsZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutboundHTLCDetailsDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutboundHTLCDetailsDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutboundHTLCDetailsDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutboundHTLCDetailsDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutboundHTLCDetailsDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OutboundHTLCDetailsDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutboundHTLCDetailsDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OutboundHTLCDetailsDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutboundHTLCDetailsDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutboundHTLCDetailsDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutboundHTLCDetailsDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutboundHTLCDetailsDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyForwardingInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyForwardingInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyForwardingInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyForwardingInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyForwardingInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyForwardingInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyForwardingInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyForwardingInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyForwardingInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyForwardingInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyForwardingInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyForwardingInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelCounterpartyDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelCounterpartyDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelCounterpartyDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelCounterpartyDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelCounterpartyDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelCounterpartyDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelCounterpartyDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelCounterpartyDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelCounterpartyDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelCounterpartyDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelCounterpartyDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelCounterpartyDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ChannelShutdownStateZ_some
 * Signature: (Lorg/ldk/enums/ChannelShutdownState;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ChannelShutdownStateZ_1some
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ChannelShutdownStateZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ChannelShutdownStateZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ChannelShutdownStateZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1ChannelShutdownStateZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ChannelShutdownStateZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ChannelShutdownStateZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ChannelShutdownStateZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ChannelShutdownStateZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_InboundHTLCDetailsZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1InboundHTLCDetailsZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_OutboundHTLCDetailsZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1OutboundHTLCDetailsZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDetailsDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDetailsDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDetailsDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDetailsDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDetailsDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDetailsDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDetailsDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDetailsDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDetailsDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDetailsDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelDetailsDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelDetailsDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelShutdownStateDecodeErrorZ_ok
 * Signature: (Lorg/ldk/enums/ChannelShutdownState;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelShutdownStateDecodeErrorZ_1ok
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelShutdownStateDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelShutdownStateDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelShutdownStateDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelShutdownStateDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelShutdownStateDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelShutdownStateDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelShutdownStateDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelShutdownStateDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelShutdownStateDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelShutdownStateDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_FutureZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1FutureZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HeldHtlcAvailableDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HeldHtlcAvailableDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HeldHtlcAvailableDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HeldHtlcAvailableDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HeldHtlcAvailableDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HeldHtlcAvailableDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HeldHtlcAvailableDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HeldHtlcAvailableDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HeldHtlcAvailableDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HeldHtlcAvailableDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HeldHtlcAvailableDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HeldHtlcAvailableDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReleaseHeldHtlcDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReleaseHeldHtlcDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReleaseHeldHtlcDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReleaseHeldHtlcDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReleaseHeldHtlcDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ReleaseHeldHtlcDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReleaseHeldHtlcDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ReleaseHeldHtlcDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReleaseHeldHtlcDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReleaseHeldHtlcDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReleaseHeldHtlcDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReleaseHeldHtlcDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsMessageDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsMessageDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsMessageDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsMessageDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsMessageDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsMessageDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsMessageDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsMessageDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsMessageDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsMessageDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsMessageDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsMessageDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersMessageDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersMessageDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersMessageDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersMessageDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersMessageDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OffersMessageDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersMessageDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OffersMessageDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersMessageDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersMessageDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersMessageDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersMessageDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_HTLCClaimZ_some
 * Signature: (Lorg/ldk/enums/HTLCClaim;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1HTLCClaimZ_1some
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_HTLCClaimZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1HTLCClaimZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_HTLCClaimZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1HTLCClaimZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyCommitmentSecretsDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyCommitmentSecretsDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyCommitmentSecretsDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyCommitmentSecretsDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyCommitmentSecretsDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyCommitmentSecretsDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyCommitmentSecretsDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyCommitmentSecretsDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyCommitmentSecretsDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyCommitmentSecretsDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyCommitmentSecretsDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyCommitmentSecretsDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedClosingTransactionNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedClosingTransactionNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedClosingTransactionNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedClosingTransactionNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedClosingTransactionNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedClosingTransactionNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedClosingTransactionNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedClosingTransactionNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedCommitmentTransactionNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedCommitmentTransactionNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedCommitmentTransactionNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedCommitmentTransactionNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedCommitmentTransactionNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedCommitmentTransactionNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedCommitmentTransactionNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedCommitmentTransactionNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_ECDSASignatureZNoneZ_ok
 * Signature: ([[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1ECDSASignatureZNoneZ_1ok
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_ECDSASignatureZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1ECDSASignatureZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_ECDSASignatureZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1ECDSASignatureZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_ECDSASignatureZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1ECDSASignatureZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_ECDSASignatureZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1ECDSASignatureZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_ECDSASignatureZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1ECDSASignatureZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_usizeZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1usizeZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_usizeZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1usizeZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_usizeZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1usizeZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_usizeZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1usizeZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_usizeZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1usizeZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_TransactionZ_free
 * Signature: ([[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1TransactionZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1FundingInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1FundingInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPurposeDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPurposeDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPurposeDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPurposeDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPurposeDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPurposeDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPurposeDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPurposeDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPurposeDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPurposeDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPurposeDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPurposeDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClaimedHTLCDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClaimedHTLCDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClaimedHTLCDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClaimedHTLCDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClaimedHTLCDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ClaimedHTLCDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClaimedHTLCDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ClaimedHTLCDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClaimedHTLCDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClaimedHTLCDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClaimedHTLCDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClaimedHTLCDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PathFailureZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PathFailureZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PathFailureZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PathFailureZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PathFailureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1PathFailureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PathFailureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PathFailureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PathFailureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PathFailureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PathFailureZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PathFailureZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PathFailureZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PathFailureZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PathFailureZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PathFailureZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PathFailureZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PathFailureZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PathFailureZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PathFailureZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PathFailureZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PathFailureZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ClosureReasonZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ClosureReasonZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ClosureReasonZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ClosureReasonZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ClosureReasonZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1ClosureReasonZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ClosureReasonZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ClosureReasonZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ClosureReasonZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ClosureReasonZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_HTLCDestinationZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1HTLCDestinationZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_HTLCDestinationZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1HTLCDestinationZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_HTLCDestinationZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1HTLCDestinationZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_HTLCDestinationZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1HTLCDestinationZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_HTLCDestinationZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1HTLCDestinationZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_HTLCDestinationZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1HTLCDestinationZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_HTLCDestinationZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1HTLCDestinationZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_HTLCDestinationZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1HTLCDestinationZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_HTLCDestinationZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1HTLCDestinationZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_HTLCDestinationZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1HTLCDestinationZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_HTLCDestinationZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1HTLCDestinationZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PaymentFailureReasonZ_some
 * Signature: (Lorg/ldk/enums/PaymentFailureReason;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PaymentFailureReasonZ_1some
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PaymentFailureReasonZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PaymentFailureReasonZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PaymentFailureReasonZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1PaymentFailureReasonZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PaymentFailureReasonZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PaymentFailureReasonZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_PaymentFailureReasonZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1PaymentFailureReasonZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PaymentFailureReasonZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PaymentFailureReasonZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PaymentFailureReasonZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PaymentFailureReasonZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PaymentFailureReasonZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PaymentFailureReasonZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PaymentFailureReasonZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PaymentFailureReasonZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PaymentFailureReasonZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PaymentFailureReasonZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_PaymentFailureReasonZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1PaymentFailureReasonZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_U128Z_some
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1U128Z_1some
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_U128Z_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1U128Z_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_U128Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1U128Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_U128Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1U128Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_U128Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1U128Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_ClaimedHTLCZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1ClaimedHTLCZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_EventZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1EventZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_EventZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1EventZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_EventZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1EventZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_EventZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1EventZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_EventZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1EventZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonceDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonceDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonceDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonceDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonceDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NonceDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonceDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NonceDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonceDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonceDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonceDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonceDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_RouteHintHopZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1RouteHintHopZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixBolt11ParseErrorZ_ok
 * Signature: (Lorg/ldk/enums/SiPrefix;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixBolt11ParseErrorZ_1ok
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixBolt11ParseErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixBolt11ParseErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixBolt11ParseErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixBolt11ParseErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixBolt11ParseErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixBolt11ParseErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixBolt11ParseErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixBolt11ParseErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixBolt11ParseErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixBolt11ParseErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceParseOrSemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceParseOrSemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceParseOrSemanticErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceParseOrSemanticErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceParseOrSemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceParseOrSemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceParseOrSemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceParseOrSemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceParseOrSemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceParseOrSemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceParseOrSemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceParseOrSemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawBolt11InvoiceBolt11ParseErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawBolt11InvoiceBolt11ParseErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawBolt11InvoiceBolt11ParseErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawBolt11InvoiceBolt11ParseErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawBolt11InvoiceBolt11ParseErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawBolt11InvoiceBolt11ParseErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawBolt11InvoiceBolt11ParseErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawBolt11InvoiceBolt11ParseErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawBolt11InvoiceBolt11ParseErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawBolt11InvoiceBolt11ParseErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawBolt11InvoiceBolt11ParseErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawBolt11InvoiceBolt11ParseErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawBolt11Invoice_u832Bolt11InvoiceSignatureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawBolt11Invoice_1u832Bolt11InvoiceSignatureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawBolt11Invoice_u832Bolt11InvoiceSignatureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawBolt11Invoice_1u832Bolt11InvoiceSignatureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawBolt11Invoice_u832Bolt11InvoiceSignatureZ_new
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawBolt11Invoice_1u832Bolt11InvoiceSignatureZ_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawBolt11Invoice_u832Bolt11InvoiceSignatureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawBolt11Invoice_1u832Bolt11InvoiceSignatureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeySecp256k1ErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeySecp256k1ErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeySecp256k1ErrorZ_err
 * Signature: (Lorg/ldk/enums/Secp256k1Error;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeySecp256k1ErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeySecp256k1ErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeySecp256k1ErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeySecp256k1ErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeySecp256k1ErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeySecp256k1ErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeySecp256k1ErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeySecp256k1ErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeySecp256k1ErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_PrivateRouteZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1PrivateRouteZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_err
 * Signature: (Lorg/ldk/enums/CreationError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt11SemanticErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt11SemanticErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt11SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt11SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt11SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt11SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt11SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt11SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt11SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt11SemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt11SemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneBolt11SemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneBolt11SemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceBolt11SemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceBolt11SemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceBolt11SemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/Bolt11SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceBolt11SemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceBolt11SemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceBolt11SemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceBolt11SemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceBolt11SemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceBolt11SemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceBolt11SemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceBolt11SemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceBolt11SemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_err
 * Signature: (Lorg/ldk/enums/CreationError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_err
 * Signature: (Lorg/ldk/enums/CreationError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BigSizeDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BigSizeDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BigSizeDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BigSizeDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BigSizeDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BigSizeDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BigSizeDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BigSizeDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BigSizeDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BigSizeDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BigSizeDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BigSizeDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UntrustedStringDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UntrustedStringDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UntrustedStringDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UntrustedStringDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UntrustedStringDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UntrustedStringDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UntrustedStringDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UntrustedStringDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UntrustedStringDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UntrustedStringDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UntrustedStringDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UntrustedStringDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HostnameDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HostnameDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HostnameDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HostnameDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HostnameDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HostnameDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HostnameDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HostnameDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HostnameDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HostnameDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HostnameDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HostnameDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionU16LenLimitedDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionU16LenLimitedDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelIdDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelIdDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceFeaturesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceFeaturesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt11InvoiceFeaturesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt11InvoiceFeaturesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceFeaturesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceFeaturesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12InvoiceFeaturesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12InvoiceFeaturesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopFeaturesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopFeaturesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopFeaturesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopFeaturesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple__u832u16Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1_1u832u16Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple__u832u16Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1_1u832u16Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple__u832u16Z_new
 * Signature: ([BS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1_1u832u16Z_1new
  (JNIEnv *, jclass, jbyteArray, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple__u832u16Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1_1u832u16Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPayInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPayInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPayInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPayInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPayInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPayInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPayInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPayInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPayInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPayInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPayInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPayInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPaymentPathNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPaymentPathNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPaymentPathNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPaymentPathNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPaymentPathNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPaymentPathNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPaymentPathNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPaymentPathNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPaymentPathNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPaymentPathNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedPaymentPathNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedPaymentPathNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_PaymentForwardNodeZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1PaymentForwardNodeZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentRelayDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentRelayDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentRelayDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentRelayDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentRelayDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentRelayDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentRelayDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentRelayDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentRelayDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentRelayDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentRelayDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentRelayDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentConstraintsDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentConstraintsDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentConstraintsDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentConstraintsDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentConstraintsDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentConstraintsDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentConstraintsDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentConstraintsDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentConstraintsDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentConstraintsDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentConstraintsDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentConstraintsDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentContextDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentContextDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentContextDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentContextDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentContextDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentContextDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentContextDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentContextDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentContextDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentContextDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentContextDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentContextDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12OfferContextDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12OfferContextDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12OfferContextDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12OfferContextDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12OfferContextDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12OfferContextDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12OfferContextDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12OfferContextDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12OfferContextDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12OfferContextDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12OfferContextDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12OfferContextDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12RefundContextDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12RefundContextDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12RefundContextDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12RefundContextDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12RefundContextDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12RefundContextDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12RefundContextDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12RefundContextDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12RefundContextDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12RefundContextDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_Bolt12RefundContextDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1Bolt12RefundContextDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutUtxoLookupErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutUtxoLookupErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutUtxoLookupErrorZ_err
 * Signature: (Lorg/ldk/enums/UtxoLookupError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutUtxoLookupErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutUtxoLookupErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutUtxoLookupErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutUtxoLookupErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutUtxoLookupErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutUtxoLookupErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutUtxoLookupErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutUtxoLookupErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutUtxoLookupErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ResponderDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ResponderDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ResponderDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ResponderDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ResponderDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ResponderDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ResponderDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ResponderDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ResponderDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ResponderDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ResponderDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ResponderDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessagePathNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessagePathNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessagePathNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessagePathNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessagePathNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessagePathNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessagePathNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessagePathNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessagePathNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessagePathNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OnionMessagePathNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OnionMessagePathNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedMessagePathZNoneZ_ok
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedMessagePathZNoneZ_1ok
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedMessagePathZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedMessagePathZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedMessagePathZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedMessagePathZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedMessagePathZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedMessagePathZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedMessagePathZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedMessagePathZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_BlindedMessagePathZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1BlindedMessagePathZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_MessageForwardNodeZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1MessageForwardNodeZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MessageContextZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MessageContextZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MessageContextZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MessageContextZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MessageContextZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1MessageContextZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MessageContextZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MessageContextZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MessageContextZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MessageContextZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZ_new
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZ_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZSendErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZSendErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZSendErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZSendErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZSendErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZSendErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZSendErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZSendErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZSendErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZSendErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C3Tuple_PublicKeyOnionMessageCOption_CVec_SocketAddressZZZSendErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C3Tuple_1PublicKeyOnionMessageCOption_1CVec_1SocketAddressZZZSendErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PeeledOnionNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PeeledOnionNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PeeledOnionNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PeeledOnionNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PeeledOnionNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PeeledOnionNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PeeledOnionNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PeeledOnionNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PeeledOnionNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PeeledOnionNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PeeledOnionNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PeeledOnionNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SendSuccessSendErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SendSuccessSendErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SendSuccessSendErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SendSuccessSendErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SendSuccessSendErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SendSuccessSendErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SendSuccessSendErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SendSuccessSendErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SendSuccessSendErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SendSuccessSendErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SendSuccessSendErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SendSuccessSendErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSendErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSendErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSendErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSendErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSendErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSendErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSendErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSendErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSendErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSendErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSendErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSendErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedHopDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedHopDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_PhantomRouteHintsZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1PhantomRouteHintsZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceErrorDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceErrorDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceErrorDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceErrorDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceErrorDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceErrorDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceErrorDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceErrorDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceErrorDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceErrorDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceErrorDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceErrorDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrackedSpendableOutputDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrackedSpendableOutputDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrackedSpendableOutputDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrackedSpendableOutputDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrackedSpendableOutputDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TrackedSpendableOutputDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrackedSpendableOutputDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TrackedSpendableOutputDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrackedSpendableOutputDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrackedSpendableOutputDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrackedSpendableOutputDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrackedSpendableOutputDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSpendStatusDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSpendStatusDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSpendStatusDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSpendStatusDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSpendStatusDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSpendStatusDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSpendStatusDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSpendStatusDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSpendStatusDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSpendStatusDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSpendStatusDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSpendStatusDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_FilterZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1FilterZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_FilterZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1FilterZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_FilterZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1FilterZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_TrackedSpendableOutputZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1TrackedSpendableOutputZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSweeperDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSweeperDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSweeperDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSweeperDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSweeperDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSweeperDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutputSweeperDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OutputSweeperDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BestBlockOutputSweeperZ_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BestBlockOutputSweeperZ_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BestBlockOutputSweeperZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BestBlockOutputSweeperZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BestBlockOutputSweeperZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BestBlockOutputSweeperZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BestBlockOutputSweeperZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BestBlockOutputSweeperZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BestBlockOutputSweeperZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BestBlockOutputSweeperZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BestBlockOutputSweeperZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BestBlockOutputSweeperZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentBasepointDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentBasepointDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentBasepointDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentBasepointDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentBasepointDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentBasepointDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentBasepointDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentBasepointDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentBasepointDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentBasepointDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentBasepointDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentBasepointDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentKeyDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentKeyDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentKeyDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentKeyDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentKeyDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentKeyDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentKeyDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentKeyDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentKeyDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentKeyDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentKeyDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentKeyDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcBasepointDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcBasepointDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcBasepointDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcBasepointDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcBasepointDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcBasepointDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcBasepointDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcBasepointDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcBasepointDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcBasepointDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcBasepointDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcBasepointDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcKeyDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcKeyDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcKeyDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcKeyDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcKeyDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcKeyDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcKeyDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcKeyDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcKeyDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcKeyDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HtlcKeyDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HtlcKeyDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationBasepointDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationBasepointDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationBasepointDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationBasepointDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationBasepointDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationBasepointDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationBasepointDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationBasepointDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationBasepointDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationBasepointDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationBasepointDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationBasepointDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationKeyDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationKeyDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationKeyDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationKeyDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationKeyDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationKeyDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationKeyDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationKeyDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationKeyDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationKeyDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevocationKeyDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevocationKeyDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_LockedChannelMonitorNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1LockedChannelMonitorNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_LockedChannelMonitorNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1LockedChannelMonitorNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_LockedChannelMonitorNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1LockedChannelMonitorNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_LockedChannelMonitorNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1LockedChannelMonitorNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointChannelIdZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointChannelIdZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointChannelIdZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointChannelIdZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointChannelIdZ_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointChannelIdZ_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointChannelIdZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointChannelIdZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_OutPointChannelIdZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1OutPointChannelIdZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u64ZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u64ZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u64ZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u64ZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u64ZZ_new
 * Signature: (J[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u64ZZ_1new
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointCVec_u64ZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointCVec_1u64ZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_OutPointCVec_u64ZZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1OutPointCVec_1u64ZZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BlindedMessagePathNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BlindedMessagePathNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MessageContextDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MessageContextDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MessageContextDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MessageContextDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MessageContextDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1MessageContextDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MessageContextDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1MessageContextDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MessageContextDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MessageContextDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_MessageContextDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1MessageContextDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersContextDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersContextDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersContextDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersContextDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersContextDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OffersContextDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersContextDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OffersContextDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersContextDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersContextDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OffersContextDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OffersContextDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsContextDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsContextDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsContextDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsContextDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsContextDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsContextDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsContextDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsContextDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsContextDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsContextDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AsyncPaymentsContextDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AsyncPaymentsContextDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverContextDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverContextDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverContextDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverContextDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverContextDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverContextDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverContextDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverContextDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverContextDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverContextDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DNSResolverContextDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DNSResolverContextDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_APIError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_apimisuse_error
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1apimisuse_1error
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_fee_rate_too_high
 * Signature: (Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1fee_1rate_1too_1high
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_invalid_route
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1invalid_1route
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_channel_unavailable
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1channel_1unavailable
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_monitor_update_in_progress
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1monitor_1update_1in_1progress
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_incompatible_shutdown_script
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1incompatible_1shutdown_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_APIError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_APIError_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigSize_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BigSize_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigSize_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BigSize_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigSize_set_a
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BigSize_1set_1a
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigSize_new
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BigSize_1new
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigSize_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BigSize_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigSize_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BigSize_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigSize_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BigSize_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigSize_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BigSize_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigSize_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BigSize_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BigSize_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BigSize_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UntrustedString_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UntrustedString_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UntrustedString_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UntrustedString_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Hostname_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Hostname_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Hostname_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Hostname_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Hostname_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Hostname_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Hostname_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Hostname_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Hostname_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Hostname_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Hostname_len
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_Hostname_1len
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Hostname_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Hostname_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Hostname_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Hostname_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Hostname_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Hostname_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TransactionU16LenLimited_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TransactionU16LenLimited_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TransactionU16LenLimited_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TransactionU16LenLimited_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TransactionU16LenLimited_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TransactionU16LenLimited_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TransactionU16LenLimited_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TransactionU16LenLimited_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TransactionU16LenLimited_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TransactionU16LenLimited_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TransactionU16LenLimited_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TransactionU16LenLimited_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TransactionU16LenLimited_into_transaction
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TransactionU16LenLimited_1into_1transaction
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TransactionU16LenLimited_as_transaction
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TransactionU16LenLimited_1as_1transaction
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TransactionU16LenLimited_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TransactionU16LenLimited_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TransactionU16LenLimited_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TransactionU16LenLimited_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    sign
 * Signature: ([B[B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_sign
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    recover_pk
 * Signature: ([BLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_recover_1pk
  (JNIEnv *, jclass, jbyteArray, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    verify
 * Signature: ([BLjava/lang/String;[B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_verify
  (JNIEnv *, jclass, jbyteArray, jstring, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KVStore_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_KVStore_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MigratableKVStore_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MigratableKVStore_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    migrate_kv_store_data
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_migrate_1kv_1store_1data
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Persister_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Persister_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    read_channel_monitors
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_read_1channel_1monitors
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorUpdatingPersister_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MonitorUpdatingPersister_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorUpdatingPersister_new
 * Signature: (JJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorUpdatingPersister_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorUpdatingPersister_read_all_channel_monitors_with_updates
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorUpdatingPersister_1read_1all_1channel_1monitors_1with_1updates
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorUpdatingPersister_read_channel_monitor_with_updates
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorUpdatingPersister_1read_1channel_1monitor_1with_1updates
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorUpdatingPersister_cleanup_stale_updates
 * Signature: (JZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorUpdatingPersister_1cleanup_1stale_1updates
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorUpdatingPersister_as_Persist
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorUpdatingPersister_1as_1Persist
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorName_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MonitorName_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorName_new
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorName_1new
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorName_as_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_MonitorName_1as_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateName_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateName_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateName_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateName_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateName_set_a
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateName_1set_1a
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateName_new
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateName_1new
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateName_as_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_UpdateName_1as_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShortChannelIdError_clone
 * Signature: (J)Lorg/ldk/enums/ShortChannelIdError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ShortChannelIdError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShortChannelIdError_block_overflow
 * Signature: ()Lorg/ldk/enums/ShortChannelIdError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ShortChannelIdError_1block_1overflow
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShortChannelIdError_tx_index_overflow
 * Signature: ()Lorg/ldk/enums/ShortChannelIdError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ShortChannelIdError_1tx_1index_1overflow
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShortChannelIdError_vout_index_overflow
 * Signature: ()Lorg/ldk/enums/ShortChannelIdError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ShortChannelIdError_1vout_1index_1overflow
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShortChannelIdError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ShortChannelIdError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    block_from_scid
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_block_1from_1scid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    tx_index_from_scid
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_tx_1index_1from_1scid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    vout_from_scid
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_vout_1from_1scid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    scid_from_parts
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_scid_1from_1parts
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_get_descriptor
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1get_1descriptor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_set_descriptor
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1set_1descriptor
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_get_status
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1get_1status
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_set_status
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1set_1status
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_is_spent_in
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1is_1spent_1in
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrackedSpendableOutput_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrackedSpendableOutput_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSpendStatus_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutputSpendStatus_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSpendStatus_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSpendStatus_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSpendStatus_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSpendStatus_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSpendStatus_pending_initial_broadcast
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSpendStatus_1pending_1initial_1broadcast
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSpendStatus_pending_first_confirmation
 * Signature: ([BI[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSpendStatus_1pending_1first_1confirmation
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSpendStatus_pending_threshold_confirmations
 * Signature: ([BI[BI[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSpendStatus_1pending_1threshold_1confirmations
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jint, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSpendStatus_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OutputSpendStatus_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSpendStatus_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OutputSpendStatus_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSpendStatus_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSpendStatus_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSweeper_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutputSweeper_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSweeper_new
 * Signature: (JJJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSweeper_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSweeper_track_spendable_outputs
 * Signature: (J[JJZJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSweeper_1track_1spendable_1outputs
  (JNIEnv *, jclass, jlong, jlongArray, jlong, jboolean, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSweeper_tracked_spendable_outputs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_OutputSweeper_1tracked_1spendable_1outputs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSweeper_current_best_block
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSweeper_1current_1best_1block
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSweeper_as_Listen
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSweeper_1as_1Listen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSweeper_as_Confirm
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSweeper_1as_1Confirm
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendingDelay_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpendingDelay_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendingDelay_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendingDelay_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendingDelay_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendingDelay_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendingDelay_relative
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendingDelay_1relative
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendingDelay_absolute
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendingDelay_1absolute
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSweeper_read
 * Signature: ([BJJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutputSweeper_1read
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BestBlockOutputSweeperZ_read
 * Signature: ([BJJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BestBlockOutputSweeperZ_1read
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FutureCallback_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FutureCallback_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Future_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Future_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Future_register_callback_fn
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Future_1register_1callback_1fn
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Future_wait
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Future_1wait
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Future_wait_timeout
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Future_1wait_1timeout
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sleeper_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Sleeper_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sleeper_from_single_future
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sleeper_1from_1single_1future
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sleeper_from_two_futures
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sleeper_1from_1two_1futures
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sleeper_from_three_futures
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sleeper_1from_1three_1futures
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sleeper_new
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sleeper_1new
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sleeper_wait
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Sleeper_1wait
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sleeper_wait_timeout
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Sleeper_1wait_1timeout
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_clone
 * Signature: (J)Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_gossip
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1gossip
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_trace
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1trace
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_debug
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1debug
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_info
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1info
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_warn
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1warn
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_error
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1error
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Level_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Level_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Level_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_max
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1max
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_level
 * Signature: (J)Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Record_1get_1level
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_level
 * Signature: (JLorg/ldk/enums/Level;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1level
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_peer_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Record_1get_1peer_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_peer_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1peer_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Record_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_args
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Record_1get_1args
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_args
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1args
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_module_path
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Record_1get_1module_1path
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_module_path
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1module_1path
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_file
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Record_1get_1file
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_file
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1file
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_line
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_Record_1get_1line
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_line
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1line
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_payment_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Record_1get_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_payment_hash
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1payment_1hash
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_new
 * Signature: (Lorg/ldk/enums/Level;[BJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;IJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Record_1new
  (JNIEnv *, jclass, jobject, jbyteArray, jlong, jstring, jstring, jstring, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Record_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Record_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Logger_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Logger_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_minimum_depth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1minimum_1depth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_minimum_depth
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1minimum_1depth
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_our_to_self_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1our_1to_1self_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_our_to_self_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1our_1to_1self_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_our_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1our_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_our_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1our_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_max_inbound_htlc_value_in_flight_percent_of_channel
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1max_1inbound_1htlc_1value_1in_1flight_1percent_1of_1channel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_max_inbound_htlc_value_in_flight_percent_of_channel
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1max_1inbound_1htlc_1value_1in_1flight_1percent_1of_1channel
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_negotiate_scid_privacy
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1negotiate_1scid_1privacy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_negotiate_scid_privacy
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1negotiate_1scid_1privacy
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_announce_for_forwarding
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1announce_1for_1forwarding
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_announce_for_forwarding
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1announce_1for_1forwarding
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_commit_upfront_shutdown_pubkey
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1commit_1upfront_1shutdown_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_commit_upfront_shutdown_pubkey
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1commit_1upfront_1shutdown_1pubkey
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_their_channel_reserve_proportional_millionths
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1their_1channel_1reserve_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_their_channel_reserve_proportional_millionths
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1their_1channel_1reserve_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_negotiate_anchors_zero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1negotiate_1anchors_1zero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_negotiate_anchors_zero_fee_htlc_tx
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1negotiate_1anchors_1zero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_our_max_accepted_htlcs
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1our_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_our_max_accepted_htlcs
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1our_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_new
 * Signature: (ISJBZZZIZS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1new
  (JNIEnv *, jclass, jint, jshort, jlong, jbyte, jboolean, jboolean, jboolean, jint, jboolean, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_min_funding_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1min_1funding_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_min_funding_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1min_1funding_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_max_funding_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1max_1funding_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_max_funding_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1max_1funding_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_max_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1max_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_max_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1max_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_min_max_htlc_value_in_flight_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1min_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_min_max_htlc_value_in_flight_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1min_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_max_channel_reserve_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1max_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_max_channel_reserve_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1max_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_min_max_accepted_htlcs
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1min_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_min_max_accepted_htlcs
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1min_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_max_minimum_depth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1max_1minimum_1depth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_max_minimum_depth
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1max_1minimum_1depth
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_trust_own_funding_0conf
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1trust_1own_1funding_10conf
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_trust_own_funding_0conf
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1trust_1own_1funding_10conf
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_force_announced_channel_preference
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1force_1announced_1channel_1preference
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_force_announced_channel_preference
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1force_1announced_1channel_1preference
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_their_to_self_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1their_1to_1self_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_their_to_self_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1their_1to_1self_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_new
 * Signature: (JJJJJSIZZS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jshort, jint, jboolean, jboolean, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MaxDustHTLCExposure_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MaxDustHTLCExposure_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MaxDustHTLCExposure_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MaxDustHTLCExposure_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MaxDustHTLCExposure_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MaxDustHTLCExposure_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MaxDustHTLCExposure_fixed_limit_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MaxDustHTLCExposure_1fixed_1limit_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MaxDustHTLCExposure_fee_rate_multiplier
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MaxDustHTLCExposure_1fee_1rate_1multiplier
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MaxDustHTLCExposure_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_MaxDustHTLCExposure_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MaxDustHTLCExposure_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_MaxDustHTLCExposure_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MaxDustHTLCExposure_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MaxDustHTLCExposure_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_forwarding_fee_proportional_millionths
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1forwarding_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_forwarding_fee_proportional_millionths
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1forwarding_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_forwarding_fee_base_msat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1forwarding_1fee_1base_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_forwarding_fee_base_msat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1forwarding_1fee_1base_1msat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_max_dust_htlc_exposure
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1max_1dust_1htlc_1exposure
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_max_dust_htlc_exposure
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1max_1dust_1htlc_1exposure
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_force_close_avoidance_max_fee_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1force_1close_1avoidance_1max_1fee_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_force_close_avoidance_max_fee_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1force_1close_1avoidance_1max_1fee_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_accept_underpaying_htlcs
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1accept_1underpaying_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_accept_underpaying_htlcs
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1accept_1underpaying_1htlcs
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_new
 * Signature: (IISJJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1new
  (JNIEnv *, jclass, jint, jint, jshort, jlong, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_apply
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1apply
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_get_forwarding_fee_proportional_millionths
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1get_1forwarding_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_set_forwarding_fee_proportional_millionths
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1set_1forwarding_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_get_forwarding_fee_base_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1get_1forwarding_1fee_1base_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_set_forwarding_fee_base_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1set_1forwarding_1fee_1base_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_get_cltv_expiry_delta
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_set_cltv_expiry_delta
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_get_max_dust_htlc_exposure_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1get_1max_1dust_1htlc_1exposure_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_set_max_dust_htlc_exposure_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1set_1max_1dust_1htlc_1exposure_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_get_force_close_avoidance_max_fee_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1get_1force_1close_1avoidance_1max_1fee_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_set_force_close_avoidance_max_fee_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1set_1force_1close_1avoidance_1max_1fee_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfigUpdate_new
 * Signature: (JJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfigUpdate_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_channel_handshake_config
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1channel_1handshake_1config
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_channel_handshake_config
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1channel_1handshake_1config
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_channel_handshake_limits
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1channel_1handshake_1limits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_channel_handshake_limits
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1channel_1handshake_1limits
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_channel_config
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1channel_1config
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_channel_config
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1channel_1config
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_accept_forwards_to_priv_channels
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1accept_1forwards_1to_1priv_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_accept_forwards_to_priv_channels
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1accept_1forwards_1to_1priv_1channels
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_accept_inbound_channels
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1accept_1inbound_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_accept_inbound_channels
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1accept_1inbound_1channels
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_manually_accept_inbound_channels
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1manually_1accept_1inbound_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_manually_accept_inbound_channels
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1manually_1accept_1inbound_1channels
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_accept_intercept_htlcs
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1accept_1intercept_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_accept_intercept_htlcs
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1accept_1intercept_1htlcs
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_manually_handle_bolt12_invoices
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1manually_1handle_1bolt12_1invoices
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_manually_handle_bolt12_invoices
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1manually_1handle_1bolt12_1invoices
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_new
 * Signature: (JJJZZZZZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jboolean, jboolean, jboolean, jboolean, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BestBlock_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_get_block_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BestBlock_1get_1block_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_set_block_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BestBlock_1set_1block_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_get_height
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_BestBlock_1get_1height
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_set_height
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BestBlock_1set_1height
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_new
 * Signature: ([BI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BestBlock_1new
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BestBlock_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BestBlock_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BestBlock_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BestBlock_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_from_network
 * Signature: (Lorg/ldk/enums/Network;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BestBlock_1from_1network
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BestBlock_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BestBlock_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Listen_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Listen_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Confirm_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Confirm_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdateStatus_clone
 * Signature: (J)Lorg/ldk/enums/ChannelMonitorUpdateStatus;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdateStatus_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdateStatus_completed
 * Signature: ()Lorg/ldk/enums/ChannelMonitorUpdateStatus;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdateStatus_1completed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdateStatus_in_progress
 * Signature: ()Lorg/ldk/enums/ChannelMonitorUpdateStatus;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdateStatus_1in_1progress
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdateStatus_unrecoverable_error
 * Signature: ()Lorg/ldk/enums/ChannelMonitorUpdateStatus;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdateStatus_1unrecoverable_1error
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdateStatus_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdateStatus_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Watch_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Watch_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Filter_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Filter_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_get_block_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1get_1block_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_set_block_hash
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1set_1block_1hash
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_get_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1get_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_set_outpoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1set_1outpoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_get_script_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1get_1script_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_set_script_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1set_1script_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_new
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1new
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BroadcasterInterface_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BroadcasterInterface_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_clone
 * Signature: (J)Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_maximum_fee_estimate
 * Signature: ()Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1maximum_1fee_1estimate
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_urgent_on_chain_sweep
 * Signature: ()Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1urgent_1on_1chain_1sweep
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_min_allowed_anchor_channel_remote_fee
 * Signature: ()Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1min_1allowed_1anchor_1channel_1remote_1fee
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_min_allowed_non_anchor_channel_remote_fee
 * Signature: ()Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1min_1allowed_1non_1anchor_1channel_1remote_1fee
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_anchor_channel_fee
 * Signature: ()Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1anchor_1channel_1fee
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_non_anchor_channel_fee
 * Signature: ()Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1non_1anchor_1channel_1fee
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_channel_close_minimum
 * Signature: ()Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1channel_1close_1minimum
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_output_spending_fee
 * Signature: ()Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1output_1spending_1fee
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FeeEstimator_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FeeEstimator_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Persist_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Persist_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LockedChannelMonitor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LockedChannelMonitor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_new
 * Signature: (JJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_get_claimable_balances
 * Signature: (J[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1get_1claimable_1balances
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_get_monitor
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1get_1monitor
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_list_monitors
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1list_1monitors
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_list_pending_monitor_updates
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1list_1pending_1monitor_1updates
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_channel_monitor_updated
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1channel_1monitor_1updated
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_get_update_future
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1get_1update_1future
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_rebroadcast_pending_claims
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1rebroadcast_1pending_1claims
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_signer_unblocked
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1signer_1unblocked
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_archive_fully_resolved_channel_monitors
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1archive_1fully_1resolved_1channel_1monitors
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_as_Listen
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1as_1Listen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_as_Confirm
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1as_1Confirm
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_as_Watch
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1as_1Watch
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_as_EventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1as_1EventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_get_update_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1get_1update_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_set_update_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1set_1update_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_htlcevent
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1htlcevent
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_holder_force_closed_with_info
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1holder_1force_1closed_1with_1info
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_holder_force_closed
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1holder_1force_1closed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_completed
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1completed
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCUpdate_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_HTLCUpdate_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCUpdate_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCUpdate_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCUpdate_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCUpdate_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BalanceSource_clone
 * Signature: (J)Lorg/ldk/enums/BalanceSource;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_BalanceSource_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BalanceSource_holder_force_closed
 * Signature: ()Lorg/ldk/enums/BalanceSource;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_BalanceSource_1holder_1force_1closed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BalanceSource_counterparty_force_closed
 * Signature: ()Lorg/ldk/enums/BalanceSource;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_BalanceSource_1counterparty_1force_1closed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BalanceSource_coop_close
 * Signature: ()Lorg/ldk/enums/BalanceSource;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_BalanceSource_1coop_1close
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BalanceSource_htlc
 * Signature: ()Lorg/ldk/enums/BalanceSource;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_BalanceSource_1htlc
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BalanceSource_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BalanceSource_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Balance_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_claimable_on_channel_close
 * Signature: (JJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1claimable_1on_1channel_1close
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_claimable_awaiting_confirmations
 * Signature: (JILorg/ldk/enums/BalanceSource;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1claimable_1awaiting_1confirmations
  (JNIEnv *, jclass, jlong, jint, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_contentious_claimable
 * Signature: (JI[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1contentious_1claimable
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_maybe_timeout_claimable_htlc
 * Signature: (JI[BZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1maybe_1timeout_1claimable_1htlc
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_maybe_preimage_claimable_htlc
 * Signature: (JI[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1maybe_1preimage_1claimable_1htlc
  (JNIEnv *, jclass, jlong, jint, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_counterparty_revoked_output_claimable
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1counterparty_1revoked_1output_1claimable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Balance_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_claimable_amount_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1claimable_1amount_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_update_monitor
 * Signature: (JJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1update_1monitor
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_latest_update_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1latest_1update_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_funding_txo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1funding_1txo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_outputs_to_watch
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1outputs_1to_1watch
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_load_outputs_to_watch
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1load_1outputs_1to_1watch
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_and_clear_pending_monitor_events
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1and_1clear_1pending_1monitor_1events
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_process_pending_events
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1process_1pending_1events
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_initial_counterparty_commitment_tx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1initial_1counterparty_1commitment_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_counterparty_commitment_txs_from_update
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1counterparty_1commitment_1txs_1from_1update
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_sign_to_local_justice_tx
 * Signature: (J[BJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1sign_1to_1local_1justice_1tx
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_counterparty_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1counterparty_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_broadcast_latest_holder_commitment_txn
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1broadcast_1latest_1holder_1commitment_1txn
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_block_connected
 * Signature: (J[B[JIJJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1block_1connected
  (JNIEnv *, jclass, jlong, jbyteArray, jlongArray, jint, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_block_disconnected
 * Signature: (J[BIJJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1block_1disconnected
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_transactions_confirmed
 * Signature: (J[B[JIJJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1transactions_1confirmed
  (JNIEnv *, jclass, jlong, jbyteArray, jlongArray, jint, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_transaction_unconfirmed
 * Signature: (J[BJJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1transaction_1unconfirmed
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_best_block_updated
 * Signature: (J[BIJJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1best_1block_1updated
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_relevant_txids
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1relevant_1txids
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_current_best_block
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1current_1best_1block
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_rebroadcast_pending_claims
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1rebroadcast_1pending_1claims
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_has_pending_claims
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1has_1pending_1claims
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_signer_unblocked
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1signer_1unblocked
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_spendable_outputs
 * Signature: (J[BI)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1spendable_1outputs
  (JNIEnv *, jclass, jlong, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_check_and_update_full_resolution_status
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1check_1and_1update_1full_1resolution_1status
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_claimable_balances
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1claimable_1balances
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelMonitorZ_read
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelMonitorZ_1read
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutPoint_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_get_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OutPoint_1get_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_set_txid
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutPoint_1set_1txid
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_get_index
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_OutPoint_1get_1index
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_set_index
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutPoint_1set_1index
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_new
 * Signature: ([BS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutPoint_1new
  (JNIEnv *, jclass, jbyteArray, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutPoint_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutPoint_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OutPoint_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutPoint_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_OutPoint_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OutPoint_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutPoint_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_get_err_code
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1get_1err_1code
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_set_err_code
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1set_1err_1code
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_get_err_data
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1get_1err_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_set_err_data
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1set_1err_1data
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_get_msg
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1get_1msg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_set_msg
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1set_1msg
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_new
 * Signature: (S[BLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1new
  (JNIEnv *, jclass, jshort, jbyteArray, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCErr_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InboundHTLCErr_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    peel_payment_onion
 * Signature: (JJJIZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_peel_1payment_1onion
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCRouting_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PendingHTLCRouting_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCRouting_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCRouting_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCRouting_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCRouting_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCRouting_forward
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCRouting_1forward
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCRouting_receive
 * Signature: (JJJI[B[JZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCRouting_1receive
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jbyteArray, jlongArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCRouting_receive_keysend
 * Signature: (J[BJI[JZZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCRouting_1receive_1keysend
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jint, jlongArray, jboolean, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedForward_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_get_inbound_blinding_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedForward_1get_1inbound_1blinding_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_set_inbound_blinding_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedForward_1set_1inbound_1blinding_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_get_failure
 * Signature: (J)Lorg/ldk/enums/BlindedFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_BlindedForward_1get_1failure
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_set_failure
 * Signature: (JLorg/ldk/enums/BlindedFailure;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedForward_1set_1failure
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_get_next_blinding_override
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedForward_1get_1next_1blinding_1override
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_set_next_blinding_override
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedForward_1set_1next_1blinding_1override
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_new
 * Signature: ([BLorg/ldk/enums/BlindedFailure;[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedForward_1new
  (JNIEnv *, jclass, jbyteArray, jobject, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedForward_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedForward_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedForward_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedForward_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_get_routing
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1get_1routing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_set_routing
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1set_1routing
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_get_incoming_shared_secret
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1get_1incoming_1shared_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_set_incoming_shared_secret
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1set_1incoming_1shared_1secret
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_get_payment_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1get_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_set_payment_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1set_1payment_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_get_incoming_amt_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1get_1incoming_1amt_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_set_incoming_amt_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1set_1incoming_1amt_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_get_outgoing_amt_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1get_1outgoing_1amt_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_set_outgoing_amt_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1set_1outgoing_1amt_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_get_outgoing_cltv_value
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1get_1outgoing_1cltv_1value
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_set_outgoing_cltv_value
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1set_1outgoing_1cltv_1value
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_get_skimmed_fee_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1get_1skimmed_1fee_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_set_skimmed_fee_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1set_1skimmed_1fee_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_new
 * Signature: (J[B[BJJIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlong, jlong, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedFailure_clone
 * Signature: (J)Lorg/ldk/enums/BlindedFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_BlindedFailure_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedFailure_from_introduction_node
 * Signature: ()Lorg/ldk/enums/BlindedFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_BlindedFailure_1from_1introduction_1node
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedFailure_from_blinded_node
 * Signature: ()Lorg/ldk/enums/BlindedFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_BlindedFailure_1from_1blinded_1node
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedFailure_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedFailure_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedFailure_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedFailure_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Verification_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Verification_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_as_Verification
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1as_1Verification
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FailureCode_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FailureCode_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FailureCode_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FailureCode_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FailureCode_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FailureCode_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FailureCode_temporary_node_failure
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FailureCode_1temporary_1node_1failure
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FailureCode_required_node_feature_missing
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FailureCode_1required_1node_1feature_1missing
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FailureCode_incorrect_or_unknown_payment_details
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FailureCode_1incorrect_1or_1unknown_1payment_1details
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FailureCode_invalid_onion_payload
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FailureCode_1invalid_1onion_1payload
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChainParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_get_network
 * Signature: (J)Lorg/ldk/enums/Network;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChainParameters_1get_1network
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_set_network
 * Signature: (JLorg/ldk/enums/Network;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChainParameters_1set_1network
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_get_best_block
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainParameters_1get_1best_1block
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_set_best_block
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChainParameters_1set_1best_1block
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_new
 * Signature: (Lorg/ldk/enums/Network;J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainParameters_1new
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecentPaymentDetails_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RecentPaymentDetails_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecentPaymentDetails_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecentPaymentDetails_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecentPaymentDetails_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecentPaymentDetails_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecentPaymentDetails_awaiting_invoice
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecentPaymentDetails_1awaiting_1invoice
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecentPaymentDetails_pending
 * Signature: ([B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecentPaymentDetails_1pending
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecentPaymentDetails_fulfilled
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecentPaymentDetails_1fulfilled
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecentPaymentDetails_abandoned
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecentPaymentDetails_1abandoned
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_get_channels
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1get_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_set_channels
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1set_1channels
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_get_phantom_scid
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1get_1phantom_1scid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_set_phantom_scid
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1set_1phantom_1scid
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_get_real_node_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1get_1real_1node_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_set_real_node_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1set_1real_1node_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_new
 * Signature: ([JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1new
  (JNIEnv *, jclass, jlongArray, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_new
 * Signature: (JJJJJJJJJJJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_get_current_default_configuration
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1get_1current_1default_1configuration
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_create_channel
 * Signature: (J[BJJ[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1create_1channel
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_list_channels
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelManager_1list_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_list_usable_channels
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelManager_1list_1usable_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_list_channels_with_counterparty
 * Signature: (J[B)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelManager_1list_1channels_1with_1counterparty
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_list_recent_payments
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelManager_1list_1recent_1payments
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_close_channel
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1close_1channel
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_close_channel_with_feerate_and_script
 * Signature: (JJ[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1close_1channel_1with_1feerate_1and_1script
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_force_close_broadcasting_latest_txn
 * Signature: (JJ[BLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1force_1close_1broadcasting_1latest_1txn
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_force_close_without_broadcasting_txn
 * Signature: (JJ[BLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1force_1close_1without_1broadcasting_1txn
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_force_close_all_channels_broadcasting_latest_txn
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1force_1close_1all_1channels_1broadcasting_1latest_1txn
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_force_close_all_channels_without_broadcasting_txn
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1force_1close_1all_1channels_1without_1broadcasting_1txn
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_send_payment
 * Signature: (J[BJ[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1send_1payment
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_send_payment_for_bolt12_invoice
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1send_1payment_1for_1bolt12_1invoice
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_abandon_payment
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1abandon_1payment
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_send_spontaneous_payment
 * Signature: (JJJ[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1send_1spontaneous_1payment
  (JNIEnv *, jclass, jlong, jlong, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_send_probe
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1send_1probe
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_send_spontaneous_preflight_probes
 * Signature: (J[BJIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1send_1spontaneous_1preflight_1probes
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_send_preflight_probes
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1send_1preflight_1probes
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_funding_transaction_generated
 * Signature: (JJ[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1funding_1transaction_1generated
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_unsafe_manual_funding_transaction_generated
 * Signature: (JJ[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1unsafe_1manual_1funding_1transaction_1generated
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_batch_funding_transaction_generated
 * Signature: (J[J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1batch_1funding_1transaction_1generated
  (JNIEnv *, jclass, jlong, jlongArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_update_partial_channel_config
 * Signature: (J[B[JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1update_1partial_1channel_1config
  (JNIEnv *, jclass, jlong, jbyteArray, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_update_channel_config
 * Signature: (J[B[JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1update_1channel_1config
  (JNIEnv *, jclass, jlong, jbyteArray, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_forward_intercepted_htlc
 * Signature: (J[BJ[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1forward_1intercepted_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_fail_intercepted_htlc
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1fail_1intercepted_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_process_pending_htlc_forwards
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1process_1pending_1htlc_1forwards
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_timer_tick_occurred
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1timer_1tick_1occurred
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_fail_htlc_backwards
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1fail_1htlc_1backwards
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_fail_htlc_backwards_with_reason
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1fail_1htlc_1backwards_1with_1reason
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_claim_funds
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1claim_1funds
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_claim_funds_with_known_custom_tlvs
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1claim_1funds_1with_1known_1custom_1tlvs
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_get_our_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelManager_1get_1our_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_accept_inbound_channel
 * Signature: (JJ[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1accept_1inbound_1channel
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_accept_inbound_channel_from_trusted_peer_0conf
 * Signature: (JJ[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1accept_1inbound_1channel_1from_1trusted_1peer_10conf
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_signer_unblocked
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1signer_1unblocked
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_create_bolt11_invoice
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1create_1bolt11_1invoice
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_get_amount_msats
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1get_1amount_1msats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_set_amount_msats
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1set_1amount_1msats
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_get_description
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1get_1description
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_set_description
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1set_1description
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_get_invoice_expiry_delta_secs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1get_1invoice_1expiry_1delta_1secs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_set_invoice_expiry_delta_secs
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1set_1invoice_1expiry_1delta_1secs
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_get_min_final_cltv_expiry_delta
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1get_1min_1final_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_set_min_final_cltv_expiry_delta
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1set_1min_1final_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_get_payment_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1get_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_set_payment_hash
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1set_1payment_1hash
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_new
 * Signature: (JJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceParameters_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceParameters_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_create_offer_builder
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1create_1offer_1builder
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_create_refund_builder
 * Signature: (JJJ[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1create_1refund_1builder
  (JNIEnv *, jclass, jlong, jlong, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_pay_for_offer
 * Signature: (JJJJJ[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1pay_1for_1offer
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_request_refund_payment
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1request_1refund_1payment
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_pay_for_offer_from_human_readable_name
 * Signature: (JJJ[BJJ[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1pay_1for_1offer_1from_1human_1readable_1name
  (JNIEnv *, jclass, jlong, jlong, jlong, jbyteArray, jlong, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_create_inbound_payment
 * Signature: (JJIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1create_1inbound_1payment
  (JNIEnv *, jclass, jlong, jlong, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_create_inbound_payment_for_hash
 * Signature: (J[BJIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1create_1inbound_1payment_1for_1hash
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_get_payment_preimage
 * Signature: (J[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1get_1payment_1preimage
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_get_phantom_scid
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1get_1phantom_1scid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_get_phantom_route_hints
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1get_1phantom_1route_1hints
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_get_intercept_scid
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1get_1intercept_1scid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_compute_inflight_htlcs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1compute_1inflight_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_EventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1EventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_Listen
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1Listen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_Confirm
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1Confirm
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_get_event_or_persistence_needed_future
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1get_1event_1or_1persistence_1needed_1future
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_get_and_clear_needs_persistence
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelManager_1get_1and_1clear_1needs_1persistence
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_current_best_block
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1current_1best_1block
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_node_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1node_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_channel_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1channel_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_channel_type_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1channel_1type_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_init_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1init_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_ChannelMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1ChannelMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_OffersMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1OffersMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_AsyncPaymentsMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1AsyncPaymentsMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_DNSResolverMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1DNSResolverMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_NodeIdLookUp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1NodeIdLookUp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    provided_init_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_provided_1init_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomRouteHints_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PhantomRouteHints_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedForward_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedForward_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedForward_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCRouting_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PendingHTLCRouting_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCRouting_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCRouting_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PendingHTLCInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PendingHTLCInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedFailure_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedFailure_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedFailure_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedFailure_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelManager_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_entropy_source
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1entropy_1source
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_entropy_source
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1entropy_1source
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_node_signer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1node_1signer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_node_signer
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1node_1signer
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_signer_provider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1signer_1provider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_signer_provider
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1signer_1provider
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_fee_estimator
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1fee_1estimator
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_fee_estimator
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1fee_1estimator
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_chain_monitor
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1chain_1monitor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_chain_monitor
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1chain_1monitor
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_tx_broadcaster
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1tx_1broadcaster
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_tx_broadcaster
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1tx_1broadcaster
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_router
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1router
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_router
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1router
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_message_router
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1message_1router
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_message_router
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1message_1router
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_logger
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1logger
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_logger
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1logger
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_default_config
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1default_1config
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_default_config
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1default_1config
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_new
 * Signature: (JJJJJJJJJJ[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_ThirtyTwoBytesChannelManagerZ_read
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1ThirtyTwoBytesChannelManagerZ_1read
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_to_public_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1to_1public_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_derive_add_tweak
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1derive_1add_1tweak
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentBasepoint_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentBasepoint_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_from_basepoint
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1from_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_from_secret_key
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1from_1secret_1key
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_to_public_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1to_1public_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentKey_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentKey_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_to_public_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1to_1public_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_derive_add_tweak
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1derive_1add_1tweak
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcBasepoint_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HtlcBasepoint_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HtlcKey_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HtlcKey_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HtlcKey_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HtlcKey_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_HtlcKey_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HtlcKey_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HtlcKey_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_from_basepoint
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HtlcKey_1from_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_from_secret_key
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HtlcKey_1from_1secret_1key
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_to_public_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HtlcKey_1to_1public_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HtlcKey_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HtlcKey_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HtlcKey_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    add_public_key_tweak
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_add_1public_1key_1tweak
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationBasepoint_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevocationBasepoint_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationBasepoint_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevocationBasepoint_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationBasepoint_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevocationBasepoint_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationBasepoint_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevocationBasepoint_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationBasepoint_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RevocationBasepoint_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationBasepoint_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevocationBasepoint_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationBasepoint_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevocationBasepoint_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationBasepoint_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevocationBasepoint_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationBasepoint_to_public_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevocationBasepoint_1to_1public_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationBasepoint_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevocationBasepoint_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationBasepoint_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevocationBasepoint_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevocationKey_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevocationKey_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevocationKey_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevocationKey_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RevocationKey_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevocationKey_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevocationKey_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevocationKey_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_from_basepoint
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevocationKey_1from_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_to_public_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevocationKey_1to_1public_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevocationKey_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevocationKey_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevocationKey_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCStateDetails_clone
 * Signature: (J)Lorg/ldk/enums/InboundHTLCStateDetails;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_InboundHTLCStateDetails_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCStateDetails_awaiting_remote_revoke_to_add
 * Signature: ()Lorg/ldk/enums/InboundHTLCStateDetails;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_InboundHTLCStateDetails_1awaiting_1remote_1revoke_1to_1add
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCStateDetails_committed
 * Signature: ()Lorg/ldk/enums/InboundHTLCStateDetails;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_InboundHTLCStateDetails_1committed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCStateDetails_awaiting_remote_revoke_to_remove_fulfill
 * Signature: ()Lorg/ldk/enums/InboundHTLCStateDetails;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_InboundHTLCStateDetails_1awaiting_1remote_1revoke_1to_1remove_1fulfill
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCStateDetails_awaiting_remote_revoke_to_remove_fail
 * Signature: ()Lorg/ldk/enums/InboundHTLCStateDetails;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_InboundHTLCStateDetails_1awaiting_1remote_1revoke_1to_1remove_1fail
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCStateDetails_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InboundHTLCStateDetails_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCStateDetails_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCStateDetails_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_get_htlc_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1get_1htlc_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_set_htlc_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1set_1htlc_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_get_amount_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1get_1amount_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_set_amount_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1set_1amount_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_get_cltv_expiry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1get_1cltv_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_set_cltv_expiry
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1set_1cltv_1expiry
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_get_payment_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1get_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_set_payment_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1set_1payment_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_get_state
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1get_1state
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_set_state
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1set_1state
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_get_is_dust
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1get_1is_1dust
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_set_is_dust
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1set_1is_1dust
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_new
 * Signature: (JJI[BJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1new
  (JNIEnv *, jclass, jlong, jlong, jint, jbyteArray, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundHTLCDetails_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundHTLCDetails_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCStateDetails_clone
 * Signature: (J)Lorg/ldk/enums/OutboundHTLCStateDetails;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_OutboundHTLCStateDetails_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCStateDetails_awaiting_remote_revoke_to_add
 * Signature: ()Lorg/ldk/enums/OutboundHTLCStateDetails;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_OutboundHTLCStateDetails_1awaiting_1remote_1revoke_1to_1add
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCStateDetails_committed
 * Signature: ()Lorg/ldk/enums/OutboundHTLCStateDetails;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_OutboundHTLCStateDetails_1committed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCStateDetails_awaiting_remote_revoke_to_remove_success
 * Signature: ()Lorg/ldk/enums/OutboundHTLCStateDetails;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_OutboundHTLCStateDetails_1awaiting_1remote_1revoke_1to_1remove_1success
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCStateDetails_awaiting_remote_revoke_to_remove_failure
 * Signature: ()Lorg/ldk/enums/OutboundHTLCStateDetails;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_OutboundHTLCStateDetails_1awaiting_1remote_1revoke_1to_1remove_1failure
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCStateDetails_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OutboundHTLCStateDetails_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCStateDetails_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutboundHTLCStateDetails_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_get_htlc_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1get_1htlc_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_set_htlc_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1set_1htlc_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_get_amount_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1get_1amount_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_set_amount_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1set_1amount_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_get_cltv_expiry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1get_1cltv_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_set_cltv_expiry
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1set_1cltv_1expiry
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_get_payment_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1get_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_set_payment_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1set_1payment_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_get_state
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1get_1state
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_set_state
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1set_1state
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_get_skimmed_fee_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1get_1skimmed_1fee_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_set_skimmed_fee_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1set_1skimmed_1fee_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_get_is_dust
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1get_1is_1dust
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_set_is_dust
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1set_1is_1dust
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_new
 * Signature: (JJI[BJJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1new
  (JNIEnv *, jclass, jlong, jlong, jint, jbyteArray, jlong, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutboundHTLCDetails_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutboundHTLCDetails_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_get_fee_base_msat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1get_1fee_1base_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_set_fee_base_msat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1set_1fee_1base_1msat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_get_fee_proportional_millionths
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1get_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_set_fee_proportional_millionths
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1set_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_new
 * Signature: (IIS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1new
  (JNIEnv *, jclass, jint, jint, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_get_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1get_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_set_node_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1set_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_get_unspendable_punishment_reserve
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1get_1unspendable_1punishment_1reserve
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_set_unspendable_punishment_reserve
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1set_1unspendable_1punishment_1reserve
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_get_forwarding_info
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1get_1forwarding_1info
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_set_forwarding_info
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1set_1forwarding_1info
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_get_outbound_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1get_1outbound_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_set_outbound_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1set_1outbound_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_get_outbound_htlc_maximum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1get_1outbound_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_set_outbound_htlc_maximum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1set_1outbound_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_new
 * Signature: ([BJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_counterparty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1counterparty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_counterparty
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1counterparty
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_funding_txo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1funding_1txo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_funding_txo
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1funding_1txo
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_channel_type
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1channel_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_channel_type
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1channel_1type
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_outbound_scid_alias
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1outbound_1scid_1alias
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_outbound_scid_alias
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1outbound_1scid_1alias
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_inbound_scid_alias
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1inbound_1scid_1alias
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_inbound_scid_alias
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1inbound_1scid_1alias
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_channel_value_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_channel_value_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_unspendable_punishment_reserve
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1unspendable_1punishment_1reserve
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_unspendable_punishment_reserve
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1unspendable_1punishment_1reserve
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_user_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1user_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_user_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1user_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_feerate_sat_per_1000_weight
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1feerate_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_feerate_sat_per_1000_weight
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1feerate_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_outbound_capacity_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1outbound_1capacity_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_outbound_capacity_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1outbound_1capacity_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_next_outbound_htlc_limit_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1next_1outbound_1htlc_1limit_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_next_outbound_htlc_limit_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1next_1outbound_1htlc_1limit_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_next_outbound_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1next_1outbound_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_next_outbound_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1next_1outbound_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_inbound_capacity_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1inbound_1capacity_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_inbound_capacity_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1inbound_1capacity_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_confirmations_required
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1confirmations_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_confirmations_required
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1confirmations_1required
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_confirmations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1confirmations
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_confirmations
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1confirmations
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_force_close_spend_delay
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1force_1close_1spend_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_force_close_spend_delay
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1force_1close_1spend_1delay
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_is_outbound
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1is_1outbound
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_is_outbound
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1is_1outbound
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_is_channel_ready
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1is_1channel_1ready
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_is_channel_ready
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1is_1channel_1ready
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_channel_shutdown_state
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1channel_1shutdown_1state
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_channel_shutdown_state
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1channel_1shutdown_1state
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_is_usable
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1is_1usable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_is_usable
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1is_1usable
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_is_announced
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1is_1announced
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_is_announced
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1is_1announced
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_inbound_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1inbound_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_inbound_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1inbound_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_inbound_htlc_maximum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1inbound_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_inbound_htlc_maximum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1inbound_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_config
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1config
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_config
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1config
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_pending_inbound_htlcs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1pending_1inbound_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_pending_inbound_htlcs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1pending_1inbound_1htlcs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_pending_outbound_htlcs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1pending_1outbound_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_pending_outbound_htlcs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1pending_1outbound_1htlcs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_new
 * Signature: (JJJJJJJJJ[BJJJJJJJJZZJZZJJJ[J[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jbyteArray, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jboolean, jboolean, jlong, jboolean, jboolean, jlong, jlong, jlong, jlongArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_inbound_payment_scid
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1inbound_1payment_1scid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_outbound_payment_scid
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1outbound_1payment_1scid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelShutdownState_clone
 * Signature: (J)Lorg/ldk/enums/ChannelShutdownState;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelShutdownState_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelShutdownState_not_shutting_down
 * Signature: ()Lorg/ldk/enums/ChannelShutdownState;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelShutdownState_1not_1shutting_1down
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelShutdownState_shutdown_initiated
 * Signature: ()Lorg/ldk/enums/ChannelShutdownState;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelShutdownState_1shutdown_1initiated
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelShutdownState_resolving_htlcs
 * Signature: ()Lorg/ldk/enums/ChannelShutdownState;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelShutdownState_1resolving_1htlcs
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelShutdownState_negotiating_closing_fee
 * Signature: ()Lorg/ldk/enums/ChannelShutdownState;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelShutdownState_1negotiating_1closing_1fee
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelShutdownState_shutdown_complete
 * Signature: ()Lorg/ldk/enums/ChannelShutdownState;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelShutdownState_1shutdown_1complete
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelShutdownState_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelShutdownState_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelShutdownState_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelShutdownState_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelShutdownState_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelShutdownState_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpandedKey_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ExpandedKey_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpandedKey_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpandedKey_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpandedKey_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpandedKey_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpandedKey_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpandedKey_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpandedKey_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ExpandedKey_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpandedKey_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpandedKey_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    create
 * Signature: (JJIJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_create
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    create_from_hash
 * Signature: (JJ[BIJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_create_1from_1hash
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jint, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DecodeError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_unknown_version
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1unknown_1version
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_unknown_required_feature
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1unknown_1required_1feature
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_invalid_value
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1invalid_1value
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_short_read
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1short_1read
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_bad_length_descriptor
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1bad_1length_1descriptor
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_io
 * Signature: (Lorg/ldk/enums/IOError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1io
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_unsupported_compression
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1unsupported_1compression
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_dangerous_value
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1dangerous_1value
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DecodeError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Init_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Init_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_get_networks
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1get_1networks
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_set_networks
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Init_1set_1networks
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_get_remote_network_address
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1get_1remote_1network_1address
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_set_remote_network_address
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Init_1set_1remote_1network_1address
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Init_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_get_data
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1get_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_set_data
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1set_1data
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_new
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1new
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WarningMessage_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WarningMessage_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WarningMessage_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_get_data
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_WarningMessage_1get_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_set_data
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WarningMessage_1set_1data
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_new
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WarningMessage_1new
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WarningMessage_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WarningMessage_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WarningMessage_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_WarningMessage_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Ping_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_get_ponglen
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_Ping_1get_1ponglen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_set_ponglen
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Ping_1set_1ponglen
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_get_byteslen
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_Ping_1get_1byteslen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_set_byteslen
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Ping_1set_1byteslen
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_new
 * Signature: (SS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Ping_1new
  (JNIEnv *, jclass, jshort, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Ping_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Ping_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Ping_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Ping_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Pong_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_get_byteslen
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_Pong_1get_1byteslen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_set_byteslen
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Pong_1set_1byteslen
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_new
 * Signature: (S)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Pong_1new
  (JNIEnv *, jclass, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Pong_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Pong_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Pong_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Pong_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_temporary_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_temporary_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_funding_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1funding_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_funding_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1funding_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_dust_limit_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1dust_1limit_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_dust_limit_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1dust_1limit_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_max_htlc_value_in_flight_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_max_htlc_value_in_flight_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_commitment_feerate_sat_per_1000_weight
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1commitment_1feerate_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_commitment_feerate_sat_per_1000_weight
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1commitment_1feerate_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_to_self_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1to_1self_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_to_self_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1to_1self_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_max_accepted_htlcs
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_max_accepted_htlcs
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_funding_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1funding_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_funding_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1funding_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_revocation_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1revocation_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_revocation_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1revocation_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_payment_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1payment_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_payment_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1payment_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_delayed_payment_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_delayed_payment_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_htlc_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1htlc_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_htlc_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1htlc_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_first_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1first_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_first_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1first_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_channel_flags
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1channel_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_channel_flags
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1channel_1flags
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_shutdown_scriptpubkey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1shutdown_1scriptpubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_shutdown_scriptpubkey
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1shutdown_1scriptpubkey
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_get_channel_type
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1get_1channel_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_set_channel_type
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1set_1channel_1type
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_new
 * Signature: ([BJJJJJISS[B[B[B[B[B[BBJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong, jlong, jlong, jint, jshort, jshort, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyte, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonOpenChannelFields_channel_parameters
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonOpenChannelFields_1channel_1parameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_get_dust_limit_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1get_1dust_1limit_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_set_dust_limit_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1set_1dust_1limit_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_get_max_htlc_value_in_flight_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1get_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_set_max_htlc_value_in_flight_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1set_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_get_commitment_feerate_sat_per_1000_weight
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1get_1commitment_1feerate_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_set_commitment_feerate_sat_per_1000_weight
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1set_1commitment_1feerate_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_get_to_self_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1get_1to_1self_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_set_to_self_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1set_1to_1self_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_get_max_accepted_htlcs
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1get_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_set_max_accepted_htlcs
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1set_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_new
 * Signature: (JJJISS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jshort, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelParameters_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelParameters_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_common_fields
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1common_1fields
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_common_fields
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1common_1fields
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_push_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1push_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_push_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1push_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_channel_reserve_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_channel_reserve_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OpenChannel_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_get_common_fields
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1get_1common_1fields
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_set_common_fields
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1set_1common_1fields
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_get_funding_feerate_sat_per_1000_weight
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1get_1funding_1feerate_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_set_funding_feerate_sat_per_1000_weight
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1set_1funding_1feerate_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_get_locktime
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1get_1locktime
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_set_locktime
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1set_1locktime
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_get_second_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1get_1second_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_set_second_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1set_1second_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_get_require_confirmed_inputs
 * Signature: (J)Lorg/ldk/enums/COption_NoneZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1get_1require_1confirmed_1inputs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_set_require_confirmed_inputs
 * Signature: (JLorg/ldk/enums/COption_NoneZ;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1set_1require_1confirmed_1inputs
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_new
 * Signature: (JII[BLorg/ldk/enums/COption_NoneZ;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1new
  (JNIEnv *, jclass, jlong, jint, jint, jbyteArray, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_temporary_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_temporary_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_dust_limit_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1dust_1limit_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_dust_limit_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1dust_1limit_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_max_htlc_value_in_flight_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_max_htlc_value_in_flight_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_minimum_depth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1minimum_1depth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_minimum_depth
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1minimum_1depth
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_to_self_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1to_1self_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_to_self_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1to_1self_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_max_accepted_htlcs
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_max_accepted_htlcs
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_funding_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1funding_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_funding_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1funding_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_revocation_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1revocation_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_revocation_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1revocation_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_payment_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1payment_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_payment_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1payment_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_delayed_payment_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_delayed_payment_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_htlc_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1htlc_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_htlc_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1htlc_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_first_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1first_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_first_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1first_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_shutdown_scriptpubkey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1shutdown_1scriptpubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_shutdown_scriptpubkey
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1shutdown_1scriptpubkey
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_get_channel_type
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1get_1channel_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_set_channel_type
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1set_1channel_1type
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_new
 * Signature: (JJJJISS[B[B[B[B[B[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jint, jshort, jshort, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommonAcceptChannelFields_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CommonAcceptChannelFields_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_common_fields
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1common_1fields
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_common_fields
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1common_1fields
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_channel_reserve_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_channel_reserve_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_get_common_fields
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1get_1common_1fields
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_set_common_fields
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1set_1common_1fields
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_get_funding_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1get_1funding_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_set_funding_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1set_1funding_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_get_second_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1get_1second_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_set_second_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1set_1second_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_get_require_confirmed_inputs
 * Signature: (J)Lorg/ldk/enums/COption_NoneZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1get_1require_1confirmed_1inputs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_set_require_confirmed_inputs
 * Signature: (JLorg/ldk/enums/COption_NoneZ;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1set_1require_1confirmed_1inputs
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_new
 * Signature: (JJ[BLorg/ldk/enums/COption_NoneZ;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1new
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingCreated_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_get_temporary_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingCreated_1get_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_set_temporary_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingCreated_1set_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_get_funding_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingCreated_1get_1funding_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_set_funding_txid
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingCreated_1set_1funding_1txid
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_get_funding_output_index
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_FundingCreated_1get_1funding_1output_1index
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_set_funding_output_index
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingCreated_1set_1funding_1output_1index
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingCreated_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingCreated_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_new
 * Signature: (J[BS[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingCreated_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jshort, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingCreated_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingCreated_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingCreated_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_FundingCreated_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingSigned_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingSigned_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingSigned_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingSigned_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingSigned_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_new
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingSigned_1new
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingSigned_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingSigned_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingSigned_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_FundingSigned_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReady_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReady_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReady_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_get_next_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelReady_1get_1next_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_set_next_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReady_1set_1next_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_get_short_channel_id_alias
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReady_1get_1short_1channel_1id_1alias
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_set_short_channel_id_alias
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReady_1set_1short_1channel_1id_1alias
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_new
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReady_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReady_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReady_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReady_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelReady_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Stfu_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Stfu_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Stfu_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Stfu_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Stfu_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Stfu_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Stfu_get_initiator
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_Stfu_1get_1initiator
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Stfu_set_initiator
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Stfu_1set_1initiator
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Stfu_new
 * Signature: (JB)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Stfu_1new
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Stfu_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Stfu_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Stfu_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Stfu_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Stfu_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Stfu_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceInit_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceInit_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceInit_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_get_funding_contribution_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceInit_1get_1funding_1contribution_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_set_funding_contribution_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceInit_1set_1funding_1contribution_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_get_funding_feerate_perkw
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_SpliceInit_1get_1funding_1feerate_1perkw
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_set_funding_feerate_perkw
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceInit_1set_1funding_1feerate_1perkw
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_get_locktime
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_SpliceInit_1get_1locktime
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_set_locktime
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceInit_1set_1locktime
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_get_funding_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SpliceInit_1get_1funding_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_set_funding_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceInit_1set_1funding_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_get_require_confirmed_inputs
 * Signature: (J)Lorg/ldk/enums/COption_NoneZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SpliceInit_1get_1require_1confirmed_1inputs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_set_require_confirmed_inputs
 * Signature: (JLorg/ldk/enums/COption_NoneZ;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceInit_1set_1require_1confirmed_1inputs
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_new
 * Signature: (JJII[BLorg/ldk/enums/COption_NoneZ;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceInit_1new
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jbyteArray, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceInit_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceInit_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SpliceInit_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceAck_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceAck_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceAck_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_get_funding_contribution_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceAck_1get_1funding_1contribution_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_set_funding_contribution_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceAck_1set_1funding_1contribution_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_get_funding_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SpliceAck_1get_1funding_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_set_funding_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceAck_1set_1funding_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_get_require_confirmed_inputs
 * Signature: (J)Lorg/ldk/enums/COption_NoneZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SpliceAck_1get_1require_1confirmed_1inputs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_set_require_confirmed_inputs
 * Signature: (JLorg/ldk/enums/COption_NoneZ;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceAck_1set_1require_1confirmed_1inputs
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_new
 * Signature: (JJ[BLorg/ldk/enums/COption_NoneZ;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceAck_1new
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceAck_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceAck_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SpliceAck_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceLocked_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceLocked_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceLocked_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceLocked_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceLocked_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceLocked_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceLocked_get_splice_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SpliceLocked_1get_1splice_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceLocked_set_splice_txid
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpliceLocked_1set_1splice_1txid
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceLocked_new
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceLocked_1new
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceLocked_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceLocked_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceLocked_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceLocked_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceLocked_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SpliceLocked_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddInput_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddInput_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddInput_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_get_serial_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddInput_1get_1serial_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_set_serial_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddInput_1set_1serial_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_get_prevtx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddInput_1get_1prevtx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_set_prevtx
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddInput_1set_1prevtx
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_get_prevtx_out
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_TxAddInput_1get_1prevtx_1out
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_set_prevtx_out
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddInput_1set_1prevtx_1out
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_get_sequence
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_TxAddInput_1get_1sequence
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_set_sequence
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddInput_1set_1sequence
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_get_shared_input_txid
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddInput_1get_1shared_1input_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_set_shared_input_txid
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddInput_1set_1shared_1input_1txid
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_new
 * Signature: (JJJIIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddInput_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddInput_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddInput_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddInput_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TxAddInput_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_get_serial_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1get_1serial_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_set_serial_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1set_1serial_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_get_sats
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1get_1sats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_set_sats
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1set_1sats
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_get_script
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1get_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_set_script
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1set_1script
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_new
 * Signature: (JJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_get_serial_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1get_1serial_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_set_serial_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1set_1serial_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_get_serial_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1get_1serial_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_set_serial_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1set_1serial_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxComplete_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxComplete_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxComplete_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxComplete_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxComplete_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxComplete_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxComplete_new
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxComplete_1new
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxComplete_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxComplete_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxComplete_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxComplete_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxComplete_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxComplete_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxComplete_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TxComplete_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxSignatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxSignatures_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxSignatures_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_get_tx_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxSignatures_1get_1tx_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_set_tx_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxSignatures_1set_1tx_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_get_witnesses
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_TxSignatures_1get_1witnesses
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_set_witnesses
 * Signature: (J[[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxSignatures_1set_1witnesses
  (JNIEnv *, jclass, jlong, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_get_shared_input_signature
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxSignatures_1get_1shared_1input_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_set_shared_input_signature
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxSignatures_1set_1shared_1input_1signature
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_new
 * Signature: (J[B[[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxSignatures_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jobjectArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxSignatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxSignatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxSignatures_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TxSignatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_get_locktime
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1get_1locktime
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_set_locktime
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1set_1locktime
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_get_feerate_sat_per_1000_weight
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1get_1feerate_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_set_feerate_sat_per_1000_weight
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1set_1feerate_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_get_funding_output_contribution
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1get_1funding_1output_1contribution
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_set_funding_output_contribution
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1set_1funding_1output_1contribution
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_new
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1new
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_get_funding_output_contribution
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1get_1funding_1output_1contribution
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_set_funding_output_contribution
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1set_1funding_1output_1contribution
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAbort_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAbort_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAbort_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_get_data
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxAbort_1get_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_set_data
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxAbort_1set_1data
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_new
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAbort_1new
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAbort_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAbort_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAbort_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TxAbort_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Shutdown_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Shutdown_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Shutdown_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_get_scriptpubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Shutdown_1get_1scriptpubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_set_scriptpubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Shutdown_1set_1scriptpubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_new
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Shutdown_1new
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Shutdown_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Shutdown_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Shutdown_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Shutdown_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_get_min_fee_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1get_1min_1fee_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_set_min_fee_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1set_1min_1fee_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_get_max_fee_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1get_1max_1fee_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_set_max_fee_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1set_1max_1fee_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_get_fee_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1get_1fee_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_set_fee_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1set_1fee_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_get_fee_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1get_1fee_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_set_fee_range
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1set_1fee_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_new
 * Signature: (JJ[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1new
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_htlc_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1htlc_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_htlc_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1htlc_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_amount_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1amount_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_amount_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1amount_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_payment_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_payment_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1payment_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_cltv_expiry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1cltv_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_cltv_expiry
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1cltv_1expiry
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_skimmed_fee_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1skimmed_1fee_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_skimmed_fee_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1skimmed_1fee_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_onion_routing_packet
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1onion_1routing_1packet
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_onion_routing_packet
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1onion_1routing_1packet
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_blinding_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1blinding_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_blinding_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1blinding_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_new
 * Signature: (JJJ[BIJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jbyteArray, jint, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessage_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_get_blinding_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OnionMessage_1get_1blinding_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_set_blinding_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessage_1set_1blinding_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_get_onion_routing_packet
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessage_1get_1onion_1routing_1packet
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_set_onion_routing_packet
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessage_1set_1onion_1routing_1packet
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessage_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessage_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessage_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessage_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OnionMessage_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_get_htlc_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1get_1htlc_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_set_htlc_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1set_1htlc_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_get_payment_preimage
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1get_1payment_1preimage
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_set_payment_preimage
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1set_1payment_1preimage
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_new
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1new
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_get_htlc_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1get_1htlc_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_set_htlc_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1set_1htlc_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_get_htlc_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1get_1htlc_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_set_htlc_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1set_1htlc_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_get_failure_code
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1get_1failure_1code
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_set_failure_code
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1set_1failure_1code
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_get_batch_size
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1get_1batch_1size
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_set_batch_size
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1set_1batch_1size
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_get_funding_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1get_1funding_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_set_funding_txid
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1set_1funding_1txid
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_new
 * Signature: (S[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1new
  (JNIEnv *, jclass, jshort, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_get_htlc_signatures
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1get_1htlc_1signatures
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_set_htlc_signatures
 * Signature: (J[[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1set_1htlc_1signatures
  (JNIEnv *, jclass, jlong, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_get_batch
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1get_1batch
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_set_batch
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1set_1batch
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_new
 * Signature: (J[B[[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jobjectArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_get_per_commitment_secret
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1get_1per_1commitment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_set_per_commitment_secret
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1set_1per_1commitment_1secret
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_get_next_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1get_1next_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_set_next_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1set_1next_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_new
 * Signature: (J[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFee_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFee_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFee_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_get_feerate_per_kw
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UpdateFee_1get_1feerate_1per_1kw
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_set_feerate_per_kw
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFee_1set_1feerate_1per_1kw
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_new
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFee_1new
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFee_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFee_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFee_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UpdateFee_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_get_next_local_commitment_number
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1get_1next_1local_1commitment_1number
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_set_next_local_commitment_number
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1set_1next_1local_1commitment_1number
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_get_next_remote_commitment_number
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1get_1next_1remote_1commitment_1number
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_set_next_remote_commitment_number
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1set_1next_1remote_1commitment_1number
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_get_your_last_per_commitment_secret
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1get_1your_1last_1per_1commitment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_set_your_last_per_commitment_secret
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1set_1your_1last_1per_1commitment_1secret
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_get_my_current_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1get_1my_1current_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_set_my_current_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1set_1my_1current_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_get_next_funding_txid
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1get_1next_1funding_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_set_next_funding_txid
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1set_1next_1funding_1txid
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_new
 * Signature: (JJJ[B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_get_node_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1get_1node_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_set_node_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1set_1node_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_get_bitcoin_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1get_1bitcoin_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_set_bitcoin_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1set_1bitcoin_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_new
 * Signature: (JJ[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1new
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SocketAddress_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketAddress_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketAddress_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_tcp_ip_v4
 * Signature: ([BS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketAddress_1tcp_1ip_1v4
  (JNIEnv *, jclass, jbyteArray, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_tcp_ip_v6
 * Signature: ([BS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketAddress_1tcp_1ip_1v6
  (JNIEnv *, jclass, jbyteArray, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_onion_v2
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketAddress_1onion_1v2
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_onion_v3
 * Signature: ([BSBS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketAddress_1onion_1v3
  (JNIEnv *, jclass, jbyteArray, jshort, jbyte, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_hostname
 * Signature: (JS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketAddress_1hostname
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketAddress_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SocketAddress_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SocketAddress_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketAddress_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddressParseError_clone
 * Signature: (J)Lorg/ldk/enums/SocketAddressParseError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SocketAddressParseError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddressParseError_socket_addr_parse
 * Signature: ()Lorg/ldk/enums/SocketAddressParseError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SocketAddressParseError_1socket_1addr_1parse
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddressParseError_invalid_input
 * Signature: ()Lorg/ldk/enums/SocketAddressParseError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SocketAddressParseError_1invalid_1input
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddressParseError_invalid_port
 * Signature: ()Lorg/ldk/enums/SocketAddressParseError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SocketAddressParseError_1invalid_1port
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddressParseError_invalid_onion_v3
 * Signature: ()Lorg/ldk/enums/SocketAddressParseError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SocketAddressParseError_1invalid_1onion_1v3
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddressParseError_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketAddressParseError_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddressParseError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SocketAddressParseError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddressParseError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_SocketAddressParseError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    parse_onion_address
 * Signature: (Ljava/lang/String;S)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_parse_1onion_1address
  (JNIEnv *, jclass, jstring, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_SocketAddress_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketAddress_from_str
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketAddress_1from_1str
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedGossipMessage_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedGossipMessage_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedGossipMessage_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedGossipMessage_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedGossipMessage_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedGossipMessage_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedGossipMessage_channel_announcement
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedGossipMessage_1channel_1announcement
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedGossipMessage_channel_update
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedGossipMessage_1channel_1update
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedGossipMessage_node_announcement
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedGossipMessage_1node_1announcement
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedGossipMessage_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedGossipMessage_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_timestamp
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_timestamp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1timestamp
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_node_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_node_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1node_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_rgb
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1rgb
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_rgb
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1rgb
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_alias
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1alias
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_alias
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1alias
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_addresses
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1addresses
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_addresses
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1addresses
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_excess_address_data
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1excess_1address_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_excess_address_data
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1excess_1address_1data
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_excess_data
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1excess_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_excess_data
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1excess_1data
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_new
 * Signature: (JIJ[BJ[J[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1new
  (JNIEnv *, jclass, jlong, jint, jlong, jbyteArray, jlong, jlongArray, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_get_contents
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1get_1contents
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_set_contents
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1set_1contents
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_node_id_1
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1node_1id_11
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_node_id_1
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1node_1id_11
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_node_id_2
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1node_1id_12
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_node_id_2
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1node_1id_12
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_bitcoin_key_1
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1bitcoin_1key_11
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_bitcoin_key_1
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1bitcoin_1key_11
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_bitcoin_key_2
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1bitcoin_1key_12
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_bitcoin_key_2
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1bitcoin_1key_12
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_excess_data
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1excess_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_excess_data
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1excess_1data
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_new
 * Signature: (J[BJJJJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_get_node_signature_1
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1get_1node_1signature_11
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_set_node_signature_1
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1set_1node_1signature_11
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_get_node_signature_2
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1get_1node_1signature_12
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_set_node_signature_2
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1set_1node_1signature_12
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_get_bitcoin_signature_1
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1get_1bitcoin_1signature_11
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_set_bitcoin_signature_1
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1set_1bitcoin_1signature_11
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_get_bitcoin_signature_2
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1get_1bitcoin_1signature_12
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_set_bitcoin_signature_2
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1set_1bitcoin_1signature_12
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_get_contents
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1get_1contents
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_set_contents
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1set_1contents
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_new
 * Signature: ([B[B[B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_timestamp
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_timestamp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1timestamp
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_message_flags
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1message_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_message_flags
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1message_1flags
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_channel_flags
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1channel_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_channel_flags
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1channel_1flags
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_htlc_maximum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_htlc_maximum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_fee_base_msat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1fee_1base_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_fee_base_msat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1fee_1base_1msat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_fee_proportional_millionths
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_fee_proportional_millionths
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_excess_data
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1excess_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_excess_data
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1excess_1data
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_new
 * Signature: ([BJIBBSJJII[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jint, jbyte, jbyte, jshort, jlong, jlong, jint, jint, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_get_contents
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1get_1contents
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_set_contents
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1set_1contents
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_get_first_blocknum
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1get_1first_1blocknum
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_set_first_blocknum
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1set_1first_1blocknum
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_get_number_of_blocks
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1get_1number_1of_1blocks
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_set_number_of_blocks
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1set_1number_1of_1blocks
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_new
 * Signature: ([BII)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1new
  (JNIEnv *, jclass, jbyteArray, jint, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_get_first_blocknum
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1get_1first_1blocknum
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_set_first_blocknum
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1set_1first_1blocknum
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_get_number_of_blocks
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1get_1number_1of_1blocks
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_set_number_of_blocks
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1set_1number_1of_1blocks
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_get_sync_complete
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1get_1sync_1complete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_set_sync_complete
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1set_1sync_1complete
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_get_short_channel_ids
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1get_1short_1channel_1ids
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_set_short_channel_ids
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1set_1short_1channel_1ids
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_new
 * Signature: ([BIIZ[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1new
  (JNIEnv *, jclass, jbyteArray, jint, jint, jboolean, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_get_short_channel_ids
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1get_1short_1channel_1ids
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_set_short_channel_ids
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1set_1short_1channel_1ids
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_new
 * Signature: ([B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1new
  (JNIEnv *, jclass, jbyteArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_get_full_information
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1get_1full_1information
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_set_full_information
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1set_1full_1information
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_new
 * Signature: ([BZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1new
  (JNIEnv *, jclass, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_get_first_timestamp
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1get_1first_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_set_first_timestamp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1set_1first_1timestamp
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_get_timestamp_range
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1get_1timestamp_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_set_timestamp_range
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1set_1timestamp_1range
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_new
 * Signature: ([BII)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1new
  (JNIEnv *, jclass, jbyteArray, jint, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErrorAction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_disconnect_peer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1disconnect_1peer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_disconnect_peer_with_warning
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1disconnect_1peer_1with_1warning
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_ignore_error
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1ignore_1error
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_ignore_and_log
 * Signature: (Lorg/ldk/enums/Level;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1ignore_1and_1log
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_ignore_duplicate_gossip
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1ignore_1duplicate_1gossip
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_send_error_message
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1send_1error_1message
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_send_warning_message
 * Signature: (JLorg/ldk/enums/Level;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1send_1warning_1message
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LightningError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_get_err
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_LightningError_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_set_err
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LightningError_1set_1err
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_get_action
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LightningError_1get_1action
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_set_action
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LightningError_1set_1action
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_new
 * Signature: (Ljava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LightningError_1new
  (JNIEnv *, jclass, jstring, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LightningError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LightningError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_update_add_htlcs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1update_1add_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_update_add_htlcs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1update_1add_1htlcs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_update_fulfill_htlcs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1update_1fulfill_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_update_fulfill_htlcs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1update_1fulfill_1htlcs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_update_fail_htlcs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1update_1fail_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_update_fail_htlcs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1update_1fail_1htlcs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_update_fail_malformed_htlcs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1update_1fail_1malformed_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_update_fail_malformed_htlcs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1update_1fail_1malformed_1htlcs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_update_fee
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1update_1fee
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_update_fee
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1update_1fee
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_commitment_signed
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1commitment_1signed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_commitment_signed
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1commitment_1signed
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_new
 * Signature: ([J[J[J[JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1new
  (JNIEnv *, jclass, jlongArray, jlongArray, jlongArray, jlongArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FinalOnionHopData_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FinalOnionHopData_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FinalOnionHopData_get_payment_secret
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FinalOnionHopData_1get_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FinalOnionHopData_set_payment_secret
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FinalOnionHopData_1set_1payment_1secret
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FinalOnionHopData_get_total_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FinalOnionHopData_1get_1total_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FinalOnionHopData_set_total_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FinalOnionHopData_1set_1total_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FinalOnionHopData_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FinalOnionHopData_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FinalOnionHopData_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FinalOnionHopData_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FinalOnionHopData_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FinalOnionHopData_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FinalOnionHopData_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_FinalOnionHopData_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionPacket_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_get_version
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_OnionPacket_1get_1version
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_set_version
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionPacket_1set_1version
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_get_public_key
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionPacket_1get_1public_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_set_public_key
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionPacket_1set_1public_1key
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_get_hmac
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OnionPacket_1get_1hmac
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_set_hmac
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionPacket_1set_1hmac
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionPacket_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionPacket_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionPacket_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OnionPacket_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_get_version
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1get_1version
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_set_version
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1set_1version
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_get_public_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1get_1public_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_set_public_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1set_1public_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_get_hop_data
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1get_1hop_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_set_hop_data
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1set_1hop_1data
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_get_hmac
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1get_1hmac
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_set_hmac
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1set_1hmac
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_new
 * Signature: (B[B[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1new
  (JNIEnv *, jclass, jbyte, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrampolineOnionPacket_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrampolineOnionPacket_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_DecodeError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannelV2_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannelV2_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Stfu_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Stfu_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Stfu_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Stfu_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SpliceInit_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceInit_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceInit_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SpliceAck_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceAck_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceAck_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceLocked_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SpliceLocked_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpliceLocked_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpliceLocked_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxAddInput_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddInput_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddInput_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAddOutput_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAddOutput_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveInput_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveInput_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxRemoveOutput_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxRemoveOutput_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxComplete_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxComplete_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxComplete_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxComplete_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxSignatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxSignatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxSignatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxInitRbf_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxInitRbf_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAckRbf_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAckRbf_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxAbort_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxAbort_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxAbort_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSignedBatch_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSignedBatch_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingCreated_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingCreated_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingSigned_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingSigned_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelReady_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReady_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReady_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Init_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannel_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannelV2_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannelV2_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Shutdown_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Shutdown_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFee_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFee_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OnionPacket_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionPacket_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionPacket_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessage_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessage_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OnionMessage_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FinalOnionHopData_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FinalOnionHopData_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FinalOnionHopData_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FinalOnionHopData_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Ping_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Ping_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Pong_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Pong_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_WarningMessage_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WarningMessage_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WarningMessage_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_end_blocknum
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1end_1blocknum
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CustomMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_RoutingMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1RoutingMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_OnionMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1OnionMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_OffersMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1OffersMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_AsyncPaymentsMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1AsyncPaymentsMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_DNSResolverMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1DNSResolverMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_CustomOnionMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1CustomOnionMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_CustomMessageReader
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1CustomMessageReader
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_CustomMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1CustomMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroringMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErroringMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroringMessageHandler_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErroringMessageHandler_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroringMessageHandler_as_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErroringMessageHandler_1as_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroringMessageHandler_as_ChannelMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErroringMessageHandler_1as_1ChannelMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_get_chan_handler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageHandler_1get_1chan_1handler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_set_chan_handler
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageHandler_1set_1chan_1handler
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_get_route_handler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageHandler_1get_1route_1handler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_set_route_handler
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageHandler_1set_1route_1handler
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_get_onion_message_handler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageHandler_1get_1onion_1message_1handler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_set_onion_message_handler
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageHandler_1set_1onion_1message_1handler
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_get_custom_message_handler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageHandler_1get_1custom_1message_1handler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_set_custom_message_handler
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageHandler_1set_1custom_1message_1handler
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_new
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageHandler_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerDetails_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerDetails_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerDetails_get_counterparty_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PeerDetails_1get_1counterparty_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerDetails_set_counterparty_node_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerDetails_1set_1counterparty_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerDetails_get_socket_address
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerDetails_1get_1socket_1address
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerDetails_set_socket_address
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerDetails_1set_1socket_1address
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerDetails_get_init_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerDetails_1get_1init_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerDetails_set_init_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerDetails_1set_1init_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerDetails_get_is_inbound_connection
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PeerDetails_1get_1is_1inbound_1connection
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerDetails_set_is_inbound_connection
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerDetails_1set_1is_1inbound_1connection
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerDetails_new
 * Signature: ([BJJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerDetails_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerHandleError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerHandleError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerHandleError_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerHandleError_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerHandleError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerHandleError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerHandleError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerHandleError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerHandleError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_PeerHandleError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_new
 * Signature: (JI[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerManager_1new
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_list_peers
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_PeerManager_1list_1peers
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_peer_by_node_id
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerManager_1peer_1by_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_new_outbound_connection
 * Signature: (J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerManager_1new_1outbound_1connection
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_new_inbound_connection
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerManager_1new_1inbound_1connection
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_write_buffer_space_avail
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerManager_1write_1buffer_1space_1avail
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_read_event
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerManager_1read_1event
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_process_events
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1process_1events
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_socket_disconnected
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1socket_1disconnected
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_disconnect_by_node_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1disconnect_1by_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_disconnect_all_peers
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1disconnect_1all_1peers
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_timer_tick_occurred
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1timer_1tick_1occurred
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_broadcast_node_announcement
 * Signature: (J[B[B[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1broadcast_1node_1announcement
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    htlc_success_tx_weight
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_htlc_1success_1tx_1weight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    htlc_timeout_tx_weight
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_htlc_1timeout_1tx_1weight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCClaim_clone
 * Signature: (J)Lorg/ldk/enums/HTLCClaim;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_HTLCClaim_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCClaim_offered_timeout
 * Signature: ()Lorg/ldk/enums/HTLCClaim;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_HTLCClaim_1offered_1timeout
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCClaim_offered_preimage
 * Signature: ()Lorg/ldk/enums/HTLCClaim;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_HTLCClaim_1offered_1preimage
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCClaim_accepted_timeout
 * Signature: ()Lorg/ldk/enums/HTLCClaim;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_HTLCClaim_1accepted_1timeout
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCClaim_accepted_preimage
 * Signature: ()Lorg/ldk/enums/HTLCClaim;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_HTLCClaim_1accepted_1preimage
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCClaim_revocation
 * Signature: ()Lorg/ldk/enums/HTLCClaim;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_HTLCClaim_1revocation
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCClaim_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_HTLCClaim_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCClaim_from_witness
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCClaim_1from_1witness
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    build_commitment_secret
 * Signature: ([BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_build_1commitment_1secret
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    build_closing_transaction
 * Signature: (JJ[B[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_build_1closing_1transaction
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyCommitmentSecrets_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyCommitmentSecrets_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyCommitmentSecrets_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyCommitmentSecrets_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyCommitmentSecrets_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyCommitmentSecrets_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyCommitmentSecrets_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyCommitmentSecrets_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyCommitmentSecrets_get_min_seen_secret
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyCommitmentSecrets_1get_1min_1seen_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyCommitmentSecrets_provide_secret
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyCommitmentSecrets_1provide_1secret
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyCommitmentSecrets_get_secret
 * Signature: (JJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CounterpartyCommitmentSecrets_1get_1secret
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyCommitmentSecrets_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CounterpartyCommitmentSecrets_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyCommitmentSecrets_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyCommitmentSecrets_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    derive_private_key
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_derive_1private_1key
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    derive_private_revocation_key
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_derive_1private_1revocation_1key
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_get_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1get_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_set_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1set_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_get_revocation_key
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1get_1revocation_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_set_revocation_key
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1set_1revocation_1key
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_get_broadcaster_htlc_key
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1get_1broadcaster_1htlc_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_set_broadcaster_htlc_key
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1set_1broadcaster_1htlc_1key
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_get_countersignatory_htlc_key
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1get_1countersignatory_1htlc_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_set_countersignatory_htlc_key
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1set_1countersignatory_1htlc_1key
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_get_broadcaster_delayed_payment_key
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1get_1broadcaster_1delayed_1payment_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_set_broadcaster_delayed_payment_key
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1set_1broadcaster_1delayed_1payment_1key
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_new
 * Signature: ([BJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_get_funding_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1get_1funding_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_set_funding_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1set_1funding_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_get_revocation_basepoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1get_1revocation_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_set_revocation_basepoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1set_1revocation_1basepoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_get_payment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1get_1payment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_set_payment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1set_1payment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_get_delayed_payment_basepoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1get_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_set_delayed_payment_basepoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1set_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_get_htlc_basepoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1get_1htlc_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_set_htlc_basepoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1set_1htlc_1basepoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_new
 * Signature: ([BJ[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_derive_new
 * Signature: ([BJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1derive_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_from_channel_static_keys
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1from_1channel_1static_1keys
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_revokeable_redeemscript
 * Signature: (JSJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_get_1revokeable_1redeemscript
  (JNIEnv *, jclass, jlong, jshort, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_counterparty_payment_script
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_get_1counterparty_1payment_1script
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_get_offered
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1get_1offered
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_set_offered
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1set_1offered
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_get_amount_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1get_1amount_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_set_amount_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1set_1amount_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_get_cltv_expiry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1get_1cltv_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_set_cltv_expiry
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1set_1cltv_1expiry
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_get_payment_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1get_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_set_payment_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1set_1payment_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_get_transaction_output_index
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1get_1transaction_1output_1index
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_set_transaction_output_index
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1set_1transaction_1output_1index
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_new
 * Signature: (ZJI[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1new
  (JNIEnv *, jclass, jboolean, jlong, jint, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_to_bitcoin_amount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1to_1bitcoin_1amount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_htlc_redeemscript
 * Signature: (JJJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_get_1htlc_1redeemscript
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    make_funding_redeemscript
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_make_1funding_1redeemscript
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    build_htlc_transaction
 * Signature: ([BISJJJJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_build_1htlc_1transaction
  (JNIEnv *, jclass, jbyteArray, jint, jshort, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    build_htlc_input_witness
 * Signature: ([B[BJ[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_build_1htlc_1input_1witness
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_to_countersignatory_with_anchors_redeemscript
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_get_1to_1countersignatory_1with_1anchors_1redeemscript
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_anchor_redeemscript
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_get_1anchor_1redeemscript
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    build_anchor_input_witness
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_build_1anchor_1input_1witness
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_holder_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1holder_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_holder_pubkeys
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1holder_1pubkeys
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_holder_selected_contest_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1holder_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_holder_selected_contest_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1holder_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_is_outbound_from_holder
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1is_1outbound_1from_1holder
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_is_outbound_from_holder
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1is_1outbound_1from_1holder
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_counterparty_parameters
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1counterparty_1parameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_counterparty_parameters
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1counterparty_1parameters
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_funding_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1funding_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_funding_outpoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1funding_1outpoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_channel_type_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1channel_1type_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_channel_type_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1channel_1type_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_new
 * Signature: (JSZJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1new
  (JNIEnv *, jclass, jlong, jshort, jboolean, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_get_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1get_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_set_pubkeys
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1set_1pubkeys
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_get_selected_contest_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1get_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_set_selected_contest_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1set_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_new
 * Signature: (JS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1new
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_is_populated
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1is_1populated
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_as_holder_broadcastable
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1as_1holder_1broadcastable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_as_counterparty_broadcastable
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1as_1counterparty_1broadcastable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_broadcaster_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1broadcaster_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_countersignatory_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1countersignatory_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_contest_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1contest_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_is_outbound
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1is_1outbound
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_funding_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1funding_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_channel_type_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1channel_1type_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_get_counterparty_sig
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1get_1counterparty_1sig
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_set_counterparty_sig
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1set_1counterparty_1sig
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_get_counterparty_htlc_sigs
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1get_1counterparty_1htlc_1sigs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_set_counterparty_htlc_sigs
 * Signature: (J[[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1set_1counterparty_1htlc_1sigs
  (JNIEnv *, jclass, jlong, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_new
 * Signature: (J[B[[B[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jobjectArray, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_get_transaction
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1get_1transaction
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_set_transaction
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1set_1transaction
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_get_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1get_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_set_txid
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1set_1txid
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_new
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_get_sighash_all
 * Signature: (J[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1get_1sighash_1all
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_sign_counterparty_commitment
 * Signature: (J[B[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1sign_1counterparty_1commitment
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_sign_holder_commitment
 * Signature: (J[B[BJJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1sign_1holder_1commitment
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_new
 * Signature: (JJ[B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1new
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_trust
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1trust
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_verify
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1verify
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_to_holder_value_sat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1to_1holder_1value_1sat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_to_counterparty_value_sat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1to_1counterparty_1value_1sat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_to_holder_script
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1to_1holder_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_to_counterparty_script
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1to_1counterparty_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedClosingTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrustedClosingTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedClosingTransaction_built_transaction
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrustedClosingTransaction_1built_1transaction
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedClosingTransaction_get_sighash_all
 * Signature: (J[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrustedClosingTransaction_1get_1sighash_1all
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedClosingTransaction_sign
 * Signature: (J[B[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrustedClosingTransaction_1sign
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_commitment_number
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1commitment_1number
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_to_broadcaster_value_sat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1to_1broadcaster_1value_1sat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_to_countersignatory_value_sat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1to_1countersignatory_1value_1sat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_feerate_per_kw
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1feerate_1per_1kw
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_trust
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1trust
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_verify
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1verify
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_built_transaction
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1built_1transaction
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_keys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1keys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_channel_type_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1channel_1type_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_get_htlc_sigs
 * Signature: (J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1get_1htlc_1sigs
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_revokeable_output_index
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1revokeable_1output_1index
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_build_to_local_justice_tx
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1build_1to_1local_1justice_1tx
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_commitment_transaction_number_obscure_factor
 * Signature: ([B[BZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_get_1commitment_1transaction_1number_1obscure_1factor
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_get_script
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1get_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_set_script
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1set_1script
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_new_p2wpkh
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1new_1p2wpkh
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_new_p2wsh
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1new_1p2wsh
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_new_witness_program
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1new_1witness_1program
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_into_inner
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1into_1inner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_as_legacy_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1as_1legacy_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_is_compatible
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1is_1compatible
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelId_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelId_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelId_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelId_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_v1_from_funding_txid
 * Signature: ([BS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1v1_1from_1funding_1txid
  (JNIEnv *, jclass, jbyteArray, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_v1_from_funding_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1v1_1from_1funding_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_temporary_from_entropy_source
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1temporary_1from_1entropy_1source
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_from_bytes
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1from_1bytes
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_new_zero
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1new_1zero
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_is_zero
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelId_1is_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_v2_from_revocation_basepoints
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1v2_1from_1revocation_1basepoints
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_temporary_v2_from_revocation_basepoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1temporary_1v2_1from_1revocation_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelId_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelId_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelId_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    create_phantom_invoice
 * Signature: (JJLjava/lang/String;I[JJJJLorg/ldk/enums/Currency;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_create_1phantom_1invoice
  (JNIEnv *, jclass, jlong, jlong, jstring, jint, jlongArray, jlong, jlong, jlong, jobject, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    create_phantom_invoice_with_description_hash
 * Signature: (JJIJ[JJJJLorg/ldk/enums/Currency;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_create_1phantom_1invoice_1with_1description_1hash
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jlongArray, jlong, jlong, jlong, jobject, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    create_invoice_from_channelmanager
 * Signature: (JJLjava/lang/String;IJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_create_1invoice_1from_1channelmanager
  (JNIEnv *, jclass, jlong, jlong, jstring, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    create_invoice_from_channelmanager_with_description_hash
 * Signature: (JJJIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_create_1invoice_1from_1channelmanager_1with_1description_1hash
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    create_invoice_from_channelmanager_with_description_hash_and_payment_hash
 * Signature: (JJJI[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_create_1invoice_1from_1channelmanager_1with_1description_1hash_1and_1payment_1hash
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    create_invoice_from_channelmanager_with_payment_hash
 * Signature: (JJLjava/lang/String;I[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_create_1invoice_1from_1channelmanager_1with_1payment_1hash
  (JNIEnv *, jclass, jlong, jlong, jstring, jint, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    payment_parameters_from_variable_amount_invoice
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_payment_1parameters_1from_1variable_1amount_1invoice
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    payment_parameters_from_invoice
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_payment_1parameters_1from_1invoice
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Retry_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Retry_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Retry_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Retry_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Retry_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Retry_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Retry_attempts
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Retry_1attempts
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Retry_timeout
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Retry_1timeout
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Retry_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Retry_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Retry_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Retry_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Retry_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Retry_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Retry_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Retry_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryableSendFailure_clone
 * Signature: (J)Lorg/ldk/enums/RetryableSendFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_RetryableSendFailure_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryableSendFailure_payment_expired
 * Signature: ()Lorg/ldk/enums/RetryableSendFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_RetryableSendFailure_1payment_1expired
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryableSendFailure_route_not_found
 * Signature: ()Lorg/ldk/enums/RetryableSendFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_RetryableSendFailure_1route_1not_1found
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryableSendFailure_duplicate_payment
 * Signature: ()Lorg/ldk/enums/RetryableSendFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_RetryableSendFailure_1duplicate_1payment
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryableSendFailure_onion_packet_size_exceeded
 * Signature: ()Lorg/ldk/enums/RetryableSendFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_RetryableSendFailure_1onion_1packet_1size_1exceeded
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryableSendFailure_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RetryableSendFailure_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12PaymentError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12PaymentError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12PaymentError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12PaymentError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12PaymentError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12PaymentError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12PaymentError_unexpected_invoice
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12PaymentError_1unexpected_1invoice
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12PaymentError_duplicate_invoice
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12PaymentError_1duplicate_1invoice
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12PaymentError_unknown_required_features
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12PaymentError_1unknown_1required_1features
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12PaymentError_sending_failed
 * Signature: (Lorg/ldk/enums/RetryableSendFailure;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12PaymentError_1sending_1failed
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12PaymentError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12PaymentError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbeSendFailure_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbeSendFailure_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbeSendFailure_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbeSendFailure_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbeSendFailure_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbeSendFailure_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbeSendFailure_route_not_found
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbeSendFailure_1route_1not_1found
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbeSendFailure_parameter_error
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbeSendFailure_1parameter_1error
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbeSendFailure_duplicate_probe
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbeSendFailure_1duplicate_1probe
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbeSendFailure_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ProbeSendFailure_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_get_payment_secret
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1get_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_set_payment_secret
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1set_1payment_1secret
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_get_payment_metadata
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1get_1payment_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_set_payment_metadata
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1set_1payment_1metadata
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_secret_only
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1secret_1only
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_spontaneous_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1spontaneous_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_with_custom_tlvs
 * Signature: (J[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1with_1custom_1tlvs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RecipientOnionFields_custom_tlvs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_RecipientOnionFields_1custom_1tlvs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageReader_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CustomMessageReader_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Type_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Type_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Type_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InitFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferId_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferId_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferId_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OfferId_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferId_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferId_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferId_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferId_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferId_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferId_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferId_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferId_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferId_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OfferId_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferId_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OfferId_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferId_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferId_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_metadata
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1metadata
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_chain
 * Signature: (JLorg/ldk/enums/Network;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1chain
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_amount_msats
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1amount_1msats
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_absolute_expiry
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1absolute_1expiry
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_description
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1description
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_issuer
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1issuer
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_path
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1path
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_supported_quantity
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1supported_1quantity
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithExplicitMetadataBuilder_build
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferWithExplicitMetadataBuilder_1build
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_deriving_signing_pubkey
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1deriving_1signing_1pubkey
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_chain
 * Signature: (JLorg/ldk/enums/Network;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1chain
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_amount_msats
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1amount_1msats
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_absolute_expiry
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1absolute_1expiry
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_description
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1description
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_issuer
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1issuer
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_path
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1path
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_supported_quantity
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1supported_1quantity
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferWithDerivedMetadataBuilder_build
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferWithDerivedMetadataBuilder_1build
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Offer_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_chains
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_Offer_1chains
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_metadata
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_amount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1amount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_description
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1description
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_offer_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1offer_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_absolute_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1absolute_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_issuer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1issuer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_paths
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Offer_1paths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_supported_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1supported_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_issuer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Offer_1issuer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_supports_chain
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Offer_1supports_1chain
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_is_expired
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Offer_1is_1expired
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_is_expired_no_std
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Offer_1is_1expired_1no_1std
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_is_valid_quantity
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Offer_1is_1valid_1quantity
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_expects_quantity
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Offer_1expects_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_request_invoice
 * Signature: (JJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1request_1invoice
  (JNIEnv *, jclass, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Offer_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Amount_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Amount_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Amount_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Amount_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Amount_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Amount_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Amount_bitcoin
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Amount_1bitcoin
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Amount_currency
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Amount_1currency
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Quantity_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Quantity_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Quantity_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Quantity_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Quantity_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Quantity_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Quantity_bounded
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Quantity_1bounded
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Quantity_unbounded
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Quantity_1unbounded
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Quantity_one
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Quantity_1one
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_from_str
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Offer_1from_1str
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Offer_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Offer_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithExplicitSigningPubkeyBuilder_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithExplicitSigningPubkeyBuilder_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithDerivedSigningPubkeyBuilder_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithDerivedSigningPubkeyBuilder_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithExplicitSigningPubkeyBuilder_build
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceWithExplicitSigningPubkeyBuilder_1build
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithExplicitSigningPubkeyBuilder_relative_expiry
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithExplicitSigningPubkeyBuilder_1relative_1expiry
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithExplicitSigningPubkeyBuilder_fallback_v0_p2wsh
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithExplicitSigningPubkeyBuilder_1fallback_1v0_1p2wsh
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithExplicitSigningPubkeyBuilder_fallback_v0_p2wpkh
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithExplicitSigningPubkeyBuilder_1fallback_1v0_1p2wpkh
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithExplicitSigningPubkeyBuilder_fallback_v1_p2tr_tweaked
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithExplicitSigningPubkeyBuilder_1fallback_1v1_1p2tr_1tweaked
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithExplicitSigningPubkeyBuilder_allow_mpp
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithExplicitSigningPubkeyBuilder_1allow_1mpp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithDerivedSigningPubkeyBuilder_build_and_sign
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceWithDerivedSigningPubkeyBuilder_1build_1and_1sign
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithDerivedSigningPubkeyBuilder_relative_expiry
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithDerivedSigningPubkeyBuilder_1relative_1expiry
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithDerivedSigningPubkeyBuilder_fallback_v0_p2wsh
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithDerivedSigningPubkeyBuilder_1fallback_1v0_1p2wsh
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithDerivedSigningPubkeyBuilder_fallback_v0_p2wpkh
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithDerivedSigningPubkeyBuilder_1fallback_1v0_1p2wpkh
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithDerivedSigningPubkeyBuilder_fallback_v1_p2tr_tweaked
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithDerivedSigningPubkeyBuilder_1fallback_1v1_1p2tr_1tweaked
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceWithDerivedSigningPubkeyBuilder_allow_mpp
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceWithDerivedSigningPubkeyBuilder_1allow_1mpp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignBolt12InvoiceFn_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SignBolt12InvoiceFn_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_tagged_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1tagged_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_payment_paths
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1payment_1paths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_created_at
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1created_1at
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_relative_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1relative_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_is_expired
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1is_1expired
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_fallbacks
 * Signature: (J)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1fallbacks
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_invoice_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1invoice_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_offer_chains
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1offer_1chains
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_chain
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1chain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_metadata
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_amount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1amount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_offer_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1offer_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_description
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1description
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_absolute_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1absolute_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_issuer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1issuer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_message_paths
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1message_1paths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_supported_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1supported_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_issuer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1issuer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_payer_metadata
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1payer_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_invoice_request_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1invoice_1request_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_payer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1payer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_payer_note
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1payer_1note
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_payment_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_amount_msats
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1amount_1msats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_payment_paths
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1payment_1paths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_created_at
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1created_1at
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_relative_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1relative_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_is_expired
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1is_1expired
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_fallbacks
 * Signature: (J)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1fallbacks
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_invoice_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1invoice_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_offer_chains
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1offer_1chains
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_chain
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1chain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_metadata
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_amount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1amount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_offer_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1offer_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_description
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1description
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_absolute_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1absolute_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_issuer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1issuer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_message_paths
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1message_1paths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_supported_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1supported_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_issuer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1issuer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_payer_metadata
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1payer_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_invoice_request_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1invoice_1request_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_payer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1payer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_payer_note
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1payer_1note
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_payment_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_amount_msats
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1amount_1msats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_signable_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1signable_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_verify_using_metadata
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1verify_1using_1metadata
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_verify_using_payer_data
 * Signature: (J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1verify_1using_1payer_1data
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedBolt12Invoice_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedBolt12Invoice_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12Invoice_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12Invoice_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_get_erroneous_field
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceError_1get_1erroneous_1field
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_set_erroneous_field
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceError_1set_1erroneous_1field
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_get_message
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceError_1get_1message
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_set_message
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceError_1set_1message
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceError_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroneousField_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErroneousField_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroneousField_get_tlv_fieldnum
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErroneousField_1get_1tlv_1fieldnum
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroneousField_set_tlv_fieldnum
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErroneousField_1set_1tlv_1fieldnum
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroneousField_get_suggested_value
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErroneousField_1get_1suggested_1value
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroneousField_set_suggested_value
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErroneousField_1set_1suggested_1value
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroneousField_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErroneousField_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroneousField_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErroneousField_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroneousField_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErroneousField_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_from_string
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceError_1from_1string
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_InvoiceError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvoiceError_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceError_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceError_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_build_and_sign
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_1build_1and_1sign
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_chain
 * Signature: (JLorg/ldk/enums/Network;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_1chain
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_amount_msats
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_1amount_1msats
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_quantity
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_1quantity
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_payer_note
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_1payer_1note
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_sourced_from_human_readable_name
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceRequestWithDerivedPayerSigningPubkeyBuilder_1sourced_1from_1human_1readable_1name
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignInvoiceRequestFn_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SignInvoiceRequestFn_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_tagged_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1tagged_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_get_offer_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1get_1offer_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_set_offer_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1set_1offer_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_chains
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1chains
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_metadata
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_amount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1amount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_description
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1description
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_offer_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1offer_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_absolute_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1absolute_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_issuer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1issuer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_paths
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1paths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_supported_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1supported_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_issuer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1issuer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_payer_metadata
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1payer_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_chain
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1chain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_amount_msats
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1amount_1msats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_has_amount_msats
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1has_1amount_1msats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_invoice_request_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1invoice_1request_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_payer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1payer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_payer_note
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1payer_1note
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_offer_from_hrn
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1offer_1from_1hrn
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_chains
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1chains
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_metadata
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_amount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1amount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_description
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1description
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_offer_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1offer_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_absolute_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1absolute_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_issuer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1issuer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_paths
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1paths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_supported_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1supported_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_issuer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1issuer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_payer_metadata
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1payer_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_chain
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1chain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_amount_msats
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1amount_1msats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_has_amount_msats
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1has_1amount_1msats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_invoice_request_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1invoice_1request_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_payer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1payer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_payer_note
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1payer_1note
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_offer_from_hrn
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1offer_1from_1hrn
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_respond_with
 * Signature: (J[J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1respond_1with
  (JNIEnv *, jclass, jlong, jlongArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_respond_with_no_std
 * Signature: (J[J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1respond_1with_1no_1std
  (JNIEnv *, jclass, jlong, jlongArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_verify_using_metadata
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1verify_1using_1metadata
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_verify_using_recipient_data
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1verify_1using_1recipient_1data
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_chains
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1chains
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_metadata
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_amount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1amount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_description
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1description
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_offer_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1offer_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_absolute_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1absolute_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_issuer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1issuer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_paths
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1paths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_supported_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1supported_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_issuer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1issuer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_payer_metadata
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1payer_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_chain
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1chain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_amount_msats
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1amount_1msats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_has_amount_msats
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1has_1amount_1msats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_invoice_request_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1invoice_1request_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_payer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1payer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_payer_note
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1payer_1note
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_offer_from_hrn
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1offer_1from_1hrn
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_respond_with
 * Signature: (J[J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1respond_1with
  (JNIEnv *, jclass, jlong, jlongArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_respond_with_no_std
 * Signature: (J[J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1respond_1with_1no_1std
  (JNIEnv *, jclass, jlong, jlongArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_respond_using_derived_keys
 * Signature: (J[J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1respond_1using_1derived_1keys
  (JNIEnv *, jclass, jlong, jlongArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    VerifiedInvoiceRequest_respond_using_derived_keys_no_std
 * Signature: (J[J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_VerifiedInvoiceRequest_1respond_1using_1derived_1keys_1no_1std
  (JNIEnv *, jclass, jlong, jlongArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedInvoiceRequest_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedInvoiceRequest_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequest_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequest_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_get_payer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1get_1payer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_set_payer_signing_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1set_1payer_1signing_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_get_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1get_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_set_quantity
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1set_1quantity
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_get_payer_note_truncated
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1get_1payer_1note_1truncated
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_set_payer_note_truncated
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1set_1payer_1note_1truncated
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_get_human_readable_name
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1get_1human_1readable_1name
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_set_human_readable_name
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1set_1human_1readable_1name
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_new
 * Signature: ([BJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFields_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFields_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TaggedHash_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TaggedHash_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TaggedHash_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TaggedHash_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TaggedHash_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TaggedHash_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TaggedHash_as_digest
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TaggedHash_1as_1digest
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TaggedHash_tag
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_TaggedHash_1tag
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TaggedHash_merkle_root
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TaggedHash_1merkle_1root
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SignError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignError_signing
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignError_1signing
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignError_verification
 * Signature: (Lorg/ldk/enums/Secp256k1Error;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignError_1verification
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Nonce_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Nonce_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Nonce_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Nonce_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Nonce_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Nonce_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Nonce_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Nonce_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Nonce_from_entropy_source
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Nonce_1from_1entropy_1source
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Nonce_as_slice
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Nonce_1as_1slice
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Nonce_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Nonce_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Nonce_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Nonce_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12ParseError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12ParseError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12ParseError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12ParseError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12ParseError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12ParseError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_clone
 * Signature: (J)Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_already_expired
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1already_1expired
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unsupported_chain
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unsupported_1chain
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unexpected_chain
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unexpected_1chain
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_missing_amount
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1missing_1amount
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_invalid_amount
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1invalid_1amount
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_insufficient_amount
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1insufficient_1amount
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unexpected_amount
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unexpected_1amount
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unsupported_currency
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unsupported_1currency
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unknown_required_features
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unknown_1required_1features
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unexpected_features
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unexpected_1features
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_missing_description
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1missing_1description
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_missing_issuer_signing_pubkey
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1missing_1issuer_1signing_1pubkey
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unexpected_issuer_signing_pubkey
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unexpected_1issuer_1signing_1pubkey
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_missing_quantity
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1missing_1quantity
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_invalid_quantity
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1invalid_1quantity
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unexpected_quantity
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unexpected_1quantity
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_invalid_metadata
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1invalid_1metadata
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unexpected_metadata
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unexpected_1metadata
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_missing_payer_metadata
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1missing_1payer_1metadata
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_missing_payer_signing_pubkey
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1missing_1payer_1signing_1pubkey
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_duplicate_payment_id
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1duplicate_1payment_1id
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_missing_paths
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1missing_1paths
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unexpected_paths
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unexpected_1paths
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_invalid_pay_info
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1invalid_1pay_1info
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_missing_creation_time
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1missing_1creation_1time
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_missing_payment_hash
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1missing_1payment_1hash
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unexpected_payment_hash
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unexpected_1payment_1hash
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_missing_signing_pubkey
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1missing_1signing_1pubkey
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_invalid_signing_pubkey
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1invalid_1signing_1pubkey
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_missing_signature
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1missing_1signature
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12SemanticError_unexpected_human_readable_name
 * Signature: ()Lorg/ldk/enums/Bolt12SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt12SemanticError_1unexpected_1human_1readable_1name
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_new
 * Signature: ([B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_deriving_signing_pubkey
 * Signature: ([BJJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1deriving_1signing_1pubkey
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_description
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1description
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_absolute_expiry
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1absolute_1expiry
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_issuer
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1issuer
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_path
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1path
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_chain
 * Signature: (JLorg/ldk/enums/Network;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1chain
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_quantity
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1quantity
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_payer_note
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1payer_1note
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RefundMaybeWithDerivedMetadataBuilder_build
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RefundMaybeWithDerivedMetadataBuilder_1build
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Refund_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_description
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1description
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_absolute_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1absolute_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_is_expired
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Refund_1is_1expired
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_is_expired_no_std
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Refund_1is_1expired_1no_1std
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_issuer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1issuer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_paths
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Refund_1paths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_payer_metadata
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Refund_1payer_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_chain
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Refund_1chain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_amount_msats
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1amount_1msats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_quantity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1quantity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_payer_signing_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Refund_1payer_1signing_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_payer_note
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1payer_1note
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Refund_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_from_str
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Refund_1from_1str
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Refund_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Refund_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoLookupError_clone
 * Signature: (J)Lorg/ldk/enums/UtxoLookupError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_UtxoLookupError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoLookupError_unknown_chain
 * Signature: ()Lorg/ldk/enums/UtxoLookupError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_UtxoLookupError_1unknown_1chain
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoLookupError_unknown_tx
 * Signature: ()Lorg/ldk/enums/UtxoLookupError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_UtxoLookupError_1unknown_1tx
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoResult_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UtxoResult_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoResult_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UtxoResult_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoResult_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UtxoResult_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoResult_sync
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UtxoResult_1sync
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoResult_async
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UtxoResult_1async
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoLookup_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UtxoLookup_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoFuture_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UtxoFuture_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoFuture_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UtxoFuture_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoFuture_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UtxoFuture_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoFuture_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UtxoFuture_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoFuture_resolve_without_forwarding
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UtxoFuture_1resolve_1without_1forwarding
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UtxoFuture_resolve
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UtxoFuture_1resolve
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeId_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeId_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_from_pubkey
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1from_1pubkey
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_from_slice
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1from_1slice
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_as_slice
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeId_1as_1slice
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_as_array
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeId_1as_1array
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_as_pubkey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1as_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_NodeId_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeId_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReadOnlyNetworkGraph_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReadOnlyNetworkGraph_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_channel_failure
 * Signature: (JZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1channel_1failure
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_node_failure
 * Signature: ([BZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1node_1failure
  (JNIEnv *, jclass, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    P2PGossipSync_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_P2PGossipSync_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    P2PGossipSync_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_P2PGossipSync_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    P2PGossipSync_add_utxo_lookup
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_P2PGossipSync_1add_1utxo_1lookup
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_handle_network_update
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1handle_1network_1update
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    verify_node_announcement
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_verify_1node_1announcement
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    verify_channel_announcement
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_verify_1channel_1announcement
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    P2PGossipSync_as_RoutingMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_P2PGossipSync_1as_1RoutingMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    P2PGossipSync_as_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_P2PGossipSync_1as_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_get_htlc_maximum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1get_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_set_htlc_maximum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1set_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_get_fees
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1get_1fees
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_set_fees
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1set_1fees
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_get_last_update
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1get_1last_1update
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_set_last_update
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1set_1last_1update
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_get_enabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1get_1enabled
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_set_enabled
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1set_1enabled
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_get_last_update_message
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1get_1last_1update_1message
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_set_last_update_message
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1set_1last_1update_1message
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_new
 * Signature: (JJJISZJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jshort, jboolean, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdateInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdateInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_node_one
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1node_1one
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_node_one
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1node_1one
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_node_two
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1node_1two
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_node_two
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1node_1two
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_capacity_sats
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1capacity_1sats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_capacity_sats
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1capacity_1sats
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_one_to_two
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1one_1to_1two
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_one_to_two
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1one_1to_1two
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_two_to_one
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1two_1to_1one
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_two_to_one
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1two_1to_1one
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_announcement_message
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1announcement_1message
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_announcement_message
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1announcement_1message
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_directional_info
 * Signature: (JB)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1directional_1info
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DirectedChannelInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelInfo_channel
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelInfo_1channel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelInfo_effective_capacity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelInfo_1effective_1capacity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelInfo_source
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelInfo_1source
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelInfo_target
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelInfo_1target
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EffectiveCapacity_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_EffectiveCapacity_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EffectiveCapacity_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EffectiveCapacity_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EffectiveCapacity_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EffectiveCapacity_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EffectiveCapacity_exact_liquidity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EffectiveCapacity_1exact_1liquidity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EffectiveCapacity_advertised_max_htlc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EffectiveCapacity_1advertised_1max_1htlc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EffectiveCapacity_total
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EffectiveCapacity_1total
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EffectiveCapacity_infinite
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EffectiveCapacity_1infinite
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EffectiveCapacity_hint_max_htlc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EffectiveCapacity_1hint_1max_1htlc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EffectiveCapacity_unknown
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EffectiveCapacity_1unknown
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EffectiveCapacity_as_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EffectiveCapacity_1as_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RoutingFees_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingFees_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_get_last_update
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1get_1last_1update
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_set_last_update
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1set_1last_1update
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_get_rgb
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1get_1rgb
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_set_rgb
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1set_1rgb
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_get_alias
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1get_1alias
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_set_alias
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1set_1alias
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_get_addresses
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1get_1addresses
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_set_addresses
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1set_1addresses
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_new
 * Signature: (JI[BJ[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1new
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementDetails_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementDetails_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_relayed
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1relayed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_local
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1local
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_last_update
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1last_1update
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_rgb
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1rgb
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_alias
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1alias
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_addresses
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1addresses
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_announcement_message
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1announcement_1message
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAlias_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAlias_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAlias_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAlias_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAlias_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAlias_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAlias_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAlias_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAlias_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAlias_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAlias_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAlias_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAlias_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAlias_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAlias_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeAlias_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAlias_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_NodeAlias_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAlias_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAlias_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAlias_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAlias_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_get_channels
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_NodeInfo_1get_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_set_channels
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeInfo_1set_1channels
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_get_announcement_info
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeInfo_1get_1announcement_1info
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_set_announcement_info
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeInfo_1set_1announcement_1info
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeInfo_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_is_tor_only
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeInfo_1is_1tor_1only
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_NodeInfo_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_read
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1read
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_new
 * Signature: (Lorg/ldk/enums/Network;J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1new
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_read_only
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1read_1only
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_get_last_rapid_gossip_sync_timestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1get_1last_1rapid_1gossip_1sync_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_set_last_rapid_gossip_sync_timestamp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1set_1last_1rapid_1gossip_1sync_1timestamp
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_node_from_announcement
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1node_1from_1announcement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_node_from_unsigned_announcement
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1node_1from_1unsigned_1announcement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_channel_from_announcement
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1channel_1from_1announcement
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_channel_from_announcement_no_lookup
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1channel_1from_1announcement_1no_1lookup
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_channel_from_unsigned_announcement
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1channel_1from_1unsigned_1announcement
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_add_channel_from_partial_announcement
 * Signature: (JJJJ[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1add_1channel_1from_1partial_1announcement
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_channel_failed_permanent
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1channel_1failed_1permanent
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_node_failed_permanent
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1node_1failed_1permanent
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_remove_stale_channels_and_tracking
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1remove_1stale_1channels_1and_1tracking
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_remove_stale_channels_and_tracking_with_time
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1remove_1stale_1channels_1and_1tracking_1with_1time
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_channel
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1channel
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_channel_unsigned
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1channel_1unsigned
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_verify_channel_update
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1verify_1channel_1update
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReadOnlyNetworkGraph_channel
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReadOnlyNetworkGraph_1channel
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReadOnlyNetworkGraph_list_channels
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ReadOnlyNetworkGraph_1list_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReadOnlyNetworkGraph_node
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReadOnlyNetworkGraph_1node
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReadOnlyNetworkGraph_list_nodes
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ReadOnlyNetworkGraph_1list_1nodes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReadOnlyNetworkGraph_get_addresses
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReadOnlyNetworkGraph_1get_1addresses
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DefaultRouter_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DefaultRouter_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DefaultRouter_new
 * Signature: (JJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DefaultRouter_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DefaultRouter_as_Router
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DefaultRouter_1as_1Router
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Router_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Router_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScorerAccountingForInFlightHtlcs_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScorerAccountingForInFlightHtlcs_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScorerAccountingForInFlightHtlcs_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ScorerAccountingForInFlightHtlcs_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScorerAccountingForInFlightHtlcs_as_ScoreLookUp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ScorerAccountingForInFlightHtlcs_1as_1ScoreLookUp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InFlightHtlcs_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InFlightHtlcs_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InFlightHtlcs_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InFlightHtlcs_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InFlightHtlcs_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InFlightHtlcs_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InFlightHtlcs_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InFlightHtlcs_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InFlightHtlcs_process_path
 * Signature: (JJ[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InFlightHtlcs_1process_1path
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InFlightHtlcs_add_inflight_htlc
 * Signature: (JJJJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InFlightHtlcs_1add_1inflight_1htlc
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InFlightHtlcs_used_liquidity_msat
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InFlightHtlcs_1used_1liquidity_1msat
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InFlightHtlcs_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InFlightHtlcs_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InFlightHtlcs_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InFlightHtlcs_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_node_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1node_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_node_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1node_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_channel_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1channel_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_channel_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1channel_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_fee_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1fee_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_fee_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1fee_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_cltv_expiry_delta
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_cltv_expiry_delta
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_maybe_announced_channel
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1maybe_1announced_1channel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_maybe_announced_channel
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1maybe_1announced_1channel
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_new
 * Signature: ([BJJJJIZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong, jlong, jint, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RouteHop_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteHop_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedTail_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_get_hops
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_BlindedTail_1get_1hops
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_set_hops
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedTail_1set_1hops
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_get_blinding_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedTail_1get_1blinding_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_set_blinding_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedTail_1set_1blinding_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_get_excess_final_cltv_expiry_delta
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_BlindedTail_1get_1excess_1final_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_set_excess_final_cltv_expiry_delta
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedTail_1set_1excess_1final_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_get_final_value_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedTail_1get_1final_1value_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_set_final_value_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedTail_1set_1final_1value_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_new
 * Signature: ([J[BIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedTail_1new
  (JNIEnv *, jclass, jlongArray, jbyteArray, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedTail_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedTail_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedTail_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedTail_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedTail_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedTail_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedTail_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Path_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_get_hops
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Path_1get_1hops
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_set_hops
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Path_1set_1hops
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_get_blinded_tail
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Path_1get_1blinded_1tail
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_set_blinded_tail
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Path_1set_1blinded_1tail
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_new
 * Signature: ([JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Path_1new
  (JNIEnv *, jclass, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Path_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Path_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Path_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Path_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_fee_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Path_1fee_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_final_value_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Path_1final_1value_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Path_final_cltv_expiry_delta
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Path_1final_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Route_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_get_paths
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Route_1get_1paths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_set_paths
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Route_1set_1paths
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_get_route_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1get_1route_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_set_route_params
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Route_1set_1route_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_new
 * Signature: ([JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1new
  (JNIEnv *, jclass, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Route_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_get_total_fees
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1get_1total_1fees
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_get_total_amount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1get_1total_1amount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Route_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Route_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_get_payment_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1get_1payment_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_set_payment_params
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteParameters_1set_1payment_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_get_final_value_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1get_1final_1value_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_set_final_value_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteParameters_1set_1final_1value_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_get_max_total_routing_fee_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1get_1max_1total_1routing_1fee_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_set_max_total_routing_fee_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteParameters_1set_1max_1total_1routing_1fee_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RouteParameters_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_from_payment_params_and_value
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1from_1payment_1params_1and_1value
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_set_max_path_length
 * Signature: (JJZI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1set_1max_1path_1length
  (JNIEnv *, jclass, jlong, jlong, jboolean, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteParameters_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_get_payee
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1get_1payee
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_set_payee
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1set_1payee
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_get_expiry_time
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1get_1expiry_1time
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_set_expiry_time
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1set_1expiry_1time
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_get_max_total_cltv_expiry_delta
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1get_1max_1total_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_set_max_total_cltv_expiry_delta
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1set_1max_1total_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_get_max_path_count
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1get_1max_1path_1count
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_set_max_path_count
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1set_1max_1path_1count
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_get_max_path_length
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1get_1max_1path_1length
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_set_max_path_length
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1set_1max_1path_1length
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_get_max_channel_saturation_power_of_half
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1get_1max_1channel_1saturation_1power_1of_1half
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_set_max_channel_saturation_power_of_half
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1set_1max_1channel_1saturation_1power_1of_1half
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_get_previously_failed_channels
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1get_1previously_1failed_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_set_previously_failed_channels
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1set_1previously_1failed_1channels
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_get_previously_failed_blinded_path_idxs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1get_1previously_1failed_1blinded_1path_1idxs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_set_previously_failed_blinded_path_idxs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1set_1previously_1failed_1blinded_1path_1idxs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_new
 * Signature: (JJIBBB[J[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1new
  (JNIEnv *, jclass, jlong, jlong, jint, jbyte, jbyte, jbyte, jlongArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_read
 * Signature: ([BI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1read
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_from_node_id
 * Signature: ([BI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1from_1node_1id
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_for_keysend
 * Signature: ([BIZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1for_1keysend
  (JNIEnv *, jclass, jbyteArray, jint, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_from_bolt12_invoice
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1from_1bolt12_1invoice
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentParameters_blinded
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentParameters_1blinded
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Payee_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_blinded
 * Signature: ([JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1blinded
  (JNIEnv *, jclass, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_clear
 * Signature: ([B[JJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1clear
  (JNIEnv *, jclass, jbyteArray, jlongArray, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Payee_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteHint_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHint_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FirstHopCandidate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FirstHopCandidate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FirstHopCandidate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FirstHopCandidate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FirstHopCandidate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FirstHopCandidate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PublicHopCandidate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PublicHopCandidate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PublicHopCandidate_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PublicHopCandidate_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PublicHopCandidate_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PublicHopCandidate_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PublicHopCandidate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PublicHopCandidate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PublicHopCandidate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PublicHopCandidate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateHopCandidate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PrivateHopCandidate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateHopCandidate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateHopCandidate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateHopCandidate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateHopCandidate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPathCandidate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedPathCandidate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPathCandidate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPathCandidate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPathCandidate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPathCandidate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OneHopBlindedPathCandidate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OneHopBlindedPathCandidate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OneHopBlindedPathCandidate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OneHopBlindedPathCandidate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OneHopBlindedPathCandidate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OneHopBlindedPathCandidate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_first_hop
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1first_1hop
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_public_hop
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1public_1hop
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_private_hop
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1private_1hop
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_blinded
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1blinded
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_one_hop_blinded
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1one_1hop_1blinded
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_globally_unique_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1globally_1unique_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_cltv_expiry_delta
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_fees
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1fees
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_source
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1source
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CandidateRouteHop_target
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CandidateRouteHop_1target
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    find_route
 * Signature: ([BJJ[JJJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_find_1route
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlongArray, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    build_route_from_hops
 * Signature: ([B[[BJJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_build_1route_1from_1hops
  (JNIEnv *, jclass, jbyteArray, jobjectArray, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoreLookUp_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoreLookUp_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoreUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoreUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Score_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Score_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LockableScore_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LockableScore_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WriteableScore_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WriteableScore_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedLockableScore_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MultiThreadedLockableScore_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedLockableScore_as_LockableScore
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MultiThreadedLockableScore_1as_1LockableScore
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedLockableScore_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_MultiThreadedLockableScore_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedLockableScore_as_WriteableScore
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MultiThreadedLockableScore_1as_1WriteableScore
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedLockableScore_new
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MultiThreadedLockableScore_1new
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedScoreLockRead_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MultiThreadedScoreLockRead_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedScoreLockWrite_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MultiThreadedScoreLockWrite_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedScoreLockRead_as_ScoreLookUp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MultiThreadedScoreLockRead_1as_1ScoreLookUp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedScoreLockWrite_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_MultiThreadedScoreLockWrite_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedScoreLockWrite_as_ScoreUpdate
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MultiThreadedScoreLockWrite_1as_1ScoreUpdate
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUsage_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUsage_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUsage_get_amount_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUsage_1get_1amount_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUsage_set_amount_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUsage_1set_1amount_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUsage_get_inflight_htlc_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUsage_1get_1inflight_1htlc_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUsage_set_inflight_htlc_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUsage_1set_1inflight_1htlc_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUsage_get_effective_capacity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUsage_1get_1effective_1capacity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUsage_set_effective_capacity
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUsage_1set_1effective_1capacity
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUsage_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUsage_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUsage_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUsage_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUsage_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUsage_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FixedPenaltyScorer_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FixedPenaltyScorer_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FixedPenaltyScorer_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FixedPenaltyScorer_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FixedPenaltyScorer_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FixedPenaltyScorer_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FixedPenaltyScorer_with_penalty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FixedPenaltyScorer_1with_1penalty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FixedPenaltyScorer_as_ScoreLookUp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FixedPenaltyScorer_1as_1ScoreLookUp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FixedPenaltyScorer_as_ScoreUpdate
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FixedPenaltyScorer_1as_1ScoreUpdate
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FixedPenaltyScorer_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FixedPenaltyScorer_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FixedPenaltyScorer_read
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FixedPenaltyScorer_1read
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_get_base_penalty_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1get_1base_1penalty_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_set_base_penalty_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1set_1base_1penalty_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_get_base_penalty_amount_multiplier_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1get_1base_1penalty_1amount_1multiplier_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_set_base_penalty_amount_multiplier_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1set_1base_1penalty_1amount_1multiplier_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_get_liquidity_penalty_multiplier_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1get_1liquidity_1penalty_1multiplier_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_set_liquidity_penalty_multiplier_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1set_1liquidity_1penalty_1multiplier_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_get_liquidity_penalty_amount_multiplier_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1get_1liquidity_1penalty_1amount_1multiplier_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_set_liquidity_penalty_amount_multiplier_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1set_1liquidity_1penalty_1amount_1multiplier_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_get_historical_liquidity_penalty_multiplier_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1get_1historical_1liquidity_1penalty_1multiplier_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_set_historical_liquidity_penalty_multiplier_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1set_1historical_1liquidity_1penalty_1multiplier_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_get_historical_liquidity_penalty_amount_multiplier_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1get_1historical_1liquidity_1penalty_1amount_1multiplier_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_set_historical_liquidity_penalty_amount_multiplier_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1set_1historical_1liquidity_1penalty_1amount_1multiplier_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_get_anti_probing_penalty_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1get_1anti_1probing_1penalty_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_set_anti_probing_penalty_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1set_1anti_1probing_1penalty_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_get_considered_impossible_penalty_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1get_1considered_1impossible_1penalty_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_set_considered_impossible_penalty_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1set_1considered_1impossible_1penalty_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_get_linear_success_probability
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1get_1linear_1success_1probability
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_set_linear_success_probability
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1set_1linear_1success_1probability
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_add_banned
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1add_1banned
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_add_banned_from_list
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1add_1banned_1from_1list
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_remove_banned
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1remove_1banned
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_set_manual_penalty
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1set_1manual_1penalty
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_remove_manual_penalty
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1remove_1manual_1penalty
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringFeeParameters_clear_manual_penalties
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringFeeParameters_1clear_1manual_1penalties
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringDecayParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringDecayParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringDecayParameters_get_historical_no_updates_half_life
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringDecayParameters_1get_1historical_1no_1updates_1half_1life
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringDecayParameters_set_historical_no_updates_half_life
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringDecayParameters_1set_1historical_1no_1updates_1half_1life
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringDecayParameters_get_liquidity_offset_half_life
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringDecayParameters_1get_1liquidity_1offset_1half_1life
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringDecayParameters_set_liquidity_offset_half_life
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringDecayParameters_1set_1liquidity_1offset_1half_1life
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringDecayParameters_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringDecayParameters_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringDecayParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringDecayParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringDecayParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringDecayParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScoringDecayParameters_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScoringDecayParameters_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_debug_log_liquidity_stats
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1debug_1log_1liquidity_1stats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_estimated_channel_liquidity_range
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1estimated_1channel_1liquidity_1range
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_historical_estimated_channel_liquidity_probabilities
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1historical_1estimated_1channel_1liquidity_1probabilities
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_historical_estimated_payment_success_probability
 * Signature: (JJJJJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1historical_1estimated_1payment_1success_1probability
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_live_estimated_payment_success_probability
 * Signature: (JJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1live_1estimated_1payment_1success_1probability
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_as_ScoreLookUp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1as_1ScoreLookUp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_as_ScoreUpdate
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1as_1ScoreUpdate
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_as_Score
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1as_1Score
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ProbabilisticScorer_read
 * Signature: ([BJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ProbabilisticScorer_1read
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_outpoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1outpoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_to_self_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1to_1self_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_to_self_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1to_1self_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_output
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1output
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_output
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1output
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_revocation_pubkey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1revocation_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_revocation_pubkey
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1revocation_1pubkey
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_channel_keys_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1channel_1keys_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_channel_keys_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1channel_1keys_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_channel_value_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_channel_value_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_channel_transaction_parameters
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1channel_1transaction_1parameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_channel_transaction_parameters
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1channel_1transaction_1parameters
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_new
 * Signature: (J[BSJJ[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jshort, jlong, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_get_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1get_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_set_outpoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1set_1outpoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_get_output
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1get_1output
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_set_output
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1set_1output
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_get_channel_keys_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1get_1channel_1keys_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_set_channel_keys_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1set_1channel_1keys_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_get_channel_value_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1get_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_set_channel_value_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1set_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_get_channel_transaction_parameters
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1get_1channel_1transaction_1parameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_set_channel_transaction_parameters
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1set_1channel_1transaction_1parameters
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_new
 * Signature: (JJ[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1new
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_witness_script
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1witness_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_max_witness_length
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1max_1witness_1length
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_static_output
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1static_1output
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_delayed_payment_output
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1delayed_1payment_1output
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_static_payment_output
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1static_1payment_1output
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_create_spendable_outputs_psbt
 * Signature: ([J[J[BIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1create_1spendable_1outputs_1psbt
  (JNIEnv *, jclass, jlongArray, jlongArray, jbyteArray, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_get_value_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1get_1value_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_set_value_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1set_1value_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_get_keys_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1get_1keys_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_set_keys_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1set_1keys_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_get_transaction_parameters
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1get_1transaction_1parameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_set_transaction_parameters
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1set_1transaction_1parameters
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_new
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDerivationParameters_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDerivationParameters_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_get_channel_derivation_parameters
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1get_1channel_1derivation_1parameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_set_channel_derivation_parameters
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1set_1channel_1derivation_1parameters
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_get_commitment_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1get_1commitment_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_set_commitment_txid
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1set_1commitment_1txid
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_get_per_commitment_number
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1get_1per_1commitment_1number
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_set_per_commitment_number
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1set_1per_1commitment_1number
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_get_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1get_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_set_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1set_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_get_feerate_per_kw
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1get_1feerate_1per_1kw
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_set_feerate_per_kw
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1set_1feerate_1per_1kw
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_get_htlc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1get_1htlc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_set_htlc
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1set_1htlc
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_get_preimage
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1get_1preimage
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_set_preimage
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1set_1preimage
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_get_counterparty_sig
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1get_1counterparty_1sig
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_set_counterparty_sig
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1set_1counterparty_1sig
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_new
 * Signature: (J[BJ[BIJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jbyteArray, jint, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_previous_utxo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1previous_1utxo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_unsigned_tx_input
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1unsigned_1tx_1input
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_tx_output
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1tx_1output
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_witness_script
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1witness_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_tx_input_witness
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1tx_1input_1witness
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDescriptor_derive_channel_signer
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDescriptor_1derive_1channel_1signer
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelSigner_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelSigner_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Recipient_clone
 * Signature: (J)Lorg/ldk/enums/Recipient;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Recipient_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Recipient_node
 * Signature: ()Lorg/ldk/enums/Recipient;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Recipient_1node
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Recipient_phantom_node
 * Signature: ()Lorg/ldk/enums/Recipient;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Recipient_1phantom_1node
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EntropySource_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_EntropySource_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeSigner_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeSigner_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutputSpender_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutputSpender_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignerProvider_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SignerProvider_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChangeDestinationSource_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChangeDestinationSource_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_funding_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1funding_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_funding_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1funding_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_revocation_base_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1revocation_1base_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_revocation_base_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1revocation_1base_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_payment_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1payment_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_payment_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1payment_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_delayed_payment_base_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1delayed_1payment_1base_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_delayed_payment_base_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1delayed_1payment_1base_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_htlc_base_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1htlc_1base_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_htlc_base_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1htlc_1base_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_commitment_seed
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1commitment_1seed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_commitment_seed
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1commitment_1seed
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_new
 * Signature: ([B[B[B[B[B[BJ[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_counterparty_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1counterparty_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_counterparty_selected_contest_delay
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1counterparty_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_holder_selected_contest_delay
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1holder_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_is_outbound
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1is_1outbound
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_funding_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1funding_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_channel_parameters
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1channel_1parameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_channel_type_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1channel_1type_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_sign_counterparty_payment_input
 * Signature: (J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1sign_1counterparty_1payment_1input
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_sign_dynamic_p2wsh_input
 * Signature: (J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1sign_1dynamic_1p2wsh_1input
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_as_EntropySource
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1as_1EntropySource
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_as_ChannelSigner
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1as_1ChannelSigner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_as_EcdsaChannelSigner
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1as_1EcdsaChannelSigner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_read
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1read
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_KeysManager_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_new
 * Signature: ([BJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysManager_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_get_node_secret_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_KeysManager_1get_1node_1secret_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_derive_channel_keys
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysManager_1derive_1channel_1keys
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_sign_spendable_outputs_psbt
 * Signature: (J[J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysManager_1sign_1spendable_1outputs_1psbt
  (JNIEnv *, jclass, jlong, jlongArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_as_EntropySource
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysManager_1as_1EntropySource
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_as_NodeSigner
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysManager_1as_1NodeSigner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_as_OutputSpender
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysManager_1as_1OutputSpender
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_as_SignerProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysManager_1as_1SignerProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomKeysManager_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PhantomKeysManager_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomKeysManager_as_EntropySource
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PhantomKeysManager_1as_1EntropySource
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomKeysManager_as_NodeSigner
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PhantomKeysManager_1as_1NodeSigner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomKeysManager_as_OutputSpender
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PhantomKeysManager_1as_1OutputSpender
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomKeysManager_as_SignerProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PhantomKeysManager_1as_1SignerProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomKeysManager_new
 * Signature: ([BJI[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PhantomKeysManager_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jint, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomKeysManager_derive_channel_keys
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PhantomKeysManager_1derive_1channel_1keys
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomKeysManager_get_node_secret_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PhantomKeysManager_1get_1node_1secret_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PhantomKeysManager_get_phantom_node_secret_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PhantomKeysManager_1get_1phantom_1node_1secret_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RandomBytes_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RandomBytes_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RandomBytes_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RandomBytes_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RandomBytes_as_EntropySource
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RandomBytes_1as_1EntropySource
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EcdsaChannelSigner_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_EcdsaChannelSigner_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessage_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessage_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessage_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessage_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessage_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessage_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessage_held_htlc_available
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessage_1held_1htlc_1available
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessage_release_held_htlc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessage_1release_1held_1htlc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HeldHtlcAvailable_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HeldHtlcAvailable_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HeldHtlcAvailable_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HeldHtlcAvailable_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HeldHtlcAvailable_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HeldHtlcAvailable_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HeldHtlcAvailable_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HeldHtlcAvailable_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReleaseHeldHtlc_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReleaseHeldHtlc_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReleaseHeldHtlc_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReleaseHeldHtlc_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReleaseHeldHtlc_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReleaseHeldHtlc_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReleaseHeldHtlc_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReleaseHeldHtlc_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReleaseHeldHtlc_as_OnionMessageContents
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReleaseHeldHtlc_1as_1OnionMessageContents
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HeldHtlcAvailable_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HeldHtlcAvailable_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HeldHtlcAvailable_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HeldHtlcAvailable_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReleaseHeldHtlc_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ReleaseHeldHtlc_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReleaseHeldHtlc_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReleaseHeldHtlc_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessage_is_known_type
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessage_1is_1known_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessage_as_OnionMessageContents
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessage_1as_1OnionMessageContents
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessage_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessage_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsMessage_read
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsMessage_1read
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DNSResolverMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessage_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DNSResolverMessage_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessage_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverMessage_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessage_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverMessage_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessage_dnssecquery
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverMessage_1dnssecquery
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessage_dnssecproof
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverMessage_1dnssecproof
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessage_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverMessage_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessage_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DNSResolverMessage_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECQuery_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DNSSECQuery_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECQuery_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSSECQuery_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECQuery_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSSECQuery_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECQuery_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSSECQuery_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECQuery_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DNSSECQuery_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECProof_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DNSSECProof_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECProof_get_proof
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DNSSECProof_1get_1proof
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECProof_set_proof
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DNSSECProof_1set_1proof
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECProof_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSSECProof_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECProof_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSSECProof_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECProof_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSSECProof_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSSECProof_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DNSSECProof_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessage_is_known_type
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DNSResolverMessage_1is_1known_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessage_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DNSResolverMessage_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessage_read
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverMessage_1read
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverMessage_as_OnionMessageContents
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverMessage_1as_1OnionMessageContents
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HumanReadableName_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HumanReadableName_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HumanReadableName_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HumanReadableName_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HumanReadableName_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HumanReadableName_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HumanReadableName_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HumanReadableName_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HumanReadableName_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_HumanReadableName_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HumanReadableName_new
 * Signature: (Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HumanReadableName_1new
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HumanReadableName_from_encoded
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HumanReadableName_1from_1encoded
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HumanReadableName_user
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_HumanReadableName_1user
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HumanReadableName_domain
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_HumanReadableName_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HumanReadableName_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HumanReadableName_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HumanReadableName_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HumanReadableName_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OMNameResolver_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OMNameResolver_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OMNameResolver_new
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OMNameResolver_1new
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OMNameResolver_new_best_block
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OMNameResolver_1new_1best_1block
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OMNameResolver_resolve_name
 * Signature: (J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OMNameResolver_1resolve_1name
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OMNameResolver_handle_dnssec_proof_for_offer
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OMNameResolver_1handle_1dnssec_1proof_1for_1offer
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OMNameResolver_handle_dnssec_proof_for_uri
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OMNameResolver_1handle_1dnssec_1proof_1for_1uri
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessenger_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessenger_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Responder_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Responder_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Responder_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Responder_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Responder_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Responder_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Responder_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Responder_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Responder_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Responder_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Responder_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Responder_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Responder_respond
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Responder_1respond
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Responder_respond_with_reply_path
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Responder_1respond_1with_1reply_1path
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ResponseInstruction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ResponseInstruction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ResponseInstruction_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ResponseInstruction_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ResponseInstruction_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ResponseInstruction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ResponseInstruction_into_instructions
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ResponseInstruction_1into_1instructions
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendInstructions_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageSendInstructions_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendInstructions_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendInstructions_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendInstructions_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendInstructions_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendInstructions_with_specified_reply_path
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendInstructions_1with_1specified_1reply_1path
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendInstructions_with_reply_path
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendInstructions_1with_1reply_1path
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendInstructions_without_reply_path
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendInstructions_1without_1reply_1path
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendInstructions_for_reply
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendInstructions_1for_1reply
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageRouter_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageRouter_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DefaultMessageRouter_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DefaultMessageRouter_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DefaultMessageRouter_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DefaultMessageRouter_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DefaultMessageRouter_as_MessageRouter
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DefaultMessageRouter_1as_1MessageRouter
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessagePath_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessagePath_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessagePath_get_intermediate_nodes
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_OnionMessagePath_1get_1intermediate_1nodes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessagePath_set_intermediate_nodes
 * Signature: (J[[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessagePath_1set_1intermediate_1nodes
  (JNIEnv *, jclass, jlong, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessagePath_get_destination
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessagePath_1get_1destination
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessagePath_set_destination
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessagePath_1set_1destination
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessagePath_get_first_node_addresses
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessagePath_1get_1first_1node_1addresses
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessagePath_set_first_node_addresses
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessagePath_1set_1first_1node_1addresses
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessagePath_new
 * Signature: ([[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessagePath_1new
  (JNIEnv *, jclass, jobjectArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessagePath_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessagePath_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessagePath_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessagePath_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessagePath_first_node
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OnionMessagePath_1first_1node
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Destination_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Destination_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Destination_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Destination_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Destination_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Destination_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Destination_node
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Destination_1node
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Destination_blinded_path
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Destination_1blinded_1path
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Destination_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Destination_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Destination_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Destination_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Destination_resolve
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Destination_1resolve
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendSuccess_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SendSuccess_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendSuccess_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendSuccess_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendSuccess_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendSuccess_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendSuccess_buffered
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendSuccess_1buffered
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendSuccess_buffered_awaiting_connection
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendSuccess_1buffered_1awaiting_1connection
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendSuccess_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendSuccess_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendSuccess_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SendSuccess_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SendError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_secp256k1
 * Signature: (Lorg/ldk/enums/Secp256k1Error;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1secp256k1
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_too_big_packet
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1too_1big_1packet
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_too_few_blinded_hops
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1too_1few_1blinded_1hops
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_invalid_first_hop
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1invalid_1first_1hop
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_path_not_found
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1path_1not_1found
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_invalid_message
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1invalid_1message
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_buffer_full
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1buffer_1full
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_get_node_id_failed
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1get_1node_1id_1failed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_unresolved_introduction_node
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1unresolved_1introduction_1node
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_blinded_path_advance_failed
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1blinded_1path_1advance_1failed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SendError_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SendError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SendError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomOnionMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CustomOnionMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeeledOnion_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeeledOnion_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeeledOnion_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeeledOnion_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeeledOnion_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeeledOnion_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeeledOnion_forward
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeeledOnion_1forward
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeeledOnion_receive
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeeledOnion_1receive
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    create_onion_message_resolving_destination
 * Signature: (JJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_create_1onion_1message_1resolving_1destination
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    create_onion_message
 * Signature: (JJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_create_1onion_1message
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    peel_onion_message
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_peel_1onion_1message
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessenger_new
 * Signature: (JJJJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessenger_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessenger_new_with_offline_peer_interception
 * Signature: (JJJJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessenger_1new_1with_1offline_1peer_1interception
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessenger_send_onion_message
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessenger_1send_1onion_1message
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessenger_forward_onion_message
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessenger_1forward_1onion_1message
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessenger_handle_onion_message_response
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessenger_1handle_1onion_1message_1response
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessenger_get_update_future
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessenger_1get_1update_1future
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessenger_as_EventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessenger_1as_1EventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessenger_as_OnionMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessenger_1as_1OnionMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OffersMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessage_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OffersMessage_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessage_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersMessage_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessage_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersMessage_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessage_invoice_request
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersMessage_1invoice_1request
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessage_invoice
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersMessage_1invoice
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessage_invoice_error
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersMessage_1invoice_1error
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessage_is_known_type
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OffersMessage_1is_1known_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessage_as_OnionMessageContents
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersMessage_1as_1OnionMessageContents
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessage_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OffersMessage_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersMessage_read
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersMessage_1read
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Packet_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_get_version
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_Packet_1get_1version
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_set_version
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Packet_1set_1version
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_get_public_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Packet_1get_1public_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_set_public_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Packet_1set_1public_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_get_hop_data
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Packet_1get_1hop_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_set_hop_data
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Packet_1set_1hop_1data
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_get_hmac
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Packet_1get_1hmac
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_set_hmac
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Packet_1set_1hmac
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_new
 * Signature: (B[B[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Packet_1new
  (JNIEnv *, jclass, jbyte, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Packet_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Packet_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Packet_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Packet_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Packet_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Packet_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParsedOnionMessageContents_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ParsedOnionMessageContents_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParsedOnionMessageContents_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ParsedOnionMessageContents_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParsedOnionMessageContents_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ParsedOnionMessageContents_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParsedOnionMessageContents_offers
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ParsedOnionMessageContents_1offers
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParsedOnionMessageContents_dnsresolver
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ParsedOnionMessageContents_1dnsresolver
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParsedOnionMessageContents_custom
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ParsedOnionMessageContents_1custom
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParsedOnionMessageContents_as_OnionMessageContents
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ParsedOnionMessageContents_1as_1OnionMessageContents
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParsedOnionMessageContents_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ParsedOnionMessageContents_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageContents_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessageContents_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageContents_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OnionMessageContents_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OnionMessageContents_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OnionMessageContents_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IntroductionNode_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_IntroductionNode_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IntroductionNode_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IntroductionNode_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IntroductionNode_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IntroductionNode_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IntroductionNode_node_id
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IntroductionNode_1node_1id
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IntroductionNode_directed_short_channel_id
 * Signature: (Lorg/ldk/enums/Direction;J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IntroductionNode_1directed_1short_1channel_1id
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IntroductionNode_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IntroductionNode_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IntroductionNode_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_IntroductionNode_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Direction_clone
 * Signature: (J)Lorg/ldk/enums/Direction;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Direction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Direction_node_one
 * Signature: ()Lorg/ldk/enums/Direction;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Direction_1node_1one
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Direction_node_two
 * Signature: ()Lorg/ldk/enums/Direction;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Direction_1node_1two
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Direction_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Direction_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Direction_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Direction_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeIdLookUp_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeIdLookUp_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EmptyNodeIdLookUp_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_EmptyNodeIdLookUp_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EmptyNodeIdLookUp_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EmptyNodeIdLookUp_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EmptyNodeIdLookUp_as_NodeIdLookUp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_EmptyNodeIdLookUp_1as_1NodeIdLookUp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedHop_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_get_blinded_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedHop_1get_1blinded_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_set_blinded_node_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedHop_1set_1blinded_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_get_encrypted_payload
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedHop_1get_1encrypted_1payload
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_set_encrypted_payload
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedHop_1set_1encrypted_1payload
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_new
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHop_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHop_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHop_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHop_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedHop_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedHop_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHop_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHop_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_get_fee_base_msat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1get_1fee_1base_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_set_fee_base_msat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1set_1fee_1base_1msat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_get_fee_proportional_millionths
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1get_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_set_fee_proportional_millionths
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1set_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_get_htlc_maximum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1get_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_set_htlc_maximum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1set_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_new
 * Signature: (IISJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1new
  (JNIEnv *, jclass, jint, jint, jshort, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPayInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPayInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_get_payinfo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1get_1payinfo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_set_payinfo
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1set_1payinfo
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_one_hop
 * Signature: ([BJSJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1one_1hop
  (JNIEnv *, jclass, jbyteArray, jlong, jshort, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_new
 * Signature: ([J[BJJSJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1new
  (JNIEnv *, jclass, jlongArray, jbyteArray, jlong, jlong, jshort, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_public_introduction_node_id
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1public_1introduction_1node_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_introduction_node
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1introduction_1node
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_blinding_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1blinding_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_blinded_hops
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1blinded_1hops
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedPaymentPath_advance_path_by_one
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedPaymentPath_1advance_1path_1by_1one
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentForwardNode_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentForwardNode_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentForwardNode_get_tlvs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentForwardNode_1get_1tlvs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentForwardNode_set_tlvs
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentForwardNode_1set_1tlvs
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentForwardNode_get_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PaymentForwardNode_1get_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentForwardNode_set_node_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentForwardNode_1set_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentForwardNode_get_htlc_maximum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentForwardNode_1get_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentForwardNode_set_htlc_maximum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentForwardNode_1set_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentForwardNode_new
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentForwardNode_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentForwardNode_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentForwardNode_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentForwardNode_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentForwardNode_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_get_payment_relay
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1get_1payment_1relay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_set_payment_relay
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1set_1payment_1relay
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_get_payment_constraints
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1get_1payment_1constraints
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_set_payment_constraints
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1set_1payment_1constraints
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_get_next_blinding_override
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1get_1next_1blinding_1override
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_set_next_blinding_override
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1set_1next_1blinding_1override
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_new
 * Signature: (JJJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReceiveTlvs_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReceiveTlvs_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReceiveTlvs_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReceiveTlvs_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReceiveTlvs_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReceiveTlvs_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReceiveTlvs_tlvs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReceiveTlvs_1tlvs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_get_payment_secret
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1get_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_set_payment_secret
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1set_1payment_1secret
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_get_payment_constraints
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1get_1payment_1constraints
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_set_payment_constraints
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1set_1payment_1constraints
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_get_payment_context
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1get_1payment_1context
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_set_payment_context
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1set_1payment_1context
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_new
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_authenticate
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1authenticate
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_get_fee_proportional_millionths
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1get_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_set_fee_proportional_millionths
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1set_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_get_fee_base_msat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1get_1fee_1base_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_set_fee_base_msat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1set_1fee_1base_1msat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_new
 * Signature: (SII)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1new
  (JNIEnv *, jclass, jshort, jint, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentConstraints_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentConstraints_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentConstraints_get_max_cltv_expiry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_PaymentConstraints_1get_1max_1cltv_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentConstraints_set_max_cltv_expiry
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentConstraints_1set_1max_1cltv_1expiry
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentConstraints_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentConstraints_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentConstraints_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentConstraints_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentConstraints_new
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentConstraints_1new
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentConstraints_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentConstraints_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentConstraints_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentConstraints_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentContext_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentContext_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentContext_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentContext_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentContext_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentContext_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentContext_bolt12_offer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentContext_1bolt12_1offer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentContext_bolt12_refund
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentContext_1bolt12_1refund
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentContext_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PaymentContext_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12OfferContext_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12OfferContext_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12OfferContext_get_offer_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12OfferContext_1get_1offer_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12OfferContext_set_offer_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12OfferContext_1set_1offer_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12OfferContext_get_invoice_request
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12OfferContext_1get_1invoice_1request
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12OfferContext_set_invoice_request
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12OfferContext_1set_1invoice_1request
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12OfferContext_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12OfferContext_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12OfferContext_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12OfferContext_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12OfferContext_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12OfferContext_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12OfferContext_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12OfferContext_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12RefundContext_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12RefundContext_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12RefundContext_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12RefundContext_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12RefundContext_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12RefundContext_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12RefundContext_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12RefundContext_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12RefundContext_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12RefundContext_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ForwardTlvs_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ForwardTlvs_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReceiveTlvs_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ReceiveTlvs_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnauthenticatedReceiveTlvs_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnauthenticatedReceiveTlvs_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentRelay_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentRelay_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentConstraints_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PaymentConstraints_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentConstraints_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentConstraints_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentContext_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PaymentContext_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentContext_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentContext_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12OfferContext_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12OfferContext_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12OfferContext_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12OfferContext_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12RefundContext_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12RefundContext_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12RefundContext_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12RefundContext_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_one_hop
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1one_1hop
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_new
 * Signature: ([J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1new
  (JNIEnv *, jclass, jlongArray, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_use_compact_introduction_node
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1use_1compact_1introduction_1node
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_public_introduction_node_id
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1public_1introduction_1node_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_introduction_node
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1introduction_1node
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_blinding_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1blinding_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_blinded_hops
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1blinded_1hops
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedMessagePath_advance_path_by_one
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedMessagePath_1advance_1path_1by_1one
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NextMessageHop_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NextMessageHop_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NextMessageHop_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NextMessageHop_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NextMessageHop_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NextMessageHop_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NextMessageHop_node_id
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NextMessageHop_1node_1id
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NextMessageHop_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NextMessageHop_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NextMessageHop_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NextMessageHop_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NextMessageHop_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NextMessageHop_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageForwardNode_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageForwardNode_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageForwardNode_get_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_MessageForwardNode_1get_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageForwardNode_set_node_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageForwardNode_1set_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageForwardNode_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageForwardNode_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageForwardNode_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageForwardNode_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageForwardNode_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageForwardNode_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageForwardNode_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageForwardNode_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageForwardNode_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageForwardNode_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageForwardNode_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageForwardNode_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageForwardNode_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_MessageForwardNode_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageContext_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageContext_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageContext_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageContext_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageContext_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageContext_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageContext_offers
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageContext_1offers
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageContext_async_payments
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageContext_1async_1payments
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageContext_dnsresolver
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageContext_1dnsresolver
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageContext_custom
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageContext_1custom
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersContext_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OffersContext_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersContext_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersContext_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersContext_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersContext_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersContext_invoice_request
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersContext_1invoice_1request
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersContext_outbound_payment
 * Signature: ([BJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersContext_1outbound_1payment
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersContext_inbound_payment
 * Signature: ([BJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersContext_1inbound_1payment
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersContext_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OffersContext_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsContext_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsContext_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsContext_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsContext_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsContext_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsContext_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsContext_outbound_payment
 * Signature: ([BJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsContext_1outbound_1payment
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageContext_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_MessageContext_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageContext_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageContext_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersContext_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OffersContext_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OffersContext_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OffersContext_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsContext_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsContext_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AsyncPaymentsContext_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AsyncPaymentsContext_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverContext_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DNSResolverContext_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverContext_get_nonce
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DNSResolverContext_1get_1nonce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverContext_set_nonce
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DNSResolverContext_1set_1nonce
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverContext_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverContext_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverContext_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverContext_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverContext_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverContext_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverContext_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverContext_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverContext_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DNSResolverContext_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverContext_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DNSResolverContext_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DNSResolverContext_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DNSResolverContext_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingInfo_tx
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingInfo_1tx
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingInfo_out_point
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingInfo_1out_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingInfo_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_FundingInfo_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_bolt11_invoice_payment
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1bolt11_1invoice_1payment
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_bolt12_offer_payment
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1bolt12_1offer_1payment
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_bolt12_refund_payment
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1bolt12_1refund_1payment
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_spontaneous_payment
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1spontaneous_1payment
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_preimage
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1preimage
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_get_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_set_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_get_user_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1get_1user_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_set_user_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1set_1user_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_get_cltv_expiry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1get_1cltv_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_set_cltv_expiry
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1set_1cltv_1expiry
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_get_value_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1get_1value_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_set_value_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1set_1value_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_get_counterparty_skimmed_fee_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1get_1counterparty_1skimmed_1fee_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_set_counterparty_skimmed_fee_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1set_1counterparty_1skimmed_1fee_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_new
 * Signature: (J[BIJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClaimedHTLC_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClaimedHTLC_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PathFailure_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PathFailure_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PathFailure_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PathFailure_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PathFailure_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PathFailure_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PathFailure_initial_send
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PathFailure_1initial_1send
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PathFailure_on_path
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PathFailure_1on_1path
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PathFailure_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PathFailure_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PathFailure_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PathFailure_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PathFailure_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PathFailure_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosureReason_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_counterparty_force_closed
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1counterparty_1force_1closed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_holder_force_closed
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1holder_1force_1closed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_legacy_cooperative_closure
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1legacy_1cooperative_1closure
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_counterparty_initiated_cooperative_closure
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1counterparty_1initiated_1cooperative_1closure
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_locally_initiated_cooperative_closure
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1locally_1initiated_1cooperative_1closure
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_commitment_tx_confirmed
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1commitment_1tx_1confirmed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_funding_timed_out
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1funding_1timed_1out
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_processing_error
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1processing_1error
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_disconnected_peer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1disconnected_1peer
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_outdated_channel_manager
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1outdated_1channel_1manager
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_counterparty_coop_closed_unfunded_channel
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1counterparty_1coop_1closed_1unfunded_1channel
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_funding_batch_closure
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1funding_1batch_1closure
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_htlcs_timed_out
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1htlcs_1timed_1out
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_peer_feerate_too_low
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1peer_1feerate_1too_1low
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ClosureReason_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_ClosureReason_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosureReason_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDestination_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCDestination_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDestination_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDestination_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDestination_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDestination_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDestination_next_hop_channel
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDestination_1next_1hop_1channel
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDestination_unknown_next_hop
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDestination_1unknown_1next_1hop
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDestination_invalid_forward
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDestination_1invalid_1forward
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDestination_invalid_onion
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDestination_1invalid_1onion
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDestination_failed_payment
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDestination_1failed_1payment
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDestination_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_HTLCDestination_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDestination_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCDestination_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCDestination_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCDestination_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_clone
 * Signature: (J)Lorg/ldk/enums/PaymentFailureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_recipient_rejected
 * Signature: ()Lorg/ldk/enums/PaymentFailureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1recipient_1rejected
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_user_abandoned
 * Signature: ()Lorg/ldk/enums/PaymentFailureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1user_1abandoned
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_retries_exhausted
 * Signature: ()Lorg/ldk/enums/PaymentFailureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1retries_1exhausted
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_payment_expired
 * Signature: ()Lorg/ldk/enums/PaymentFailureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1payment_1expired
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_route_not_found
 * Signature: ()Lorg/ldk/enums/PaymentFailureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1route_1not_1found
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_unexpected_error
 * Signature: ()Lorg/ldk/enums/PaymentFailureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1unexpected_1error
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_unknown_required_features
 * Signature: ()Lorg/ldk/enums/PaymentFailureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1unknown_1required_1features
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_invoice_request_expired
 * Signature: ()Lorg/ldk/enums/PaymentFailureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1invoice_1request_1expired
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_invoice_request_rejected
 * Signature: ()Lorg/ldk/enums/PaymentFailureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1invoice_1request_1rejected
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_blinded_path_creation_failed
 * Signature: ()Lorg/ldk/enums/PaymentFailureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1blinded_1path_1creation_1failed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentFailureReason_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentFailureReason_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundChannelFunds_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InboundChannelFunds_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundChannelFunds_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundChannelFunds_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundChannelFunds_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundChannelFunds_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundChannelFunds_push_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundChannelFunds_1push_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundChannelFunds_dual_funded
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InboundChannelFunds_1dual_1funded
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InboundChannelFunds_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InboundChannelFunds_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Event_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_funding_generation_ready
 * Signature: (J[BJ[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1funding_1generation_1ready
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_funding_tx_broadcast_safe
 * Signature: (J[BJ[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1funding_1tx_1broadcast_1safe
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_claimable
 * Signature: ([B[BJJJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1claimable
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_claimed
 * Signature: ([B[BJJ[JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1claimed
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jlong, jlong, jlongArray, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_connection_needed
 * Signature: ([B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1connection_1needed
  (JNIEnv *, jclass, jbyteArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_invoice_received
 * Signature: ([BJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1invoice_1received
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_sent
 * Signature: (J[B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1sent
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_failed
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1failed
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_path_successful
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1path_1successful
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_path_failed
 * Signature: (J[BZJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1path_1failed
  (JNIEnv *, jclass, jlong, jbyteArray, jboolean, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_probe_successful
 * Signature: ([B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1probe_1successful
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_probe_failed
 * Signature: ([B[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1probe_1failed
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_pending_htlcs_forwardable
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1pending_1htlcs_1forwardable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_htlcintercepted
 * Signature: ([BJ[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1htlcintercepted
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_spendable_outputs
 * Signature: ([JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1spendable_1outputs
  (JNIEnv *, jclass, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_forwarded
 * Signature: (JJJJ[B[BJJZJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1forwarded
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jbyteArray, jbyteArray, jlong, jlong, jboolean, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_channel_pending
 * Signature: (J[BJ[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1channel_1pending
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_channel_ready
 * Signature: (J[B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1channel_1ready
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_channel_closed
 * Signature: (J[BJ[BJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1channel_1closed
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jbyteArray, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_discard_funding
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1discard_1funding
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_open_channel_request
 * Signature: (J[BJJJZJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1open_1channel_1request
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jlong, jboolean, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_htlchandling_failed
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1htlchandling_1failed
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_bump_transaction
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1bump_1transaction
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_onion_message_intercepted
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1onion_1message_1intercepted
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_onion_message_peer_connected
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1onion_1message_1peer_1connected
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Event_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Event_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_accept_channel
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1accept_1channel
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_accept_channel_v2
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1accept_1channel_1v2
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_open_channel
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1open_1channel
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_open_channel_v2
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1open_1channel_1v2
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_funding_created
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1funding_1created
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_funding_signed
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1funding_1signed
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_stfu
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1stfu
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_splice_init
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1splice_1init
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_splice_ack
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1splice_1ack
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_splice_locked
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1splice_1locked
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_tx_add_input
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1tx_1add_1input
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_tx_add_output
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1tx_1add_1output
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_tx_remove_input
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1tx_1remove_1input
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_tx_remove_output
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1tx_1remove_1output
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_tx_complete
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1tx_1complete
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_tx_signatures
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1tx_1signatures
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_tx_init_rbf
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1tx_1init_1rbf
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_tx_ack_rbf
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1tx_1ack_1rbf
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_tx_abort
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1tx_1abort
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_channel_ready
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1channel_1ready
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_announcement_signatures
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1announcement_1signatures
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_update_htlcs
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1update_1htlcs
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_revoke_and_ack
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1revoke_1and_1ack
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_closing_signed
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1closing_1signed
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_shutdown
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1shutdown
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_channel_reestablish
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1channel_1reestablish
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_channel_announcement
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1channel_1announcement
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_broadcast_channel_announcement
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1broadcast_1channel_1announcement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_broadcast_channel_update
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1broadcast_1channel_1update
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_broadcast_node_announcement
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1broadcast_1node_1announcement
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_channel_update
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1channel_1update
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_handle_error
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1handle_1error
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_channel_range_query
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1channel_1range_1query
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_short_ids_query
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1short_1ids_1query
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_reply_channel_range
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1reply_1channel_1range
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_gossip_timestamp_filter
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1gossip_1timestamp_1filter
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEventsProvider_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageSendEventsProvider_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EventsProvider_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_EventsProvider_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplayEvent_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplayEvent_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplayEvent_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplayEvent_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplayEvent_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplayEvent_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplayEvent_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplayEvent_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EventHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_EventHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_get_channel_derivation_parameters
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1get_1channel_1derivation_1parameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_set_channel_derivation_parameters
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1set_1channel_1derivation_1parameters
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_get_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1get_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_set_outpoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1set_1outpoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_previous_utxo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1previous_1utxo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_unsigned_tx_input
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1unsigned_1tx_1input
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_witness_script
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1witness_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_tx_input_witness
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1tx_1input_1witness
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnchorDescriptor_derive_channel_signer
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnchorDescriptor_1derive_1channel_1signer
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BumpTransactionEvent_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BumpTransactionEvent_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BumpTransactionEvent_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BumpTransactionEvent_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BumpTransactionEvent_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BumpTransactionEvent_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BumpTransactionEvent_channel_close
 * Signature: (J[B[BI[BJJ[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BumpTransactionEvent_1channel_1close
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jint, jbyteArray, jlong, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BumpTransactionEvent_htlcresolution
 * Signature: (J[B[BI[JI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BumpTransactionEvent_1htlcresolution
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jint, jlongArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BumpTransactionEvent_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BumpTransactionEvent_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Input_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_get_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Input_1get_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_set_outpoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Input_1set_1outpoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_get_previous_utxo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Input_1get_1previous_1utxo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_set_previous_utxo
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Input_1set_1previous_1utxo
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_get_satisfaction_weight
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Input_1get_1satisfaction_1weight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_set_satisfaction_weight
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Input_1set_1satisfaction_1weight
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Input_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Input_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Input_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Input_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Input_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Input_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Utxo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_get_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Utxo_1get_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_set_outpoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Utxo_1set_1outpoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_get_output
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Utxo_1get_1output
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_set_output
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Utxo_1set_1output
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_get_satisfaction_weight
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Utxo_1get_1satisfaction_1weight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_set_satisfaction_weight
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Utxo_1set_1satisfaction_1weight
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Utxo_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Utxo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Utxo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Utxo_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Utxo_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Utxo_new_p2pkh
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Utxo_1new_1p2pkh
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CoinSelection_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CoinSelection_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CoinSelection_get_confirmed_utxos
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CoinSelection_1get_1confirmed_1utxos
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CoinSelection_set_confirmed_utxos
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CoinSelection_1set_1confirmed_1utxos
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CoinSelection_get_change_output
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CoinSelection_1get_1change_1output
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CoinSelection_set_change_output
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CoinSelection_1set_1change_1output
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CoinSelection_new
 * Signature: ([JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CoinSelection_1new
  (JNIEnv *, jclass, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CoinSelection_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CoinSelection_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CoinSelection_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CoinSelection_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CoinSelectionSource_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CoinSelectionSource_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WalletSource_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WalletSource_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Wallet_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Wallet_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Wallet_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Wallet_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Wallet_as_CoinSelectionSource
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Wallet_1as_1CoinSelectionSource
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BumpTransactionEventHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BumpTransactionEventHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BumpTransactionEventHandler_new
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BumpTransactionEventHandler_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BumpTransactionEventHandler_handle_event
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BumpTransactionEventHandler_1handle_1event
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_for_keysend
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1for_1keysend
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_only_static_remote_key
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1only_1static_1remote_1key
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_anchors_zero_htlc_fee_and_dependencies
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1anchors_1zero_1htlc_1fee_1and_1dependencies
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_le_flags
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InitFeatures_1le_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_any_optional_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1any_1optional_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_unknown_bits_from
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_required_unknown_bits_from
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_InitFeatures_1required_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_required_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1required_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_optional_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1optional_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_required_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1required_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_optional_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1optional_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_le_flags
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1le_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_any_optional_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1any_1optional_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_unknown_bits_from
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_required_unknown_bits_from
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1required_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_required_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1required_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_optional_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1optional_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_required_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1required_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_optional_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1optional_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_le_flags
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1le_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_supports_any_optional_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1supports_1any_1optional_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_requires_unknown_bits_from
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1requires_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_required_unknown_bits_from
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1required_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_supports_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1supports_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_set_required_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1set_1required_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_set_optional_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1set_1optional_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_set_required_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1set_1required_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_set_optional_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1set_1optional_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_le_flags
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1le_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_supports_any_optional_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1supports_1any_1optional_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_requires_unknown_bits_from
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1requires_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_required_unknown_bits_from
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1required_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_supports_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1supports_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_required_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1required_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_optional_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1optional_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_required_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1required_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_optional_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1optional_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_le_flags
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1le_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_supports_any_optional_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1supports_1any_1optional_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_requires_unknown_bits_from
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1requires_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_required_unknown_bits_from
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1required_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_supports_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1supports_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_set_required_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1set_1required_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_set_optional_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1set_1optional_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_set_required_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1set_1required_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OfferFeatures_set_optional_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OfferFeatures_1set_1optional_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_le_flags
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1le_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_supports_any_optional_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1supports_1any_1optional_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_requires_unknown_bits_from
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1requires_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_required_unknown_bits_from
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1required_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_supports_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1supports_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_set_required_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1set_1required_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_set_optional_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1set_1optional_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_set_required_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1set_1required_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceRequestFeatures_set_optional_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceRequestFeatures_1set_1optional_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_le_flags
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1le_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_supports_any_optional_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1supports_1any_1optional_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_requires_unknown_bits_from
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1requires_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_required_unknown_bits_from
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1required_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_supports_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1supports_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_set_required_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1set_1required_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_set_optional_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1set_1optional_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_set_required_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1set_1required_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_set_optional_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1set_1optional_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_le_flags
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1le_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_supports_any_optional_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1supports_1any_1optional_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_requires_unknown_bits_from
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1requires_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_required_unknown_bits_from
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1required_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_supports_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1supports_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_set_required_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1set_1required_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_set_optional_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1set_1optional_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_set_required_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1set_1required_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BlindedHopFeatures_set_optional_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BlindedHopFeatures_1set_1optional_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_le_flags
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1le_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_supports_any_optional_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1supports_1any_1optional_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_requires_unknown_bits_from
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1requires_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_required_unknown_bits_from
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1required_1unknown_1bits_1from
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_supports_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1supports_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_required_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1required_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_optional_feature_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1optional_1feature_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_required_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1required_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_optional_custom_bit
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1optional_1custom_1bit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_clear_upfront_shutdown_script
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1clear_1upfront_1shutdown_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_clear_upfront_shutdown_script
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1clear_1upfront_1shutdown_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_clear_shutdown_anysegwit
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1clear_1shutdown_1anysegwit
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_clear_shutdown_anysegwit
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1clear_1shutdown_1anysegwit
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_clear_wumbo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1clear_1wumbo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_clear_wumbo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1clear_1wumbo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_clear_scid_privacy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1clear_1scid_1privacy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_clear_scid_privacy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1clear_1scid_1privacy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_clear_scid_privacy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1clear_1scid_1privacy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_clear_anchors_zero_fee_htlc_tx
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1clear_1anchors_1zero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_clear_anchors_zero_fee_htlc_tx
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1clear_1anchors_1zero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_clear_anchors_zero_fee_htlc_tx
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1clear_1anchors_1zero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_clear_route_blinding
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1clear_1route_1blinding
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_clear_route_blinding
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1clear_1route_1blinding
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_data_loss_protect_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1data_1loss_1protect_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_data_loss_protect_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1data_1loss_1protect_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_data_loss_protect
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1data_1loss_1protect
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_data_loss_protect_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1data_1loss_1protect_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_data_loss_protect_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1data_1loss_1protect_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_data_loss_protect
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1data_1loss_1protect
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_data_loss_protect
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1data_1loss_1protect
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_data_loss_protect
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1data_1loss_1protect
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_initial_routing_sync_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1initial_1routing_1sync_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_initial_routing_sync_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1initial_1routing_1sync_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_initial_routing_sync
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1initial_1routing_1sync
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_upfront_shutdown_script_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1upfront_1shutdown_1script_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_upfront_shutdown_script_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1upfront_1shutdown_1script_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_upfront_shutdown_script
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1upfront_1shutdown_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_upfront_shutdown_script_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1upfront_1shutdown_1script_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_upfront_shutdown_script_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1upfront_1shutdown_1script_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_upfront_shutdown_script
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1upfront_1shutdown_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_upfront_shutdown_script
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1upfront_1shutdown_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_upfront_shutdown_script
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1upfront_1shutdown_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_gossip_queries_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1gossip_1queries_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_gossip_queries_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1gossip_1queries_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_gossip_queries
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1gossip_1queries
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_gossip_queries_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1gossip_1queries_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_gossip_queries_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1gossip_1queries_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_gossip_queries
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1gossip_1queries
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_gossip_queries
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1gossip_1queries
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_gossip_queries
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1gossip_1queries
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_variable_length_onion_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1variable_1length_1onion_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_variable_length_onion_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1variable_1length_1onion_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_variable_length_onion
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1variable_1length_1onion
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_variable_length_onion_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1variable_1length_1onion_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_variable_length_onion_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1variable_1length_1onion_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_variable_length_onion
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1variable_1length_1onion
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_variable_length_onion_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1variable_1length_1onion_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_variable_length_onion_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1variable_1length_1onion_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_supports_variable_length_onion
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1supports_1variable_1length_1onion
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_variable_length_onion
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1variable_1length_1onion
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_variable_length_onion
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1variable_1length_1onion
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_requires_variable_length_onion
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1requires_1variable_1length_1onion
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_static_remote_key_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1static_1remote_1key_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_static_remote_key_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1static_1remote_1key_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_static_remote_key
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1static_1remote_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_static_remote_key_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1static_1remote_1key_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_static_remote_key_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1static_1remote_1key_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_static_remote_key
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1static_1remote_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_static_remote_key_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1static_1remote_1key_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_static_remote_key_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1static_1remote_1key_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_supports_static_remote_key
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1supports_1static_1remote_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_static_remote_key
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1static_1remote_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_static_remote_key
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1static_1remote_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_requires_static_remote_key
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1requires_1static_1remote_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_payment_secret_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1payment_1secret_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_payment_secret_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1payment_1secret_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_payment_secret
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_payment_secret_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1payment_1secret_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_payment_secret_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1payment_1secret_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_payment_secret
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_payment_secret_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1payment_1secret_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_payment_secret_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1payment_1secret_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_supports_payment_secret
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1supports_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_payment_secret
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_payment_secret
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_requires_payment_secret
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1requires_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_basic_mpp_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1basic_1mpp_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_basic_mpp_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1basic_1mpp_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_basic_mpp
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1basic_1mpp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_basic_mpp_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1basic_1mpp_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_basic_mpp_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1basic_1mpp_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_basic_mpp
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1basic_1mpp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_basic_mpp_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1basic_1mpp_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_basic_mpp_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1basic_1mpp_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_supports_basic_mpp
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1supports_1basic_1mpp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_set_basic_mpp_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1set_1basic_1mpp_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_set_basic_mpp_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1set_1basic_1mpp_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_supports_basic_mpp
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1supports_1basic_1mpp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_basic_mpp
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1basic_1mpp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_basic_mpp
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1basic_1mpp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_requires_basic_mpp
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1requires_1basic_1mpp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_requires_basic_mpp
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1requires_1basic_1mpp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_wumbo_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1wumbo_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_wumbo_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1wumbo_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_wumbo
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1wumbo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_wumbo_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1wumbo_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_wumbo_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1wumbo_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_wumbo
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1wumbo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_wumbo
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1wumbo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_wumbo
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1wumbo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_anchors_nonzero_fee_htlc_tx_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1anchors_1nonzero_1fee_1htlc_1tx_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_anchors_nonzero_fee_htlc_tx_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1anchors_1nonzero_1fee_1htlc_1tx_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_anchors_nonzero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1anchors_1nonzero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_anchors_nonzero_fee_htlc_tx_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1anchors_1nonzero_1fee_1htlc_1tx_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_anchors_nonzero_fee_htlc_tx_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1anchors_1nonzero_1fee_1htlc_1tx_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_anchors_nonzero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1anchors_1nonzero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_anchors_nonzero_fee_htlc_tx_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1anchors_1nonzero_1fee_1htlc_1tx_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_anchors_nonzero_fee_htlc_tx_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1anchors_1nonzero_1fee_1htlc_1tx_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_supports_anchors_nonzero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1supports_1anchors_1nonzero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_anchors_nonzero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1anchors_1nonzero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_anchors_nonzero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1anchors_1nonzero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_requires_anchors_nonzero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1requires_1anchors_1nonzero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_anchors_zero_fee_htlc_tx_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1anchors_1zero_1fee_1htlc_1tx_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_anchors_zero_fee_htlc_tx_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1anchors_1zero_1fee_1htlc_1tx_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_anchors_zero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1anchors_1zero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_anchors_zero_fee_htlc_tx_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1anchors_1zero_1fee_1htlc_1tx_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_anchors_zero_fee_htlc_tx_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1anchors_1zero_1fee_1htlc_1tx_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_anchors_zero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1anchors_1zero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_anchors_zero_fee_htlc_tx_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1anchors_1zero_1fee_1htlc_1tx_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_anchors_zero_fee_htlc_tx_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1anchors_1zero_1fee_1htlc_1tx_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_supports_anchors_zero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1supports_1anchors_1zero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_anchors_zero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1anchors_1zero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_anchors_zero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1anchors_1zero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_requires_anchors_zero_fee_htlc_tx
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1requires_1anchors_1zero_1fee_1htlc_1tx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_route_blinding_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1route_1blinding_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_route_blinding_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1route_1blinding_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_route_blinding
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1route_1blinding
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_route_blinding_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1route_1blinding_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_route_blinding_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1route_1blinding_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_route_blinding
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1route_1blinding
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_route_blinding
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1route_1blinding
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_route_blinding
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1route_1blinding
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_shutdown_any_segwit_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1shutdown_1any_1segwit_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_shutdown_any_segwit_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1shutdown_1any_1segwit_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_shutdown_anysegwit
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1shutdown_1anysegwit
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_shutdown_any_segwit_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1shutdown_1any_1segwit_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_shutdown_any_segwit_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1shutdown_1any_1segwit_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_shutdown_anysegwit
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1shutdown_1anysegwit
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_shutdown_anysegwit
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1shutdown_1anysegwit
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_shutdown_anysegwit
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1shutdown_1anysegwit
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_dual_fund_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1dual_1fund_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_dual_fund_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1dual_1fund_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_dual_fund
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1dual_1fund
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_dual_fund_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1dual_1fund_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_dual_fund_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1dual_1fund_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_dual_fund
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1dual_1fund
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_dual_fund
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1dual_1fund
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_dual_fund
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1dual_1fund
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_taproot_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1taproot_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_taproot_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1taproot_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_taproot
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1taproot
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_taproot_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1taproot_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_taproot_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1taproot_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_taproot
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1taproot
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_taproot_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1taproot_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_taproot_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1taproot_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_supports_taproot
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1supports_1taproot
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_taproot
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1taproot
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_taproot
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1taproot
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_requires_taproot
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1requires_1taproot
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_onion_messages_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1onion_1messages_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_onion_messages_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1onion_1messages_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_onion_messages
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1onion_1messages
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_onion_messages_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1onion_1messages_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_onion_messages_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1onion_1messages_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_onion_messages
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1onion_1messages
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_onion_messages
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1onion_1messages
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_onion_messages
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1onion_1messages
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_channel_type_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1channel_1type_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_channel_type_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1channel_1type_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_channel_type
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1channel_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_channel_type_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1channel_1type_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_channel_type_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1channel_1type_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_channel_type
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1channel_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_channel_type
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1channel_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_channel_type
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1channel_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_scid_privacy_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1scid_1privacy_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_scid_privacy_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1scid_1privacy_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_scid_privacy
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1scid_1privacy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_scid_privacy_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1scid_1privacy_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_scid_privacy_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1scid_1privacy_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_scid_privacy
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1scid_1privacy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_scid_privacy_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1scid_1privacy_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_scid_privacy_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1scid_1privacy_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_supports_scid_privacy
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1supports_1scid_1privacy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_scid_privacy
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1scid_1privacy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_scid_privacy
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1scid_1privacy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_requires_scid_privacy
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1requires_1scid_1privacy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_payment_metadata_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1payment_1metadata_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_payment_metadata_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1payment_1metadata_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_supports_payment_metadata
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1supports_1payment_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_requires_payment_metadata
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1requires_1payment_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_zero_conf_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1zero_1conf_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_zero_conf_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1zero_1conf_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_zero_conf
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1zero_1conf
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_zero_conf_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1zero_1conf_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_zero_conf_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1zero_1conf_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_zero_conf
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1zero_1conf
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_zero_conf_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1zero_1conf_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_set_zero_conf_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1set_1zero_1conf_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_supports_zero_conf
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1supports_1zero_1conf
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_zero_conf
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1zero_1conf
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_zero_conf
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1zero_1conf
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_requires_zero_conf
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1requires_1zero_1conf
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_keysend_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1keysend_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_keysend_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1keysend_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_keysend
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1keysend
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_keysend
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1keysend
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_trampoline_routing_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1trampoline_1routing_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_set_trampoline_routing_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1set_1trampoline_1routing_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_supports_trampoline_routing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1supports_1trampoline_1routing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_trampoline_routing_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1trampoline_1routing_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_trampoline_routing_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1trampoline_1routing_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_trampoline_routing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1trampoline_1routing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_trampoline_routing_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1trampoline_1routing_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_set_trampoline_routing_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1set_1trampoline_1routing_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_supports_trampoline_routing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1supports_1trampoline_1routing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_set_trampoline_routing_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1set_1trampoline_1routing_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_set_trampoline_routing_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1set_1trampoline_1routing_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_supports_trampoline_routing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1supports_1trampoline_1routing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_trampoline_routing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1trampoline_1routing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_trampoline_routing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1trampoline_1routing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceFeatures_requires_trampoline_routing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceFeatures_1requires_1trampoline_1routing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt12InvoiceFeatures_requires_trampoline_routing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt12InvoiceFeatures_1requires_1trampoline_1routing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_dns_resolution_optional
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1dns_1resolution_1optional
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_set_dns_resolution_required
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1set_1dns_1resolution_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_supports_dns_resolution
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1supports_1dns_1resolution
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_dns_resolution
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1dns_1resolution
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RoutingFees_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_get_base_msat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_RoutingFees_1get_1base_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_set_base_msat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RoutingFees_1set_1base_1msat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_get_proportional_millionths
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_RoutingFees_1get_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_set_proportional_millionths
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RoutingFees_1set_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_new
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingFees_1new
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RoutingFees_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingFees_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingFees_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingFees_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHint_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_get_a
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_RouteHint_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_set_a
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHint_1set_1a
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_new
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHint_1new
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHint_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHint_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHint_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RouteHint_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_src_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1src_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_src_node_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1src_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_fees
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1fees
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_fees
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1fees
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_htlc_maximum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_htlc_maximum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_new
 * Signature: ([BJJSJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jshort, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UntrustedString_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UntrustedString_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UntrustedString_get_a
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_UntrustedString_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UntrustedString_set_a
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UntrustedString_1set_1a
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UntrustedString_new
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UntrustedString_1new
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UntrustedString_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UntrustedString_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UntrustedString_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UntrustedString_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UntrustedString_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UntrustedString_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UntrustedString_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UntrustedString_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UntrustedString_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_UntrustedString_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrintableString_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PrintableString_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrintableString_get_a
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_PrintableString_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrintableString_set_a
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PrintableString_1set_1a
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrintableString_new
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrintableString_1new
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrintableString_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_PrintableString_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FilesystemStore_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FilesystemStore_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FilesystemStore_new
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FilesystemStore_1new
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FilesystemStore_get_data_dir
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_FilesystemStore_1get_1data_1dir
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FilesystemStore_as_KVStore
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FilesystemStore_1as_1KVStore
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FilesystemStore_as_MigratableKVStore
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FilesystemStore_1as_1MigratableKVStore
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BackgroundProcessor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BackgroundProcessor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipSync_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_GossipSync_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipSync_p2_p
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipSync_1p2_1p
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipSync_rapid
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipSync_1rapid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipSync_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipSync_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BackgroundProcessor_start
 * Signature: (JJJJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BackgroundProcessor_1start
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BackgroundProcessor_join
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BackgroundProcessor_1join
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BackgroundProcessor_stop
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BackgroundProcessor_1stop
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11ParseError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11ParseError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11ParseError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11ParseError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11ParseError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11ParseError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11ParseError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11ParseError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParseOrSemanticError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ParseOrSemanticError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParseOrSemanticError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ParseOrSemanticError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParseOrSemanticError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ParseOrSemanticError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParseOrSemanticError_parse_error
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ParseOrSemanticError_1parse_1error
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParseOrSemanticError_semantic_error
 * Signature: (Lorg/ldk/enums/Bolt11SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ParseOrSemanticError_1semantic_1error
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParseOrSemanticError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ParseOrSemanticError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceDescription_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceDescription_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceDescription_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceDescription_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceDescription_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceDescription_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceDescription_direct
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceDescription_1direct
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceDescription_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceDescription_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceDescription_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceDescription_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceDescription_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceDescription_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_get_data
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1get_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_set_data
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1set_1data
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RawDataPart_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_get_timestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawDataPart_1get_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_set_timestamp
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RawDataPart_1set_1timestamp
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RawDataPart_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawDataPart_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawDataPart_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawDataPart_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_clone
 * Signature: (J)Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SiPrefix_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_milli
 * Signature: ()Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SiPrefix_1milli
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_micro
 * Signature: ()Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SiPrefix_1micro
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_nano
 * Signature: ()Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SiPrefix_1nano
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_pico
 * Signature: ()Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SiPrefix_1pico
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SiPrefix_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SiPrefix_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_multiplier
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SiPrefix_1multiplier
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_clone
 * Signature: (J)Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_bitcoin
 * Signature: ()Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1bitcoin
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_bitcoin_testnet
 * Signature: ()Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1bitcoin_1testnet
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_regtest
 * Signature: ()Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1regtest
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_simnet
 * Signature: ()Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1simnet
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_signet
 * Signature: ()Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1signet
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Currency_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Currency_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sha256_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Sha256_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sha256_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sha256_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sha256_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sha256_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sha256_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sha256_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sha256_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Sha256_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sha256_from_bytes
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sha256_1from_1bytes
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Description_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Description_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Description_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Description_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Description_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiryDelta_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiryDelta_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiryDelta_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiryDelta_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiryDelta_set_a
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiryDelta_1set_1a
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiryDelta_new
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiryDelta_1new
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiryDelta_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiryDelta_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiryDelta_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiryDelta_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiryDelta_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiryDelta_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiryDelta_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiryDelta_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Fallback_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_seg_wit_program
 * Signature: (B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1seg_1wit_1program
  (JNIEnv *, jclass, jbyte, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_pub_key_hash
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1pub_1key_1hash
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_script_hash
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1script_1hash
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Fallback_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceSignature_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceSignature_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceSignature_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceSignature_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceSignature_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceSignature_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceSignature_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceSignature_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceSignature_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceSignature_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceSignature_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceSignature_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceSignature_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceSignature_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11InvoiceSignature_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11InvoiceSignature_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_into_parts
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1into_1parts
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_raw_invoice
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1raw_1invoice
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_signable_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1signable_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_signature
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_recover_payee_pub_key
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1recover_1payee_1pub_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_check_signature
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1check_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_signable_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1signable_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_payment_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_description
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1description
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_payee_pub_key
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1payee_1pub_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_description_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1description_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_expiry_time
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1expiry_1time
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_min_final_cltv_expiry_delta
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1min_1final_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_payment_secret
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_payment_metadata
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1payment_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_private_routes
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1private_1routes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_amount_pico_btc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1amount_1pico_1btc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawBolt11Invoice_currency
 * Signature: (J)Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_RawBolt11Invoice_1currency
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_from_unix_timestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1from_1unix_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_from_system_time
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1from_1system_1time
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_from_duration_since_epoch
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1from_1duration_1since_1epoch
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_as_unix_timestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1as_1unix_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_as_duration_since_epoch
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1as_1duration_1since_1epoch
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_as_time
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1as_1time
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_signable_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1signable_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_into_signed_raw
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1into_1signed_1raw
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_check_signature
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1check_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_from_signed
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1from_1signed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_timestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_duration_since_epoch
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1duration_1since_1epoch
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_payment_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_payee_pub_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1payee_1pub_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_payment_secret
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_payment_metadata
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1payment_1metadata
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_recover_payee_pub_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1recover_1payee_1pub_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_get_payee_pub_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1get_1payee_1pub_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_expires_at
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1expires_1at
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_expiry_time
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1expiry_1time
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_is_expired
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1is_1expired
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_duration_until_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1duration_1until_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_expiration_remaining_from_epoch
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1expiration_1remaining_1from_1epoch
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_would_expire
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1would_1expire
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_min_final_cltv_expiry_delta
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1min_1final_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_fallback_addresses
 * Signature: (J)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1fallback_1addresses
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_private_routes
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1private_1routes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_route_hints
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1route_1hints
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_currency
 * Signature: (J)Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1currency
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_amount_milli_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1amount_1milli_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_new
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Description_1new
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Description_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_into_inner
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Description_1into_1inner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_as_inner
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Description_1as_1inner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Description_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_from_seconds
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1from_1seconds
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_from_duration
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1from_1duration
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_as_seconds
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1as_1seconds
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_as_duration
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1as_1duration
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_new
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1new
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_into_inner
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1into_1inner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_clone
 * Signature: (J)Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_description_too_long
 * Signature: ()Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1description_1too_1long
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_route_too_long
 * Signature: ()Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1route_1too_1long
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_timestamp_out_of_bounds
 * Signature: ()Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1timestamp_1out_1of_1bounds
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_invalid_amount
 * Signature: ()Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1invalid_1amount
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_missing_route_hints
 * Signature: ()Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1missing_1route_1hints
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_min_final_cltv_expiry_delta_too_short
 * Signature: ()Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1min_1final_1cltv_1expiry_1delta_1too_1short
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CreationError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_CreationError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_clone
 * Signature: (J)Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_no_payment_hash
 * Signature: ()Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1no_1payment_1hash
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_multiple_payment_hashes
 * Signature: ()Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1multiple_1payment_1hashes
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_no_description
 * Signature: ()Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1no_1description
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_multiple_descriptions
 * Signature: ()Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1multiple_1descriptions
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_no_payment_secret
 * Signature: ()Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1no_1payment_1secret
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_multiple_payment_secrets
 * Signature: ()Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1multiple_1payment_1secrets
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_invalid_features
 * Signature: ()Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1invalid_1features
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_invalid_recovery_id
 * Signature: ()Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1invalid_1recovery_1id
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_invalid_signature
 * Signature: ()Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1invalid_1signature
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_imprecise_amount
 * Signature: ()Lorg/ldk/enums/Bolt11SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1imprecise_1amount
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11SemanticError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Bolt11SemanticError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_sign_error
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1sign_1error
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_creation_error
 * Signature: (Lorg/ldk/enums/CreationError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1creation_1error
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_from_str
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SiPrefix_1from_1str
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_from_str
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1from_1str
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_from_str
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1from_1str
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11ParseError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Bolt11ParseError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ParseOrSemanticError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_ParseOrSemanticError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Bolt11Invoice_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Bolt11Invoice_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawBolt11Invoice_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_SignedRawBolt11Invoice_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Currency_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_SiPrefix_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GraphSyncError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_GraphSyncError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GraphSyncError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GraphSyncError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GraphSyncError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GraphSyncError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GraphSyncError_decode_error
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GraphSyncError_1decode_1error
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GraphSyncError_lightning_error
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GraphSyncError_1lightning_1error
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RapidGossipSync_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RapidGossipSync_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RapidGossipSync_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RapidGossipSync_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RapidGossipSync_sync_network_graph_with_file_path
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RapidGossipSync_1sync_1network_1graph_1with_1file_1path
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RapidGossipSync_update_network_graph
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RapidGossipSync_1update_1network_1graph
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RapidGossipSync_update_network_graph_no_std
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RapidGossipSync_1update_1network_1graph_1no_1std
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RapidGossipSync_is_initial_sync_complete
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RapidGossipSync_1is_1initial_1sync_1complete
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
